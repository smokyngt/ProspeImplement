{
  "openapi": "3.0.3",
  "info": {
    "description": "API documentation for the Prosperify platform",
    "title": "Prosperify API",
    "version": "1.0.0"
  },
  "components": {
    "securitySchemes": {
      "apiKey": {
        "description": "API Key for service authentication",
        "in": "header",
        "name": "x-prosperify-key",
        "type": "apiKey"
      },
      "bearerAuth": {
        "bearerFormat": "JWT",
        "description": "JWT token for user authentication",
        "scheme": "bearer",
        "type": "http"
      }
    },
    "schemas": {

    }
  },
  "paths": {
    "/v1/assistants/new": {
      "post": {
        "tags": [
          "assistants"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "additionalProperties": false,
                "description": "Request body for creating a new assistant",
                "properties": {
                  "name": {
                    "description": "Display name for the assistant",
                    "example": "Customer Support Assistant",
                    "maxLength": 100,
                    "minLength": 1,
                    "type": "string"
                  }
                },
                "required": [
                  "name"
                ],
                "title": "Create Assistant Body",
                "type": "object"
              }
            }
          },
          "required": true,
          "description": "Request body for creating a new assistant"
        },
        "responses": {
          "200": {
            "description": "Assistant Created Successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard response envelope containing event information and data payload",
                      "properties": {
                        "data": {
                          "description": "Response data payload containing the actual response content",
                          "type": "object"
                        },
                        "event": {
                          "additionalProperties": false,
                          "description": "Event information describing the operation performed",
                          "properties": {
                            "code": {
                              "description": "Event code identifying the specific operation that occurred",
                              "pattern": "^[a-z]+\\.[a-z_]+$",
                              "type": "string"
                            },
                            "correlationId": {
                              "description": "Unique correlation ID linking this event to the original request for tracing",
                              "example": "123e4567-e89b-12d3-a456-426614174000",
                              "format": "uuid",
                              "type": "string"
                            },
                            "metadata": {
                              "additionalProperties": true,
                              "description": "Event-specific metadata providing additional context",
                              "example": {
                                "field": "value"
                              },
                              "type": "object"
                            },
                            "payload": {
                              "additionalProperties": true,
                              "description": "Event payload containing detailed information about the event",
                              "example": {
                                "field": "value"
                              },
                              "type": "object"
                            }
                          },
                          "required": [
                            "code"
                          ],
                          "type": "object"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the response was generated",
                          "example": 1690000000,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "event",
                        "timestamp"
                      ],
                      "title": "Reply Envelope",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "data": {
                          "additionalProperties": false,
                          "properties": {
                            "assistant": {
                              "additionalProperties": false,
                              "description": "Assistant entity representing an AI assistant owned by an organization",
                              "properties": {
                                "createdAt": {
                                  "description": "UNIX timestamp (ms) when the assistant was created",
                                  "example": 1726282800000,
                                  "format": "int64",
                                  "minimum": 0,
                                  "type": "number"
                                },
                                "createdBy": {
                                  "description": "UUID of the actor who created the assistant",
                                  "format": "uuid",
                                  "type": "string"
                                },
                                "id": {
                                  "description": "Unique identifier for the assistant",
                                  "example": "550e8400-e29b-41d4-a716-446655440000",
                                  "format": "uuid",
                                  "type": "string"
                                },
                                "name": {
                                  "description": "Display name of the assistant",
                                  "example": "Customer Support Assistant",
                                  "type": "string"
                                },
                                "object": {
                                  "description": "Object type identifier",
                                  "type": "string",
                                  "enum": [
                                    "assistant"
                                  ]
                                },
                                "organization": {
                                  "description": "UUID of the organization that owns the assistant",
                                  "format": "uuid",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "id",
                                "name",
                                "object",
                                "organization",
                                "createdAt",
                                "createdBy"
                              ],
                              "title": "Assistant",
                              "type": "object"
                            }
                          },
                          "required": [
                            "assistant"
                          ],
                          "type": "object"
                        },
                        "event": {
                          "properties": {
                            "code": {
                              "enum": [
                                "assistant.created"
                              ]
                            }
                          },
                          "type": "object"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Validation Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "description": "Validation error response with detailed field-level errors",
                      "properties": {
                        "code": {
                          "description": "Fixed error code for validation errors",
                          "enum": [
                            "validation.error"
                          ]
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Validation-specific metadata containing detailed error information",
                          "properties": {
                            "validation_errors": {
                              "description": "Array of field-level validation errors",
                              "items": {
                                "additionalProperties": false,
                                "description": "Individual field validation error",
                                "properties": {
                                  "code": {
                                    "description": "Specific validation error code for this field",
                                    "example": "required",
                                    "type": "string"
                                  },
                                  "params": {
                                    "additionalProperties": true,
                                    "description": "Validation parameters providing context for the error",
                                    "example": {
                                      "expectedType": "string",
                                      "receivedType": "number"
                                    },
                                    "type": "object"
                                  },
                                  "path": {
                                    "description": "JSON path to the field that failed validation",
                                    "example": "/username",
                                    "pattern": "^/",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "code",
                                  "path",
                                  "params"
                                ],
                                "type": "object"
                              },
                              "minItems": 1,
                              "type": "array"
                            }
                          },
                          "required": [
                            "validation_errors"
                          ],
                          "type": "object"
                        },
                        "status": {
                          "description": "HTTP status code for validation errors",
                          "enum": [400]
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "description": "Validation error response extending the base error response",
                  "title": "Validation Error"
                }
              }
            }
          },
          "401": {
            "description": "Assistant Authentication Failed",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "code": {
                          "enum": [
                            "unauthorized"
                          ]
                        },
                        "status": {
                          "enum": [403]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Assistant Not Found",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "code": {
                          "enum": [
                            "assistant.not.found"
                          ]
                        },
                        "status": {
                          "enum": [404]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Assistant Create Failed",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "code": {
                          "enum": [
                            "assistant.creation.failed"
                          ]
                        },
                        "status": {
                          "enum": [500]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/assistants/{id}": {
      "get": {
        "tags": [
          "assistants"
        ],
        "parameters": [
          {
            "schema": {
              "example": "123e4567-e89b-12d3-a456-426614174000",
              "format": "uuid",
              "type": "string"
            },
            "in": "path",
            "name": "id",
            "required": true,
            "description": "Unique identifier of the assistant"
          }
        ],
        "responses": {
          "200": {
            "description": "Assistant Retrieved Successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard response envelope containing event information and data payload",
                      "properties": {
                        "data": {
                          "description": "Response data payload containing the actual response content",
                          "type": "object"
                        },
                        "event": {
                          "additionalProperties": false,
                          "description": "Event information describing the operation performed",
                          "properties": {
                            "code": {
                              "description": "Event code identifying the specific operation that occurred",
                              "pattern": "^[a-z]+\\.[a-z_]+$",
                              "type": "string"
                            },
                            "correlationId": {
                              "description": "Unique correlation ID linking this event to the original request for tracing",
                              "example": "123e4567-e89b-12d3-a456-426614174000",
                              "format": "uuid",
                              "type": "string"
                            },
                            "metadata": {
                              "additionalProperties": true,
                              "description": "Event-specific metadata providing additional context",
                              "example": {
                                "field": "value"
                              },
                              "type": "object"
                            },
                            "payload": {
                              "additionalProperties": true,
                              "description": "Event payload containing detailed information about the event",
                              "example": {
                                "field": "value"
                              },
                              "type": "object"
                            }
                          },
                          "required": [
                            "code"
                          ],
                          "type": "object"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the response was generated",
                          "example": 1690000000,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "event",
                        "timestamp"
                      ],
                      "title": "Reply Envelope",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "data": {
                          "additionalProperties": false,
                          "properties": {
                            "assistant": {
                              "additionalProperties": false,
                              "description": "Assistant entity representing an AI assistant owned by an organization",
                              "properties": {
                                "createdAt": {
                                  "description": "UNIX timestamp (ms) when the assistant was created",
                                  "example": 1726282800000,
                                  "format": "int64",
                                  "minimum": 0,
                                  "type": "number"
                                },
                                "createdBy": {
                                  "description": "UUID of the actor who created the assistant",
                                  "format": "uuid",
                                  "type": "string"
                                },
                                "id": {
                                  "description": "Unique identifier for the assistant",
                                  "example": "550e8400-e29b-41d4-a716-446655440000",
                                  "format": "uuid",
                                  "type": "string"
                                },
                                "name": {
                                  "description": "Display name of the assistant",
                                  "example": "Customer Support Assistant",
                                  "type": "string"
                                },
                                "object": {
                                  "description": "Object type identifier",
                                  "type": "string",
                                  "enum": [
                                    "assistant"
                                  ]
                                },
                                "organization": {
                                  "description": "UUID of the organization that owns the assistant",
                                  "format": "uuid",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "id",
                                "name",
                                "object",
                                "organization",
                                "createdAt",
                                "createdBy"
                              ],
                              "title": "Assistant",
                              "type": "object"
                            }
                          },
                          "required": [
                            "assistant"
                          ],
                          "type": "object"
                        },
                        "event": {
                          "properties": {
                            "code": {
                              "enum": [
                                "assistants.retrieved"
                              ]
                            }
                          },
                          "type": "object"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Validation Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "description": "Validation error response with detailed field-level errors",
                      "properties": {
                        "code": {
                          "description": "Fixed error code for validation errors",
                          "enum": [
                            "validation.error"
                          ]
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Validation-specific metadata containing detailed error information",
                          "properties": {
                            "validation_errors": {
                              "description": "Array of field-level validation errors",
                              "items": {
                                "additionalProperties": false,
                                "description": "Individual field validation error",
                                "properties": {
                                  "code": {
                                    "description": "Specific validation error code for this field",
                                    "example": "required",
                                    "type": "string"
                                  },
                                  "params": {
                                    "additionalProperties": true,
                                    "description": "Validation parameters providing context for the error",
                                    "example": {
                                      "expectedType": "string",
                                      "receivedType": "number"
                                    },
                                    "type": "object"
                                  },
                                  "path": {
                                    "description": "JSON path to the field that failed validation",
                                    "example": "/username",
                                    "pattern": "^/",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "code",
                                  "path",
                                  "params"
                                ],
                                "type": "object"
                              },
                              "minItems": 1,
                              "type": "array"
                            }
                          },
                          "required": [
                            "validation_errors"
                          ],
                          "type": "object"
                        },
                        "status": {
                          "description": "HTTP status code for validation errors",
                          "enum": [400]
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "description": "Validation error response extending the base error response",
                  "title": "Validation Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "code": {
                          "enum": [
                            "unauthorized"
                          ]
                        },
                        "status": {
                          "enum": [403]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Assistant not found",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "code": {
                          "enum": [
                            "assistant.not.found"
                          ]
                        },
                        "status": {
                          "enum": [404]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Assistant Retrieve Failed",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "code": {
                          "enum": [
                            "assistant.retrieve.failed"
                          ]
                        },
                        "status": {
                          "enum": [500]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "assistants"
        ],
        "parameters": [
          {
            "schema": {
              "example": "123e4567-e89b-12d3-a456-426614174000",
              "format": "uuid",
              "type": "string"
            },
            "in": "path",
            "name": "id",
            "required": true,
            "description": "Unique identifier of the assistant"
          }
        ],
        "responses": {
          "200": {
            "description": "Assistant deleted",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard response envelope containing event information and data payload",
                      "properties": {
                        "data": {
                          "description": "Response data payload containing the actual response content",
                          "type": "object"
                        },
                        "event": {
                          "additionalProperties": false,
                          "description": "Event information describing the operation performed",
                          "properties": {
                            "code": {
                              "description": "Event code identifying the specific operation that occurred",
                              "pattern": "^[a-z]+\\.[a-z_]+$",
                              "type": "string"
                            },
                            "correlationId": {
                              "description": "Unique correlation ID linking this event to the original request for tracing",
                              "example": "123e4567-e89b-12d3-a456-426614174000",
                              "format": "uuid",
                              "type": "string"
                            },
                            "metadata": {
                              "additionalProperties": true,
                              "description": "Event-specific metadata providing additional context",
                              "example": {
                                "field": "value"
                              },
                              "type": "object"
                            },
                            "payload": {
                              "additionalProperties": true,
                              "description": "Event payload containing detailed information about the event",
                              "example": {
                                "field": "value"
                              },
                              "type": "object"
                            }
                          },
                          "required": [
                            "code"
                          ],
                          "type": "object"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the response was generated",
                          "example": 1690000000,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "event",
                        "timestamp"
                      ],
                      "title": "Reply Envelope",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "data": {
                          "additionalProperties": false,
                          "description": "Simple success response for operations that do not return data",
                          "properties": {
                            "success": {
                              "description": "Boolean flag indicating the operation completed successfully",
                              "example": true,
                              "type": "boolean",
                              "enum": [true]
                            }
                          },
                          "required": [
                            "success"
                          ],
                          "title": "Success Response",
                          "type": "object"
                        },
                        "event": {
                          "properties": {
                            "code": {
                              "enum": [
                                "assistant.deleted"
                              ]
                            }
                          },
                          "type": "object"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "description": "Validation error response with detailed field-level errors",
                      "properties": {
                        "code": {
                          "description": "Fixed error code for validation errors",
                          "enum": [
                            "validation.error"
                          ]
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Validation-specific metadata containing detailed error information",
                          "properties": {
                            "validation_errors": {
                              "description": "Array of field-level validation errors",
                              "items": {
                                "additionalProperties": false,
                                "description": "Individual field validation error",
                                "properties": {
                                  "code": {
                                    "description": "Specific validation error code for this field",
                                    "example": "required",
                                    "type": "string"
                                  },
                                  "params": {
                                    "additionalProperties": true,
                                    "description": "Validation parameters providing context for the error",
                                    "example": {
                                      "expectedType": "string",
                                      "receivedType": "number"
                                    },
                                    "type": "object"
                                  },
                                  "path": {
                                    "description": "JSON path to the field that failed validation",
                                    "example": "/username",
                                    "pattern": "^/",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "code",
                                  "path",
                                  "params"
                                ],
                                "type": "object"
                              },
                              "minItems": 1,
                              "type": "array"
                            }
                          },
                          "required": [
                            "validation_errors"
                          ],
                          "type": "object"
                        },
                        "status": {
                          "description": "HTTP status code for validation errors",
                          "enum": [400]
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "description": "Validation error response extending the base error response",
                  "title": "Validation Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "code": {
                          "enum": [
                            "unauthorized"
                          ]
                        },
                        "status": {
                          "enum": [403]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Assistant not found",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "code": {
                          "enum": [
                            "assistant.not.found"
                          ]
                        },
                        "status": {
                          "enum": [404]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Assistant deletion error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "code": {
                          "enum": [
                            "assistant.delete.failed"
                          ]
                        },
                        "status": {
                          "enum": [500]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "assistants"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "additionalProperties": false,
                "description": "Request body for updating an assistant",
                "properties": {
                  "description": {
                    "description": "Description of the assistant",
                    "example": "An AI assistant that helps with customer support inquiries",
                    "maxLength": 500,
                    "type": "string"
                  },
                  "name": {
                    "description": "Display name for the assistant",
                    "example": "Updated Assistant Name",
                    "maxLength": 100,
                    "minLength": 1,
                    "type": "string"
                  }
                },
                "title": "Update Assistant Body",
                "type": "object"
              }
            }
          },
          "description": "Request body for updating an assistant"
        },
        "parameters": [
          {
            "schema": {
              "example": "123e4567-e89b-12d3-a456-426614174000",
              "format": "uuid",
              "type": "string"
            },
            "in": "path",
            "name": "id",
            "required": true,
            "description": "Unique identifier of the assistant"
          }
        ],
        "responses": {
          "200": {
            "description": "Assistant Updated Successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard response envelope containing event information and data payload",
                      "properties": {
                        "data": {
                          "description": "Response data payload containing the actual response content",
                          "type": "object"
                        },
                        "event": {
                          "additionalProperties": false,
                          "description": "Event information describing the operation performed",
                          "properties": {
                            "code": {
                              "description": "Event code identifying the specific operation that occurred",
                              "pattern": "^[a-z]+\\.[a-z_]+$",
                              "type": "string"
                            },
                            "correlationId": {
                              "description": "Unique correlation ID linking this event to the original request for tracing",
                              "example": "123e4567-e89b-12d3-a456-426614174000",
                              "format": "uuid",
                              "type": "string"
                            },
                            "metadata": {
                              "additionalProperties": true,
                              "description": "Event-specific metadata providing additional context",
                              "example": {
                                "field": "value"
                              },
                              "type": "object"
                            },
                            "payload": {
                              "additionalProperties": true,
                              "description": "Event payload containing detailed information about the event",
                              "example": {
                                "field": "value"
                              },
                              "type": "object"
                            }
                          },
                          "required": [
                            "code"
                          ],
                          "type": "object"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the response was generated",
                          "example": 1690000000,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "event",
                        "timestamp"
                      ],
                      "title": "Reply Envelope",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "data": {
                          "additionalProperties": false,
                          "description": "Simple success response for operations that do not return data",
                          "properties": {
                            "success": {
                              "description": "Boolean flag indicating the operation completed successfully",
                              "example": true,
                              "type": "boolean",
                              "enum": [true]
                            }
                          },
                          "required": [
                            "success"
                          ],
                          "title": "Success Response",
                          "type": "object"
                        },
                        "event": {
                          "properties": {
                            "code": {
                              "enum": [
                                "assistant.updated"
                              ]
                            }
                          },
                          "type": "object"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Validation Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "description": "Validation error response with detailed field-level errors",
                      "properties": {
                        "code": {
                          "description": "Fixed error code for validation errors",
                          "enum": [
                            "validation.error"
                          ]
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Validation-specific metadata containing detailed error information",
                          "properties": {
                            "validation_errors": {
                              "description": "Array of field-level validation errors",
                              "items": {
                                "additionalProperties": false,
                                "description": "Individual field validation error",
                                "properties": {
                                  "code": {
                                    "description": "Specific validation error code for this field",
                                    "example": "required",
                                    "type": "string"
                                  },
                                  "params": {
                                    "additionalProperties": true,
                                    "description": "Validation parameters providing context for the error",
                                    "example": {
                                      "expectedType": "string",
                                      "receivedType": "number"
                                    },
                                    "type": "object"
                                  },
                                  "path": {
                                    "description": "JSON path to the field that failed validation",
                                    "example": "/username",
                                    "pattern": "^/",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "code",
                                  "path",
                                  "params"
                                ],
                                "type": "object"
                              },
                              "minItems": 1,
                              "type": "array"
                            }
                          },
                          "required": [
                            "validation_errors"
                          ],
                          "type": "object"
                        },
                        "status": {
                          "description": "HTTP status code for validation errors",
                          "enum": [400]
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "description": "Validation error response extending the base error response",
                  "title": "Validation Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "code": {
                          "enum": [
                            "unauthorized"
                          ]
                        },
                        "status": {
                          "enum": [403]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Assistant not found",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "code": {
                          "enum": [
                            "assistant.not.found"
                          ]
                        },
                        "status": {
                          "enum": [404]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Assistant update error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "code": {
                          "enum": [
                            "assistant.update.failed"
                          ]
                        },
                        "status": {
                          "enum": [500]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/assistants/list": {
      "post": {
        "tags": [
          "assistants"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "additionalProperties": false,
                "description": "Request body for listing assistants with pagination",
                "properties": {
                  "limit": {
                    "description": "Maximum number of assistants to return",
                    "example": 10,
                    "minimum": 1,
                    "type": "integer"
                  },
                  "order": {
                    "description": "Sort order for the results",
                    "enum": [
                      "asc",
                      "desc"
                    ],
                    "example": "asc",
                    "type": "string"
                  },
                  "page": {
                    "description": "Page number for pagination (1-based)",
                    "example": 1,
                    "minimum": 1,
                    "type": "integer"
                  }
                },
                "title": "List Assistants Body",
                "type": "object"
              }
            }
          },
          "description": "Request body for listing assistants with pagination"
        },
        "responses": {
          "200": {
            "description": "Assistants Listed Successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard response envelope containing event information and data payload",
                      "properties": {
                        "data": {
                          "description": "Response data payload containing the actual response content",
                          "type": "object"
                        },
                        "event": {
                          "additionalProperties": false,
                          "description": "Event information describing the operation performed",
                          "properties": {
                            "code": {
                              "description": "Event code identifying the specific operation that occurred",
                              "pattern": "^[a-z]+\\.[a-z_]+$",
                              "type": "string"
                            },
                            "correlationId": {
                              "description": "Unique correlation ID linking this event to the original request for tracing",
                              "example": "123e4567-e89b-12d3-a456-426614174000",
                              "format": "uuid",
                              "type": "string"
                            },
                            "metadata": {
                              "additionalProperties": true,
                              "description": "Event-specific metadata providing additional context",
                              "example": {
                                "field": "value"
                              },
                              "type": "object"
                            },
                            "payload": {
                              "additionalProperties": true,
                              "description": "Event payload containing detailed information about the event",
                              "example": {
                                "field": "value"
                              },
                              "type": "object"
                            }
                          },
                          "required": [
                            "code"
                          ],
                          "type": "object"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the response was generated",
                          "example": 1690000000,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "event",
                        "timestamp"
                      ],
                      "title": "Reply Envelope",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "data": {
                          "additionalProperties": false,
                          "properties": {
                            "assistants": {
                              "items": {
                                "additionalProperties": false,
                                "description": "Assistant entity representing an AI assistant owned by an organization",
                                "properties": {
                                  "createdAt": {
                                    "description": "UNIX timestamp (ms) when the assistant was created",
                                    "example": 1726282800000,
                                    "format": "int64",
                                    "minimum": 0,
                                    "type": "number"
                                  },
                                  "createdBy": {
                                    "description": "UUID of the actor who created the assistant",
                                    "format": "uuid",
                                    "type": "string"
                                  },
                                  "id": {
                                    "description": "Unique identifier for the assistant",
                                    "example": "550e8400-e29b-41d4-a716-446655440000",
                                    "format": "uuid",
                                    "type": "string"
                                  },
                                  "name": {
                                    "description": "Display name of the assistant",
                                    "example": "Customer Support Assistant",
                                    "type": "string"
                                  },
                                  "object": {
                                    "description": "Object type identifier",
                                    "type": "string",
                                    "enum": [
                                      "assistant"
                                    ]
                                  },
                                  "organization": {
                                    "description": "UUID of the organization that owns the assistant",
                                    "format": "uuid",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "id",
                                  "name",
                                  "object",
                                  "organization",
                                  "createdAt",
                                  "createdBy"
                                ],
                                "title": "Assistant",
                                "type": "object"
                              },
                              "type": "array"
                            }
                          },
                          "required": [
                            "assistants"
                          ],
                          "type": "object"
                        },
                        "event": {
                          "properties": {
                            "code": {
                              "enum": [
                                "assistants.listed"
                              ]
                            }
                          },
                          "type": "object"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "description": "Validation error response with detailed field-level errors",
                      "properties": {
                        "code": {
                          "description": "Fixed error code for validation errors",
                          "enum": [
                            "validation.error"
                          ]
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Validation-specific metadata containing detailed error information",
                          "properties": {
                            "validation_errors": {
                              "description": "Array of field-level validation errors",
                              "items": {
                                "additionalProperties": false,
                                "description": "Individual field validation error",
                                "properties": {
                                  "code": {
                                    "description": "Specific validation error code for this field",
                                    "example": "required",
                                    "type": "string"
                                  },
                                  "params": {
                                    "additionalProperties": true,
                                    "description": "Validation parameters providing context for the error",
                                    "example": {
                                      "expectedType": "string",
                                      "receivedType": "number"
                                    },
                                    "type": "object"
                                  },
                                  "path": {
                                    "description": "JSON path to the field that failed validation",
                                    "example": "/username",
                                    "pattern": "^/",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "code",
                                  "path",
                                  "params"
                                ],
                                "type": "object"
                              },
                              "minItems": 1,
                              "type": "array"
                            }
                          },
                          "required": [
                            "validation_errors"
                          ],
                          "type": "object"
                        },
                        "status": {
                          "description": "HTTP status code for validation errors",
                          "enum": [400]
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "description": "Validation error response extending the base error response",
                  "title": "Validation Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "code": {
                          "enum": [
                            "unauthorized"
                          ]
                        },
                        "status": {
                          "enum": [403]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Assistant not found",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "code": {
                          "enum": [
                            "assistant.not.found"
                          ]
                        },
                        "status": {
                          "enum": [404]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Assistant List Failed",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "code": {
                          "enum": [
                            "assistant.list.failed"
                          ]
                        },
                        "status": {
                          "enum": [500]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/auth/sso/{organizationId}/start": {
      "get": {
        "tags": [
          "auth"
        ],
        "parameters": [
          {
            "schema": {
              "enum": [
                "json",
                "redirect"
              ],
              "type": "string"
            },
            "in": "query",
            "name": "mode",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "state",
            "required": false
          },
          {
            "schema": {
              "format": "uuid",
              "type": "string"
            },
            "in": "path",
            "name": "organizationId",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "SSO Started Successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard response envelope containing event information and data payload",
                      "properties": {
                        "data": {
                          "description": "Response data payload containing the actual response content",
                          "type": "object"
                        },
                        "event": {
                          "additionalProperties": false,
                          "description": "Event information describing the operation performed",
                          "properties": {
                            "code": {
                              "description": "Event code identifying the specific operation that occurred",
                              "pattern": "^[a-z]+\\.[a-z_]+$",
                              "type": "string"
                            },
                            "correlationId": {
                              "description": "Unique correlation ID linking this event to the original request for tracing",
                              "example": "123e4567-e89b-12d3-a456-426614174000",
                              "format": "uuid",
                              "type": "string"
                            },
                            "metadata": {
                              "additionalProperties": true,
                              "description": "Event-specific metadata providing additional context",
                              "example": {
                                "field": "value"
                              },
                              "type": "object"
                            },
                            "payload": {
                              "additionalProperties": true,
                              "description": "Event payload containing detailed information about the event",
                              "example": {
                                "field": "value"
                              },
                              "type": "object"
                            }
                          },
                          "required": [
                            "code"
                          ],
                          "type": "object"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the response was generated",
                          "example": 1690000000,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "event",
                        "timestamp"
                      ],
                      "title": "Reply Envelope",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "data": {
                          "oneOf": [
                            {
                              "additionalProperties": false,
                              "properties": {
                                "enabled": {
                                  "type": "boolean",
                                  "enum": [false]
                                }
                              },
                              "required": [
                                "enabled"
                              ],
                              "type": "object"
                            },
                            {
                              "additionalProperties": false,
                              "properties": {
                                "authorizationUrl": {
                                  "type": "string"
                                },
                                "enabled": {
                                  "type": "boolean",
                                  "enum": [true]
                                },
                                "state": {
                                  "description": "Signed state token that must be provided to the callback.",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "authorizationUrl",
                                "enabled",
                                "state"
                              ],
                              "type": "object"
                            }
                          ],
                          "type": "object"
                        },
                        "event": {
                          "properties": {
                            "code": {
                              "enum": [
                                "auth.sso.authorization.url.generated"
                              ]
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Validation Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "description": "Validation error response with detailed field-level errors",
                      "properties": {
                        "code": {
                          "description": "Fixed error code for validation errors",
                          "enum": [
                            "validation.error"
                          ]
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Validation-specific metadata containing detailed error information",
                          "properties": {
                            "validation_errors": {
                              "description": "Array of field-level validation errors",
                              "items": {
                                "additionalProperties": false,
                                "description": "Individual field validation error",
                                "properties": {
                                  "code": {
                                    "description": "Specific validation error code for this field",
                                    "example": "required",
                                    "type": "string"
                                  },
                                  "params": {
                                    "additionalProperties": true,
                                    "description": "Validation parameters providing context for the error",
                                    "example": {
                                      "expectedType": "string",
                                      "receivedType": "number"
                                    },
                                    "type": "object"
                                  },
                                  "path": {
                                    "description": "JSON path to the field that failed validation",
                                    "example": "/username",
                                    "pattern": "^/",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "code",
                                  "path",
                                  "params"
                                ],
                                "type": "object"
                              },
                              "minItems": 1,
                              "type": "array"
                            }
                          },
                          "required": [
                            "validation_errors"
                          ],
                          "type": "object"
                        },
                        "status": {
                          "description": "HTTP status code for validation errors",
                          "enum": [400]
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "description": "Validation error response extending the base error response",
                  "title": "Validation Error"
                }
              }
            }
          },
          "401": {
            "description": "Authentication Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "oneOf": [
                    {
                      "allOf": [
                        {
                          "additionalProperties": false,
                          "description": "Standard error response structure for API errors",
                          "properties": {
                            "code": {
                              "description": "Error code identifying the specific error type",
                              "pattern": "^[a-z]+\\.[a-z_]+$",
                              "type": "string"
                            },
                            "correlationId": {
                              "description": "Unique correlation ID linking this error to the original request for tracing",
                              "example": "123e4567-e89b-12d3-a456-426614174111",
                              "format": "uuid",
                              "type": "string"
                            },
                            "instance": {
                              "description": "Request path where the error occurred",
                              "example": "/api/v1/example/123",
                              "pattern": "^/api/v[0-9]+/",
                              "type": "string"
                            },
                            "message": {
                              "description": "Human readable error message explaining what went wrong",
                              "example": "Something went wrong",
                              "maxLength": 500,
                              "type": "string"
                            },
                            "metadata": {
                              "additionalProperties": true,
                              "description": "Error-specific metadata providing additional context about the error",
                              "example": {
                                "field": "username"
                              },
                              "type": "object"
                            },
                            "stack": {
                              "description": "Error stack trace (only included in development environments)",
                              "example": "Error: Example error\n    at example.js:10:5",
                              "type": "string"
                            },
                            "status": {
                              "description": "HTTP status code indicating the type of error",
                              "maximum": 599,
                              "minimum": 400,
                              "type": "integer"
                            },
                            "timestamp": {
                              "description": "UNIX timestamp when the error occurred",
                              "example": 1690000001,
                              "format": "int64",
                              "minimum": 0,
                              "type": "integer"
                            }
                          },
                          "required": [
                            "code",
                            "status",
                            "timestamp"
                          ],
                          "title": "Error Response",
                          "type": "object"
                        },
                        {
                          "properties": {
                            "code": {
                              "enum": [
                                "token.expired"
                              ]
                            },
                            "status": {
                              "enum": [401]
                            }
                          },
                          "type": "object"
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "additionalProperties": false,
                          "description": "Standard error response structure for API errors",
                          "properties": {
                            "code": {
                              "description": "Error code identifying the specific error type",
                              "pattern": "^[a-z]+\\.[a-z_]+$",
                              "type": "string"
                            },
                            "correlationId": {
                              "description": "Unique correlation ID linking this error to the original request for tracing",
                              "example": "123e4567-e89b-12d3-a456-426614174111",
                              "format": "uuid",
                              "type": "string"
                            },
                            "instance": {
                              "description": "Request path where the error occurred",
                              "example": "/api/v1/example/123",
                              "pattern": "^/api/v[0-9]+/",
                              "type": "string"
                            },
                            "message": {
                              "description": "Human readable error message explaining what went wrong",
                              "example": "Something went wrong",
                              "maxLength": 500,
                              "type": "string"
                            },
                            "metadata": {
                              "additionalProperties": true,
                              "description": "Error-specific metadata providing additional context about the error",
                              "example": {
                                "field": "username"
                              },
                              "type": "object"
                            },
                            "stack": {
                              "description": "Error stack trace (only included in development environments)",
                              "example": "Error: Example error\n    at example.js:10:5",
                              "type": "string"
                            },
                            "status": {
                              "description": "HTTP status code indicating the type of error",
                              "maximum": 599,
                              "minimum": 400,
                              "type": "integer"
                            },
                            "timestamp": {
                              "description": "UNIX timestamp when the error occurred",
                              "example": 1690000001,
                              "format": "int64",
                              "minimum": 0,
                              "type": "integer"
                            }
                          },
                          "required": [
                            "code",
                            "status",
                            "timestamp"
                          ],
                          "title": "Error Response",
                          "type": "object"
                        },
                        {
                          "properties": {
                            "code": {
                              "enum": [
                                "token.invalid"
                              ]
                            },
                            "status": {
                              "enum": [401]
                            }
                          },
                          "type": "object"
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "additionalProperties": false,
                          "description": "Standard error response structure for API errors",
                          "properties": {
                            "code": {
                              "description": "Error code identifying the specific error type",
                              "pattern": "^[a-z]+\\.[a-z_]+$",
                              "type": "string"
                            },
                            "correlationId": {
                              "description": "Unique correlation ID linking this error to the original request for tracing",
                              "example": "123e4567-e89b-12d3-a456-426614174111",
                              "format": "uuid",
                              "type": "string"
                            },
                            "instance": {
                              "description": "Request path where the error occurred",
                              "example": "/api/v1/example/123",
                              "pattern": "^/api/v[0-9]+/",
                              "type": "string"
                            },
                            "message": {
                              "description": "Human readable error message explaining what went wrong",
                              "example": "Something went wrong",
                              "maxLength": 500,
                              "type": "string"
                            },
                            "metadata": {
                              "additionalProperties": true,
                              "description": "Error-specific metadata providing additional context about the error",
                              "example": {
                                "field": "username"
                              },
                              "type": "object"
                            },
                            "stack": {
                              "description": "Error stack trace (only included in development environments)",
                              "example": "Error: Example error\n    at example.js:10:5",
                              "type": "string"
                            },
                            "status": {
                              "description": "HTTP status code indicating the type of error",
                              "maximum": 599,
                              "minimum": 400,
                              "type": "integer"
                            },
                            "timestamp": {
                              "description": "UNIX timestamp when the error occurred",
                              "example": 1690000001,
                              "format": "int64",
                              "minimum": 0,
                              "type": "integer"
                            }
                          },
                          "required": [
                            "code",
                            "status",
                            "timestamp"
                          ],
                          "title": "Error Response",
                          "type": "object"
                        },
                        {
                          "properties": {
                            "code": {
                              "enum": [
                                "credentials.invalid"
                              ]
                            },
                            "status": {
                              "enum": [401]
                            }
                          },
                          "type": "object"
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Authorization Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "code": {
                          "enum": [
                            "unauthorized"
                          ]
                        },
                        "status": {
                          "enum": [403]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "SSO start operation failed",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "code": {
                          "enum": [
                            "sso.authurl.failed"
                          ]
                        },
                        "status": {
                          "enum": [500]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/auth/sso/{organizationId}/callback": {
      "get": {
        "tags": [
          "auth"
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "code",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "state",
            "required": true
          },
          {
            "schema": {
              "format": "uuid",
              "type": "string"
            },
            "in": "path",
            "name": "organizationId",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "SSO Callback Processed Successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard response envelope containing event information and data payload",
                      "properties": {
                        "data": {
                          "description": "Response data payload containing the actual response content",
                          "type": "object"
                        },
                        "event": {
                          "additionalProperties": false,
                          "description": "Event information describing the operation performed",
                          "properties": {
                            "code": {
                              "description": "Event code identifying the specific operation that occurred",
                              "pattern": "^[a-z]+\\.[a-z_]+$",
                              "type": "string"
                            },
                            "correlationId": {
                              "description": "Unique correlation ID linking this event to the original request for tracing",
                              "example": "123e4567-e89b-12d3-a456-426614174000",
                              "format": "uuid",
                              "type": "string"
                            },
                            "metadata": {
                              "additionalProperties": true,
                              "description": "Event-specific metadata providing additional context",
                              "example": {
                                "field": "value"
                              },
                              "type": "object"
                            },
                            "payload": {
                              "additionalProperties": true,
                              "description": "Event payload containing detailed information about the event",
                              "example": {
                                "field": "value"
                              },
                              "type": "object"
                            }
                          },
                          "required": [
                            "code"
                          ],
                          "type": "object"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the response was generated",
                          "example": 1690000000,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "event",
                        "timestamp"
                      ],
                      "title": "Reply Envelope",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "data": {
                          "additionalProperties": false,
                          "properties": {
                            "accessToken": {
                              "type": "string"
                            },
                            "refreshToken": {
                              "type": "string"
                            },
                            "user": {
                              "additionalProperties": false,
                              "description": "User entity representing a workspace member",
                              "properties": {
                                "archived": {
                                  "description": "Whether the user account is archived",
                                  "type": "boolean"
                                },
                                "archivedAt": {
                                  "description": "UNIX timestamp (ms) when the user was archived",
                                  "example": 1726282800000,
                                  "format": "int64",
                                  "minimum": 0,
                                  "nullable": true,
                                  "type": "number"
                                },
                                "archivedBy": {
                                  "description": "UUID of the actor who archived the user",
                                  "format": "uuid",
                                  "nullable": true,
                                  "type": "string"
                                },
                                "createdAt": {
                                  "description": "UNIX timestamp (ms) when the user was created",
                                  "example": 1726282800000,
                                  "format": "int64",
                                  "minimum": 0,
                                  "type": "number"
                                },
                                "email": {
                                  "description": "Primary email address",
                                  "example": "john.doe@example.com",
                                  "format": "email",
                                  "maxLength": 254,
                                  "type": "string"
                                },
                                "id": {
                                  "description": "Unique identifier for the user",
                                  "example": "123e4567-e89b-12d3-a456-426614174000",
                                  "format": "uuid",
                                  "type": "string"
                                },
                                "invitedBy": {
                                  "description": "UUID of the inviter, if applicable",
                                  "format": "uuid",
                                  "nullable": true,
                                  "type": "string"
                                },
                                "joinedAt": {
                                  "description": "UNIX timestamp (ms) when the user joined the organization",
                                  "example": 1726282830000,
                                  "format": "int64",
                                  "nullable": true,
                                  "type": "number"
                                },
                                "lastLoginAt": {
                                  "description": "UNIX timestamp (ms) of last successful login",
                                  "example": 1726282860000,
                                  "format": "int64",
                                  "nullable": true,
                                  "type": "number"
                                },
                                "lastRefreshAt": {
                                  "description": "UNIX timestamp (ms) of last token refresh",
                                  "example": 1726282900000,
                                  "format": "int64",
                                  "nullable": true,
                                  "type": "number"
                                },
                                "name": {
                                  "description": "Display name for the user",
                                  "example": "Jane Smith",
                                  "maxLength": 100,
                                  "type": "string"
                                },
                                "object": {
                                  "description": "Object type identifier",
                                  "type": "string",
                                  "enum": [
                                    "user"
                                  ]
                                },
                                "organization": {
                                  "description": "UUID of the organization the user belongs to",
                                  "format": "uuid",
                                  "nullable": true,
                                  "type": "string"
                                },
                                "preferences": {
                                  "additionalProperties": false,
                                  "description": "User interface preferences",
                                  "properties": {
                                    "language": {
                                      "description": "Preferred language",
                                      "enum": [
                                        "en",
                                        "fr"
                                      ],
                                      "type": "string"
                                    },
                                    "theme": {
                                      "description": "Preferred theme",
                                      "enum": [
                                        "light",
                                        "dark"
                                      ],
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                },
                                "roles": {
                                  "description": "Role identifiers assigned to the user",
                                  "items": {
                                    "format": "uuid",
                                    "type": "string"
                                  },
                                  "type": "array"
                                },
                                "verified": {
                                  "description": "Whether the user email has been verified",
                                  "type": "boolean"
                                }
                              },
                              "required": [
                                "id",
                                "email",
                                "name",
                                "object",
                                "archived",
                                "createdAt",
                                "roles",
                                "verified"
                              ],
                              "title": "User",
                              "type": "object"
                            }
                          },
                          "required": [
                            "accessToken",
                            "refreshToken",
                            "user"
                          ],
                          "type": "object"
                        },
                        "event": {
                          "properties": {
                            "code": {
                              "enum": [
                                "auth.sso.authorization.successful"
                              ]
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Validation Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "description": "Validation error response with detailed field-level errors",
                      "properties": {
                        "code": {
                          "description": "Fixed error code for validation errors",
                          "enum": [
                            "validation.error"
                          ]
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Validation-specific metadata containing detailed error information",
                          "properties": {
                            "validation_errors": {
                              "description": "Array of field-level validation errors",
                              "items": {
                                "additionalProperties": false,
                                "description": "Individual field validation error",
                                "properties": {
                                  "code": {
                                    "description": "Specific validation error code for this field",
                                    "example": "required",
                                    "type": "string"
                                  },
                                  "params": {
                                    "additionalProperties": true,
                                    "description": "Validation parameters providing context for the error",
                                    "example": {
                                      "expectedType": "string",
                                      "receivedType": "number"
                                    },
                                    "type": "object"
                                  },
                                  "path": {
                                    "description": "JSON path to the field that failed validation",
                                    "example": "/username",
                                    "pattern": "^/",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "code",
                                  "path",
                                  "params"
                                ],
                                "type": "object"
                              },
                              "minItems": 1,
                              "type": "array"
                            }
                          },
                          "required": [
                            "validation_errors"
                          ],
                          "type": "object"
                        },
                        "status": {
                          "description": "HTTP status code for validation errors",
                          "enum": [400]
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "description": "Validation error response extending the base error response",
                  "title": "Validation Error"
                }
              }
            }
          },
          "401": {
            "description": "Authentication Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "oneOf": [
                    {
                      "allOf": [
                        {
                          "additionalProperties": false,
                          "description": "Standard error response structure for API errors",
                          "properties": {
                            "code": {
                              "description": "Error code identifying the specific error type",
                              "pattern": "^[a-z]+\\.[a-z_]+$",
                              "type": "string"
                            },
                            "correlationId": {
                              "description": "Unique correlation ID linking this error to the original request for tracing",
                              "example": "123e4567-e89b-12d3-a456-426614174111",
                              "format": "uuid",
                              "type": "string"
                            },
                            "instance": {
                              "description": "Request path where the error occurred",
                              "example": "/api/v1/example/123",
                              "pattern": "^/api/v[0-9]+/",
                              "type": "string"
                            },
                            "message": {
                              "description": "Human readable error message explaining what went wrong",
                              "example": "Something went wrong",
                              "maxLength": 500,
                              "type": "string"
                            },
                            "metadata": {
                              "additionalProperties": true,
                              "description": "Error-specific metadata providing additional context about the error",
                              "example": {
                                "field": "username"
                              },
                              "type": "object"
                            },
                            "stack": {
                              "description": "Error stack trace (only included in development environments)",
                              "example": "Error: Example error\n    at example.js:10:5",
                              "type": "string"
                            },
                            "status": {
                              "description": "HTTP status code indicating the type of error",
                              "maximum": 599,
                              "minimum": 400,
                              "type": "integer"
                            },
                            "timestamp": {
                              "description": "UNIX timestamp when the error occurred",
                              "example": 1690000001,
                              "format": "int64",
                              "minimum": 0,
                              "type": "integer"
                            }
                          },
                          "required": [
                            "code",
                            "status",
                            "timestamp"
                          ],
                          "title": "Error Response",
                          "type": "object"
                        },
                        {
                          "properties": {
                            "code": {
                              "enum": [
                                "token.expired"
                              ]
                            },
                            "status": {
                              "enum": [401]
                            }
                          },
                          "type": "object"
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "additionalProperties": false,
                          "description": "Standard error response structure for API errors",
                          "properties": {
                            "code": {
                              "description": "Error code identifying the specific error type",
                              "pattern": "^[a-z]+\\.[a-z_]+$",
                              "type": "string"
                            },
                            "correlationId": {
                              "description": "Unique correlation ID linking this error to the original request for tracing",
                              "example": "123e4567-e89b-12d3-a456-426614174111",
                              "format": "uuid",
                              "type": "string"
                            },
                            "instance": {
                              "description": "Request path where the error occurred",
                              "example": "/api/v1/example/123",
                              "pattern": "^/api/v[0-9]+/",
                              "type": "string"
                            },
                            "message": {
                              "description": "Human readable error message explaining what went wrong",
                              "example": "Something went wrong",
                              "maxLength": 500,
                              "type": "string"
                            },
                            "metadata": {
                              "additionalProperties": true,
                              "description": "Error-specific metadata providing additional context about the error",
                              "example": {
                                "field": "username"
                              },
                              "type": "object"
                            },
                            "stack": {
                              "description": "Error stack trace (only included in development environments)",
                              "example": "Error: Example error\n    at example.js:10:5",
                              "type": "string"
                            },
                            "status": {
                              "description": "HTTP status code indicating the type of error",
                              "maximum": 599,
                              "minimum": 400,
                              "type": "integer"
                            },
                            "timestamp": {
                              "description": "UNIX timestamp when the error occurred",
                              "example": 1690000001,
                              "format": "int64",
                              "minimum": 0,
                              "type": "integer"
                            }
                          },
                          "required": [
                            "code",
                            "status",
                            "timestamp"
                          ],
                          "title": "Error Response",
                          "type": "object"
                        },
                        {
                          "properties": {
                            "code": {
                              "enum": [
                                "token.invalid"
                              ]
                            },
                            "status": {
                              "enum": [401]
                            }
                          },
                          "type": "object"
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "additionalProperties": false,
                          "description": "Standard error response structure for API errors",
                          "properties": {
                            "code": {
                              "description": "Error code identifying the specific error type",
                              "pattern": "^[a-z]+\\.[a-z_]+$",
                              "type": "string"
                            },
                            "correlationId": {
                              "description": "Unique correlation ID linking this error to the original request for tracing",
                              "example": "123e4567-e89b-12d3-a456-426614174111",
                              "format": "uuid",
                              "type": "string"
                            },
                            "instance": {
                              "description": "Request path where the error occurred",
                              "example": "/api/v1/example/123",
                              "pattern": "^/api/v[0-9]+/",
                              "type": "string"
                            },
                            "message": {
                              "description": "Human readable error message explaining what went wrong",
                              "example": "Something went wrong",
                              "maxLength": 500,
                              "type": "string"
                            },
                            "metadata": {
                              "additionalProperties": true,
                              "description": "Error-specific metadata providing additional context about the error",
                              "example": {
                                "field": "username"
                              },
                              "type": "object"
                            },
                            "stack": {
                              "description": "Error stack trace (only included in development environments)",
                              "example": "Error: Example error\n    at example.js:10:5",
                              "type": "string"
                            },
                            "status": {
                              "description": "HTTP status code indicating the type of error",
                              "maximum": 599,
                              "minimum": 400,
                              "type": "integer"
                            },
                            "timestamp": {
                              "description": "UNIX timestamp when the error occurred",
                              "example": 1690000001,
                              "format": "int64",
                              "minimum": 0,
                              "type": "integer"
                            }
                          },
                          "required": [
                            "code",
                            "status",
                            "timestamp"
                          ],
                          "title": "Error Response",
                          "type": "object"
                        },
                        {
                          "properties": {
                            "code": {
                              "enum": [
                                "credentials.invalid"
                              ]
                            },
                            "status": {
                              "enum": [401]
                            }
                          },
                          "type": "object"
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Authorization Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "code": {
                          "enum": [
                            "unauthorized"
                          ]
                        },
                        "status": {
                          "enum": [403]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "SSO callback operation failed",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "code": {
                          "enum": [
                            "sso.callback.failed"
                          ]
                        },
                        "status": {
                          "enum": [500]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/auth/email/verify": {
      "post": {
        "tags": [
          "auth"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "additionalProperties": false,
                "description": "Request body for email verification",
                "properties": {
                  "email": {
                    "description": "Email address to verify",
                    "example": "user@example.com",
                    "format": "email",
                    "maxLength": 254,
                    "type": "string"
                  },
                  "otp": {
                    "description": "One-time password received via email",
                    "example": "123456",
                    "maxLength": 10,
                    "minLength": 4,
                    "type": "string"
                  }
                },
                "required": [
                  "email",
                  "otp"
                ],
                "title": "Verify Email Body",
                "type": "object"
              }
            }
          },
          "required": true,
          "description": "Request body for email verification"
        },
        "responses": {
          "200": {
            "description": "Email Verified Successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard response envelope containing event information and data payload",
                      "properties": {
                        "data": {
                          "description": "Response data payload containing the actual response content",
                          "type": "object"
                        },
                        "event": {
                          "additionalProperties": false,
                          "description": "Event information describing the operation performed",
                          "properties": {
                            "code": {
                              "description": "Event code identifying the specific operation that occurred",
                              "pattern": "^[a-z]+\\.[a-z_]+$",
                              "type": "string"
                            },
                            "correlationId": {
                              "description": "Unique correlation ID linking this event to the original request for tracing",
                              "example": "123e4567-e89b-12d3-a456-426614174000",
                              "format": "uuid",
                              "type": "string"
                            },
                            "metadata": {
                              "additionalProperties": true,
                              "description": "Event-specific metadata providing additional context",
                              "example": {
                                "field": "value"
                              },
                              "type": "object"
                            },
                            "payload": {
                              "additionalProperties": true,
                              "description": "Event payload containing detailed information about the event",
                              "example": {
                                "field": "value"
                              },
                              "type": "object"
                            }
                          },
                          "required": [
                            "code"
                          ],
                          "type": "object"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the response was generated",
                          "example": 1690000000,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "event",
                        "timestamp"
                      ],
                      "title": "Reply Envelope",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "data": {
                          "additionalProperties": false,
                          "properties": {
                            "success": {
                              "type": "boolean"
                            }
                          },
                          "required": [
                            "success"
                          ],
                          "type": "object"
                        },
                        "event": {
                          "properties": {
                            "code": {
                              "enum": [
                                "auth.email.verified"
                              ]
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Validation Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "description": "Validation error response with detailed field-level errors",
                      "properties": {
                        "code": {
                          "description": "Fixed error code for validation errors",
                          "enum": [
                            "validation.error"
                          ]
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Validation-specific metadata containing detailed error information",
                          "properties": {
                            "validation_errors": {
                              "description": "Array of field-level validation errors",
                              "items": {
                                "additionalProperties": false,
                                "description": "Individual field validation error",
                                "properties": {
                                  "code": {
                                    "description": "Specific validation error code for this field",
                                    "example": "required",
                                    "type": "string"
                                  },
                                  "params": {
                                    "additionalProperties": true,
                                    "description": "Validation parameters providing context for the error",
                                    "example": {
                                      "expectedType": "string",
                                      "receivedType": "number"
                                    },
                                    "type": "object"
                                  },
                                  "path": {
                                    "description": "JSON path to the field that failed validation",
                                    "example": "/username",
                                    "pattern": "^/",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "code",
                                  "path",
                                  "params"
                                ],
                                "type": "object"
                              },
                              "minItems": 1,
                              "type": "array"
                            }
                          },
                          "required": [
                            "validation_errors"
                          ],
                          "type": "object"
                        },
                        "status": {
                          "description": "HTTP status code for validation errors",
                          "enum": [400]
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "description": "Validation error response extending the base error response",
                  "title": "Validation Error"
                }
              }
            }
          },
          "401": {
            "description": "Authentication Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "oneOf": [
                    {
                      "allOf": [
                        {
                          "additionalProperties": false,
                          "description": "Standard error response structure for API errors",
                          "properties": {
                            "code": {
                              "description": "Error code identifying the specific error type",
                              "pattern": "^[a-z]+\\.[a-z_]+$",
                              "type": "string"
                            },
                            "correlationId": {
                              "description": "Unique correlation ID linking this error to the original request for tracing",
                              "example": "123e4567-e89b-12d3-a456-426614174111",
                              "format": "uuid",
                              "type": "string"
                            },
                            "instance": {
                              "description": "Request path where the error occurred",
                              "example": "/api/v1/example/123",
                              "pattern": "^/api/v[0-9]+/",
                              "type": "string"
                            },
                            "message": {
                              "description": "Human readable error message explaining what went wrong",
                              "example": "Something went wrong",
                              "maxLength": 500,
                              "type": "string"
                            },
                            "metadata": {
                              "additionalProperties": true,
                              "description": "Error-specific metadata providing additional context about the error",
                              "example": {
                                "field": "username"
                              },
                              "type": "object"
                            },
                            "stack": {
                              "description": "Error stack trace (only included in development environments)",
                              "example": "Error: Example error\n    at example.js:10:5",
                              "type": "string"
                            },
                            "status": {
                              "description": "HTTP status code indicating the type of error",
                              "maximum": 599,
                              "minimum": 400,
                              "type": "integer"
                            },
                            "timestamp": {
                              "description": "UNIX timestamp when the error occurred",
                              "example": 1690000001,
                              "format": "int64",
                              "minimum": 0,
                              "type": "integer"
                            }
                          },
                          "required": [
                            "code",
                            "status",
                            "timestamp"
                          ],
                          "title": "Error Response",
                          "type": "object"
                        },
                        {
                          "properties": {
                            "code": {
                              "enum": [
                                "token.expired"
                              ]
                            },
                            "status": {
                              "enum": [401]
                            }
                          },
                          "type": "object"
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "additionalProperties": false,
                          "description": "Standard error response structure for API errors",
                          "properties": {
                            "code": {
                              "description": "Error code identifying the specific error type",
                              "pattern": "^[a-z]+\\.[a-z_]+$",
                              "type": "string"
                            },
                            "correlationId": {
                              "description": "Unique correlation ID linking this error to the original request for tracing",
                              "example": "123e4567-e89b-12d3-a456-426614174111",
                              "format": "uuid",
                              "type": "string"
                            },
                            "instance": {
                              "description": "Request path where the error occurred",
                              "example": "/api/v1/example/123",
                              "pattern": "^/api/v[0-9]+/",
                              "type": "string"
                            },
                            "message": {
                              "description": "Human readable error message explaining what went wrong",
                              "example": "Something went wrong",
                              "maxLength": 500,
                              "type": "string"
                            },
                            "metadata": {
                              "additionalProperties": true,
                              "description": "Error-specific metadata providing additional context about the error",
                              "example": {
                                "field": "username"
                              },
                              "type": "object"
                            },
                            "stack": {
                              "description": "Error stack trace (only included in development environments)",
                              "example": "Error: Example error\n    at example.js:10:5",
                              "type": "string"
                            },
                            "status": {
                              "description": "HTTP status code indicating the type of error",
                              "maximum": 599,
                              "minimum": 400,
                              "type": "integer"
                            },
                            "timestamp": {
                              "description": "UNIX timestamp when the error occurred",
                              "example": 1690000001,
                              "format": "int64",
                              "minimum": 0,
                              "type": "integer"
                            }
                          },
                          "required": [
                            "code",
                            "status",
                            "timestamp"
                          ],
                          "title": "Error Response",
                          "type": "object"
                        },
                        {
                          "properties": {
                            "code": {
                              "enum": [
                                "token.invalid"
                              ]
                            },
                            "status": {
                              "enum": [401]
                            }
                          },
                          "type": "object"
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "additionalProperties": false,
                          "description": "Standard error response structure for API errors",
                          "properties": {
                            "code": {
                              "description": "Error code identifying the specific error type",
                              "pattern": "^[a-z]+\\.[a-z_]+$",
                              "type": "string"
                            },
                            "correlationId": {
                              "description": "Unique correlation ID linking this error to the original request for tracing",
                              "example": "123e4567-e89b-12d3-a456-426614174111",
                              "format": "uuid",
                              "type": "string"
                            },
                            "instance": {
                              "description": "Request path where the error occurred",
                              "example": "/api/v1/example/123",
                              "pattern": "^/api/v[0-9]+/",
                              "type": "string"
                            },
                            "message": {
                              "description": "Human readable error message explaining what went wrong",
                              "example": "Something went wrong",
                              "maxLength": 500,
                              "type": "string"
                            },
                            "metadata": {
                              "additionalProperties": true,
                              "description": "Error-specific metadata providing additional context about the error",
                              "example": {
                                "field": "username"
                              },
                              "type": "object"
                            },
                            "stack": {
                              "description": "Error stack trace (only included in development environments)",
                              "example": "Error: Example error\n    at example.js:10:5",
                              "type": "string"
                            },
                            "status": {
                              "description": "HTTP status code indicating the type of error",
                              "maximum": 599,
                              "minimum": 400,
                              "type": "integer"
                            },
                            "timestamp": {
                              "description": "UNIX timestamp when the error occurred",
                              "example": 1690000001,
                              "format": "int64",
                              "minimum": 0,
                              "type": "integer"
                            }
                          },
                          "required": [
                            "code",
                            "status",
                            "timestamp"
                          ],
                          "title": "Error Response",
                          "type": "object"
                        },
                        {
                          "properties": {
                            "code": {
                              "enum": [
                                "credentials.invalid"
                              ]
                            },
                            "status": {
                              "enum": [401]
                            }
                          },
                          "type": "object"
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Authorization Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "code": {
                          "enum": [
                            "unauthorized"
                          ]
                        },
                        "status": {
                          "enum": [403]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Email verification operation failed",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "code": {
                          "enum": [
                            "token.invalid"
                          ]
                        },
                        "status": {
                          "enum": [401]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/auth/email/send": {
      "post": {
        "tags": [
          "auth"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "additionalProperties": false,
                "description": "Request body for sending email verification",
                "properties": {
                  "email": {
                    "description": "Email address to send verification email to",
                    "example": "user@example.com",
                    "format": "email",
                    "maxLength": 254,
                    "type": "string"
                  }
                },
                "required": [
                  "email"
                ],
                "title": "Send Verification Email Body",
                "type": "object"
              }
            }
          },
          "required": true,
          "description": "Request body for sending email verification"
        },
        "responses": {
          "200": {
            "description": "Verification Email Sent Successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard response envelope containing event information and data payload",
                      "properties": {
                        "data": {
                          "description": "Response data payload containing the actual response content",
                          "type": "object"
                        },
                        "event": {
                          "additionalProperties": false,
                          "description": "Event information describing the operation performed",
                          "properties": {
                            "code": {
                              "description": "Event code identifying the specific operation that occurred",
                              "pattern": "^[a-z]+\\.[a-z_]+$",
                              "type": "string"
                            },
                            "correlationId": {
                              "description": "Unique correlation ID linking this event to the original request for tracing",
                              "example": "123e4567-e89b-12d3-a456-426614174000",
                              "format": "uuid",
                              "type": "string"
                            },
                            "metadata": {
                              "additionalProperties": true,
                              "description": "Event-specific metadata providing additional context",
                              "example": {
                                "field": "value"
                              },
                              "type": "object"
                            },
                            "payload": {
                              "additionalProperties": true,
                              "description": "Event payload containing detailed information about the event",
                              "example": {
                                "field": "value"
                              },
                              "type": "object"
                            }
                          },
                          "required": [
                            "code"
                          ],
                          "type": "object"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the response was generated",
                          "example": 1690000000,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "event",
                        "timestamp"
                      ],
                      "title": "Reply Envelope",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "data": {
                          "additionalProperties": false,
                          "description": "Simple success response for operations that do not return data",
                          "properties": {
                            "success": {
                              "description": "Boolean flag indicating the operation completed successfully",
                              "example": true,
                              "type": "boolean",
                              "enum": [true]
                            }
                          },
                          "required": [
                            "success"
                          ],
                          "title": "Success Response",
                          "type": "object"
                        },
                        "event": {
                          "properties": {
                            "code": {
                              "enum": [
                                "auth.verification.email.sent"
                              ]
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Validation Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "description": "Validation error response with detailed field-level errors",
                      "properties": {
                        "code": {
                          "description": "Fixed error code for validation errors",
                          "enum": [
                            "validation.error"
                          ]
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Validation-specific metadata containing detailed error information",
                          "properties": {
                            "validation_errors": {
                              "description": "Array of field-level validation errors",
                              "items": {
                                "additionalProperties": false,
                                "description": "Individual field validation error",
                                "properties": {
                                  "code": {
                                    "description": "Specific validation error code for this field",
                                    "example": "required",
                                    "type": "string"
                                  },
                                  "params": {
                                    "additionalProperties": true,
                                    "description": "Validation parameters providing context for the error",
                                    "example": {
                                      "expectedType": "string",
                                      "receivedType": "number"
                                    },
                                    "type": "object"
                                  },
                                  "path": {
                                    "description": "JSON path to the field that failed validation",
                                    "example": "/username",
                                    "pattern": "^/",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "code",
                                  "path",
                                  "params"
                                ],
                                "type": "object"
                              },
                              "minItems": 1,
                              "type": "array"
                            }
                          },
                          "required": [
                            "validation_errors"
                          ],
                          "type": "object"
                        },
                        "status": {
                          "description": "HTTP status code for validation errors",
                          "enum": [400]
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "description": "Validation error response extending the base error response",
                  "title": "Validation Error"
                }
              }
            }
          },
          "401": {
            "description": "Authentication Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "oneOf": [
                    {
                      "allOf": [
                        {
                          "additionalProperties": false,
                          "description": "Standard error response structure for API errors",
                          "properties": {
                            "code": {
                              "description": "Error code identifying the specific error type",
                              "pattern": "^[a-z]+\\.[a-z_]+$",
                              "type": "string"
                            },
                            "correlationId": {
                              "description": "Unique correlation ID linking this error to the original request for tracing",
                              "example": "123e4567-e89b-12d3-a456-426614174111",
                              "format": "uuid",
                              "type": "string"
                            },
                            "instance": {
                              "description": "Request path where the error occurred",
                              "example": "/api/v1/example/123",
                              "pattern": "^/api/v[0-9]+/",
                              "type": "string"
                            },
                            "message": {
                              "description": "Human readable error message explaining what went wrong",
                              "example": "Something went wrong",
                              "maxLength": 500,
                              "type": "string"
                            },
                            "metadata": {
                              "additionalProperties": true,
                              "description": "Error-specific metadata providing additional context about the error",
                              "example": {
                                "field": "username"
                              },
                              "type": "object"
                            },
                            "stack": {
                              "description": "Error stack trace (only included in development environments)",
                              "example": "Error: Example error\n    at example.js:10:5",
                              "type": "string"
                            },
                            "status": {
                              "description": "HTTP status code indicating the type of error",
                              "maximum": 599,
                              "minimum": 400,
                              "type": "integer"
                            },
                            "timestamp": {
                              "description": "UNIX timestamp when the error occurred",
                              "example": 1690000001,
                              "format": "int64",
                              "minimum": 0,
                              "type": "integer"
                            }
                          },
                          "required": [
                            "code",
                            "status",
                            "timestamp"
                          ],
                          "title": "Error Response",
                          "type": "object"
                        },
                        {
                          "properties": {
                            "code": {
                              "enum": [
                                "token.expired"
                              ]
                            },
                            "status": {
                              "enum": [401]
                            }
                          },
                          "type": "object"
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "additionalProperties": false,
                          "description": "Standard error response structure for API errors",
                          "properties": {
                            "code": {
                              "description": "Error code identifying the specific error type",
                              "pattern": "^[a-z]+\\.[a-z_]+$",
                              "type": "string"
                            },
                            "correlationId": {
                              "description": "Unique correlation ID linking this error to the original request for tracing",
                              "example": "123e4567-e89b-12d3-a456-426614174111",
                              "format": "uuid",
                              "type": "string"
                            },
                            "instance": {
                              "description": "Request path where the error occurred",
                              "example": "/api/v1/example/123",
                              "pattern": "^/api/v[0-9]+/",
                              "type": "string"
                            },
                            "message": {
                              "description": "Human readable error message explaining what went wrong",
                              "example": "Something went wrong",
                              "maxLength": 500,
                              "type": "string"
                            },
                            "metadata": {
                              "additionalProperties": true,
                              "description": "Error-specific metadata providing additional context about the error",
                              "example": {
                                "field": "username"
                              },
                              "type": "object"
                            },
                            "stack": {
                              "description": "Error stack trace (only included in development environments)",
                              "example": "Error: Example error\n    at example.js:10:5",
                              "type": "string"
                            },
                            "status": {
                              "description": "HTTP status code indicating the type of error",
                              "maximum": 599,
                              "minimum": 400,
                              "type": "integer"
                            },
                            "timestamp": {
                              "description": "UNIX timestamp when the error occurred",
                              "example": 1690000001,
                              "format": "int64",
                              "minimum": 0,
                              "type": "integer"
                            }
                          },
                          "required": [
                            "code",
                            "status",
                            "timestamp"
                          ],
                          "title": "Error Response",
                          "type": "object"
                        },
                        {
                          "properties": {
                            "code": {
                              "enum": [
                                "token.invalid"
                              ]
                            },
                            "status": {
                              "enum": [401]
                            }
                          },
                          "type": "object"
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "additionalProperties": false,
                          "description": "Standard error response structure for API errors",
                          "properties": {
                            "code": {
                              "description": "Error code identifying the specific error type",
                              "pattern": "^[a-z]+\\.[a-z_]+$",
                              "type": "string"
                            },
                            "correlationId": {
                              "description": "Unique correlation ID linking this error to the original request for tracing",
                              "example": "123e4567-e89b-12d3-a456-426614174111",
                              "format": "uuid",
                              "type": "string"
                            },
                            "instance": {
                              "description": "Request path where the error occurred",
                              "example": "/api/v1/example/123",
                              "pattern": "^/api/v[0-9]+/",
                              "type": "string"
                            },
                            "message": {
                              "description": "Human readable error message explaining what went wrong",
                              "example": "Something went wrong",
                              "maxLength": 500,
                              "type": "string"
                            },
                            "metadata": {
                              "additionalProperties": true,
                              "description": "Error-specific metadata providing additional context about the error",
                              "example": {
                                "field": "username"
                              },
                              "type": "object"
                            },
                            "stack": {
                              "description": "Error stack trace (only included in development environments)",
                              "example": "Error: Example error\n    at example.js:10:5",
                              "type": "string"
                            },
                            "status": {
                              "description": "HTTP status code indicating the type of error",
                              "maximum": 599,
                              "minimum": 400,
                              "type": "integer"
                            },
                            "timestamp": {
                              "description": "UNIX timestamp when the error occurred",
                              "example": 1690000001,
                              "format": "int64",
                              "minimum": 0,
                              "type": "integer"
                            }
                          },
                          "required": [
                            "code",
                            "status",
                            "timestamp"
                          ],
                          "title": "Error Response",
                          "type": "object"
                        },
                        {
                          "properties": {
                            "code": {
                              "enum": [
                                "credentials.invalid"
                              ]
                            },
                            "status": {
                              "enum": [401]
                            }
                          },
                          "type": "object"
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Authorization Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "code": {
                          "enum": [
                            "unauthorized"
                          ]
                        },
                        "status": {
                          "enum": [403]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Email send operation failed",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "code": {
                          "enum": [
                            "auth.email.send.failed"
                          ]
                        },
                        "status": {
                          "enum": [500]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/auth/password/reset/{token}": {
      "post": {
        "tags": [
          "auth"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "additionalProperties": false,
                "description": "Request body for resetting user password",
                "properties": {
                  "password": {
                    "description": "New password for the user account",
                    "example": "newSecurePassword123!",
                    "minLength": 6,
                    "type": "string"
                  }
                },
                "required": [
                  "password"
                ],
                "title": "Reset Password Body",
                "type": "object"
              }
            }
          },
          "required": true,
          "description": "Request body for resetting user password"
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "token",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Password Reset Successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard response envelope containing event information and data payload",
                      "properties": {
                        "data": {
                          "description": "Response data payload containing the actual response content",
                          "type": "object"
                        },
                        "event": {
                          "additionalProperties": false,
                          "description": "Event information describing the operation performed",
                          "properties": {
                            "code": {
                              "description": "Event code identifying the specific operation that occurred",
                              "pattern": "^[a-z]+\\.[a-z_]+$",
                              "type": "string"
                            },
                            "correlationId": {
                              "description": "Unique correlation ID linking this event to the original request for tracing",
                              "example": "123e4567-e89b-12d3-a456-426614174000",
                              "format": "uuid",
                              "type": "string"
                            },
                            "metadata": {
                              "additionalProperties": true,
                              "description": "Event-specific metadata providing additional context",
                              "example": {
                                "field": "value"
                              },
                              "type": "object"
                            },
                            "payload": {
                              "additionalProperties": true,
                              "description": "Event payload containing detailed information about the event",
                              "example": {
                                "field": "value"
                              },
                              "type": "object"
                            }
                          },
                          "required": [
                            "code"
                          ],
                          "type": "object"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the response was generated",
                          "example": 1690000000,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "event",
                        "timestamp"
                      ],
                      "title": "Reply Envelope",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "data": {
                          "additionalProperties": false,
                          "properties": {
                            "user": {
                              "additionalProperties": false,
                              "description": "User entity representing a workspace member",
                              "properties": {
                                "archived": {
                                  "description": "Whether the user account is archived",
                                  "type": "boolean"
                                },
                                "archivedAt": {
                                  "description": "UNIX timestamp (ms) when the user was archived",
                                  "example": 1726282800000,
                                  "format": "int64",
                                  "minimum": 0,
                                  "nullable": true,
                                  "type": "number"
                                },
                                "archivedBy": {
                                  "description": "UUID of the actor who archived the user",
                                  "format": "uuid",
                                  "nullable": true,
                                  "type": "string"
                                },
                                "createdAt": {
                                  "description": "UNIX timestamp (ms) when the user was created",
                                  "example": 1726282800000,
                                  "format": "int64",
                                  "minimum": 0,
                                  "type": "number"
                                },
                                "email": {
                                  "description": "Primary email address",
                                  "example": "john.doe@example.com",
                                  "format": "email",
                                  "maxLength": 254,
                                  "type": "string"
                                },
                                "id": {
                                  "description": "Unique identifier for the user",
                                  "example": "123e4567-e89b-12d3-a456-426614174000",
                                  "format": "uuid",
                                  "type": "string"
                                },
                                "invitedBy": {
                                  "description": "UUID of the inviter, if applicable",
                                  "format": "uuid",
                                  "nullable": true,
                                  "type": "string"
                                },
                                "joinedAt": {
                                  "description": "UNIX timestamp (ms) when the user joined the organization",
                                  "example": 1726282830000,
                                  "format": "int64",
                                  "nullable": true,
                                  "type": "number"
                                },
                                "lastLoginAt": {
                                  "description": "UNIX timestamp (ms) of last successful login",
                                  "example": 1726282860000,
                                  "format": "int64",
                                  "nullable": true,
                                  "type": "number"
                                },
                                "lastRefreshAt": {
                                  "description": "UNIX timestamp (ms) of last token refresh",
                                  "example": 1726282900000,
                                  "format": "int64",
                                  "nullable": true,
                                  "type": "number"
                                },
                                "name": {
                                  "description": "Display name for the user",
                                  "example": "Jane Smith",
                                  "maxLength": 100,
                                  "type": "string"
                                },
                                "object": {
                                  "description": "Object type identifier",
                                  "type": "string",
                                  "enum": [
                                    "user"
                                  ]
                                },
                                "organization": {
                                  "description": "UUID of the organization the user belongs to",
                                  "format": "uuid",
                                  "nullable": true,
                                  "type": "string"
                                },
                                "preferences": {
                                  "additionalProperties": false,
                                  "description": "User interface preferences",
                                  "properties": {
                                    "language": {
                                      "description": "Preferred language",
                                      "enum": [
                                        "en",
                                        "fr"
                                      ],
                                      "type": "string"
                                    },
                                    "theme": {
                                      "description": "Preferred theme",
                                      "enum": [
                                        "light",
                                        "dark"
                                      ],
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                },
                                "roles": {
                                  "description": "Role identifiers assigned to the user",
                                  "items": {
                                    "format": "uuid",
                                    "type": "string"
                                  },
                                  "type": "array"
                                },
                                "verified": {
                                  "description": "Whether the user email has been verified",
                                  "type": "boolean"
                                }
                              },
                              "required": [
                                "id",
                                "email",
                                "name",
                                "object",
                                "archived",
                                "createdAt",
                                "roles",
                                "verified"
                              ],
                              "title": "User",
                              "type": "object"
                            }
                          },
                          "required": [
                            "user"
                          ],
                          "type": "object"
                        },
                        "event": {
                          "properties": {
                            "code": {
                              "enum": [
                                "auth.password.reset.successful"
                              ]
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Validation Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "description": "Validation error response with detailed field-level errors",
                      "properties": {
                        "code": {
                          "description": "Fixed error code for validation errors",
                          "enum": [
                            "validation.error"
                          ]
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Validation-specific metadata containing detailed error information",
                          "properties": {
                            "validation_errors": {
                              "description": "Array of field-level validation errors",
                              "items": {
                                "additionalProperties": false,
                                "description": "Individual field validation error",
                                "properties": {
                                  "code": {
                                    "description": "Specific validation error code for this field",
                                    "example": "required",
                                    "type": "string"
                                  },
                                  "params": {
                                    "additionalProperties": true,
                                    "description": "Validation parameters providing context for the error",
                                    "example": {
                                      "expectedType": "string",
                                      "receivedType": "number"
                                    },
                                    "type": "object"
                                  },
                                  "path": {
                                    "description": "JSON path to the field that failed validation",
                                    "example": "/username",
                                    "pattern": "^/",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "code",
                                  "path",
                                  "params"
                                ],
                                "type": "object"
                              },
                              "minItems": 1,
                              "type": "array"
                            }
                          },
                          "required": [
                            "validation_errors"
                          ],
                          "type": "object"
                        },
                        "status": {
                          "description": "HTTP status code for validation errors",
                          "enum": [400]
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "description": "Validation error response extending the base error response",
                  "title": "Validation Error"
                }
              }
            }
          },
          "401": {
            "description": "Authentication Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "oneOf": [
                    {
                      "allOf": [
                        {
                          "additionalProperties": false,
                          "description": "Standard error response structure for API errors",
                          "properties": {
                            "code": {
                              "description": "Error code identifying the specific error type",
                              "pattern": "^[a-z]+\\.[a-z_]+$",
                              "type": "string"
                            },
                            "correlationId": {
                              "description": "Unique correlation ID linking this error to the original request for tracing",
                              "example": "123e4567-e89b-12d3-a456-426614174111",
                              "format": "uuid",
                              "type": "string"
                            },
                            "instance": {
                              "description": "Request path where the error occurred",
                              "example": "/api/v1/example/123",
                              "pattern": "^/api/v[0-9]+/",
                              "type": "string"
                            },
                            "message": {
                              "description": "Human readable error message explaining what went wrong",
                              "example": "Something went wrong",
                              "maxLength": 500,
                              "type": "string"
                            },
                            "metadata": {
                              "additionalProperties": true,
                              "description": "Error-specific metadata providing additional context about the error",
                              "example": {
                                "field": "username"
                              },
                              "type": "object"
                            },
                            "stack": {
                              "description": "Error stack trace (only included in development environments)",
                              "example": "Error: Example error\n    at example.js:10:5",
                              "type": "string"
                            },
                            "status": {
                              "description": "HTTP status code indicating the type of error",
                              "maximum": 599,
                              "minimum": 400,
                              "type": "integer"
                            },
                            "timestamp": {
                              "description": "UNIX timestamp when the error occurred",
                              "example": 1690000001,
                              "format": "int64",
                              "minimum": 0,
                              "type": "integer"
                            }
                          },
                          "required": [
                            "code",
                            "status",
                            "timestamp"
                          ],
                          "title": "Error Response",
                          "type": "object"
                        },
                        {
                          "properties": {
                            "code": {
                              "enum": [
                                "token.expired"
                              ]
                            },
                            "status": {
                              "enum": [401]
                            }
                          },
                          "type": "object"
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "additionalProperties": false,
                          "description": "Standard error response structure for API errors",
                          "properties": {
                            "code": {
                              "description": "Error code identifying the specific error type",
                              "pattern": "^[a-z]+\\.[a-z_]+$",
                              "type": "string"
                            },
                            "correlationId": {
                              "description": "Unique correlation ID linking this error to the original request for tracing",
                              "example": "123e4567-e89b-12d3-a456-426614174111",
                              "format": "uuid",
                              "type": "string"
                            },
                            "instance": {
                              "description": "Request path where the error occurred",
                              "example": "/api/v1/example/123",
                              "pattern": "^/api/v[0-9]+/",
                              "type": "string"
                            },
                            "message": {
                              "description": "Human readable error message explaining what went wrong",
                              "example": "Something went wrong",
                              "maxLength": 500,
                              "type": "string"
                            },
                            "metadata": {
                              "additionalProperties": true,
                              "description": "Error-specific metadata providing additional context about the error",
                              "example": {
                                "field": "username"
                              },
                              "type": "object"
                            },
                            "stack": {
                              "description": "Error stack trace (only included in development environments)",
                              "example": "Error: Example error\n    at example.js:10:5",
                              "type": "string"
                            },
                            "status": {
                              "description": "HTTP status code indicating the type of error",
                              "maximum": 599,
                              "minimum": 400,
                              "type": "integer"
                            },
                            "timestamp": {
                              "description": "UNIX timestamp when the error occurred",
                              "example": 1690000001,
                              "format": "int64",
                              "minimum": 0,
                              "type": "integer"
                            }
                          },
                          "required": [
                            "code",
                            "status",
                            "timestamp"
                          ],
                          "title": "Error Response",
                          "type": "object"
                        },
                        {
                          "properties": {
                            "code": {
                              "enum": [
                                "token.invalid"
                              ]
                            },
                            "status": {
                              "enum": [401]
                            }
                          },
                          "type": "object"
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "additionalProperties": false,
                          "description": "Standard error response structure for API errors",
                          "properties": {
                            "code": {
                              "description": "Error code identifying the specific error type",
                              "pattern": "^[a-z]+\\.[a-z_]+$",
                              "type": "string"
                            },
                            "correlationId": {
                              "description": "Unique correlation ID linking this error to the original request for tracing",
                              "example": "123e4567-e89b-12d3-a456-426614174111",
                              "format": "uuid",
                              "type": "string"
                            },
                            "instance": {
                              "description": "Request path where the error occurred",
                              "example": "/api/v1/example/123",
                              "pattern": "^/api/v[0-9]+/",
                              "type": "string"
                            },
                            "message": {
                              "description": "Human readable error message explaining what went wrong",
                              "example": "Something went wrong",
                              "maxLength": 500,
                              "type": "string"
                            },
                            "metadata": {
                              "additionalProperties": true,
                              "description": "Error-specific metadata providing additional context about the error",
                              "example": {
                                "field": "username"
                              },
                              "type": "object"
                            },
                            "stack": {
                              "description": "Error stack trace (only included in development environments)",
                              "example": "Error: Example error\n    at example.js:10:5",
                              "type": "string"
                            },
                            "status": {
                              "description": "HTTP status code indicating the type of error",
                              "maximum": 599,
                              "minimum": 400,
                              "type": "integer"
                            },
                            "timestamp": {
                              "description": "UNIX timestamp when the error occurred",
                              "example": 1690000001,
                              "format": "int64",
                              "minimum": 0,
                              "type": "integer"
                            }
                          },
                          "required": [
                            "code",
                            "status",
                            "timestamp"
                          ],
                          "title": "Error Response",
                          "type": "object"
                        },
                        {
                          "properties": {
                            "code": {
                              "enum": [
                                "credentials.invalid"
                              ]
                            },
                            "status": {
                              "enum": [401]
                            }
                          },
                          "type": "object"
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Authorization Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "code": {
                          "enum": [
                            "unauthorized"
                          ]
                        },
                        "status": {
                          "enum": [403]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Password reset operation failed",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "code": {
                          "enum": [
                            "auth.password.reset.failed"
                          ]
                        },
                        "status": {
                          "enum": [500]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/auth/password/send": {
      "post": {
        "tags": [
          "auth"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "additionalProperties": false,
                "description": "Request body for sending email verification",
                "properties": {
                  "email": {
                    "description": "Email address to send verification email to",
                    "example": "user@example.com",
                    "format": "email",
                    "maxLength": 254,
                    "type": "string"
                  }
                },
                "required": [
                  "email"
                ],
                "title": "Send Verification Email Body",
                "type": "object"
              }
            }
          },
          "required": true,
          "description": "Request body for sending email verification"
        },
        "responses": {
          "200": {
            "description": "Password Reset Email Sent Successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard response envelope containing event information and data payload",
                      "properties": {
                        "data": {
                          "description": "Response data payload containing the actual response content",
                          "type": "object"
                        },
                        "event": {
                          "additionalProperties": false,
                          "description": "Event information describing the operation performed",
                          "properties": {
                            "code": {
                              "description": "Event code identifying the specific operation that occurred",
                              "pattern": "^[a-z]+\\.[a-z_]+$",
                              "type": "string"
                            },
                            "correlationId": {
                              "description": "Unique correlation ID linking this event to the original request for tracing",
                              "example": "123e4567-e89b-12d3-a456-426614174000",
                              "format": "uuid",
                              "type": "string"
                            },
                            "metadata": {
                              "additionalProperties": true,
                              "description": "Event-specific metadata providing additional context",
                              "example": {
                                "field": "value"
                              },
                              "type": "object"
                            },
                            "payload": {
                              "additionalProperties": true,
                              "description": "Event payload containing detailed information about the event",
                              "example": {
                                "field": "value"
                              },
                              "type": "object"
                            }
                          },
                          "required": [
                            "code"
                          ],
                          "type": "object"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the response was generated",
                          "example": 1690000000,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "event",
                        "timestamp"
                      ],
                      "title": "Reply Envelope",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "data": {
                          "additionalProperties": false,
                          "description": "Simple success response for operations that do not return data",
                          "properties": {
                            "success": {
                              "description": "Boolean flag indicating the operation completed successfully",
                              "example": true,
                              "type": "boolean",
                              "enum": [true]
                            }
                          },
                          "required": [
                            "success"
                          ],
                          "title": "Success Response",
                          "type": "object"
                        },
                        "event": {
                          "properties": {
                            "code": {
                              "enum": [
                                "auth.verification.email.sent"
                              ]
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Validation Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "description": "Validation error response with detailed field-level errors",
                      "properties": {
                        "code": {
                          "description": "Fixed error code for validation errors",
                          "enum": [
                            "validation.error"
                          ]
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Validation-specific metadata containing detailed error information",
                          "properties": {
                            "validation_errors": {
                              "description": "Array of field-level validation errors",
                              "items": {
                                "additionalProperties": false,
                                "description": "Individual field validation error",
                                "properties": {
                                  "code": {
                                    "description": "Specific validation error code for this field",
                                    "example": "required",
                                    "type": "string"
                                  },
                                  "params": {
                                    "additionalProperties": true,
                                    "description": "Validation parameters providing context for the error",
                                    "example": {
                                      "expectedType": "string",
                                      "receivedType": "number"
                                    },
                                    "type": "object"
                                  },
                                  "path": {
                                    "description": "JSON path to the field that failed validation",
                                    "example": "/username",
                                    "pattern": "^/",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "code",
                                  "path",
                                  "params"
                                ],
                                "type": "object"
                              },
                              "minItems": 1,
                              "type": "array"
                            }
                          },
                          "required": [
                            "validation_errors"
                          ],
                          "type": "object"
                        },
                        "status": {
                          "description": "HTTP status code for validation errors",
                          "enum": [400]
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "description": "Validation error response extending the base error response",
                  "title": "Validation Error"
                }
              }
            }
          },
          "401": {
            "description": "Authentication Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "oneOf": [
                    {
                      "allOf": [
                        {
                          "additionalProperties": false,
                          "description": "Standard error response structure for API errors",
                          "properties": {
                            "code": {
                              "description": "Error code identifying the specific error type",
                              "pattern": "^[a-z]+\\.[a-z_]+$",
                              "type": "string"
                            },
                            "correlationId": {
                              "description": "Unique correlation ID linking this error to the original request for tracing",
                              "example": "123e4567-e89b-12d3-a456-426614174111",
                              "format": "uuid",
                              "type": "string"
                            },
                            "instance": {
                              "description": "Request path where the error occurred",
                              "example": "/api/v1/example/123",
                              "pattern": "^/api/v[0-9]+/",
                              "type": "string"
                            },
                            "message": {
                              "description": "Human readable error message explaining what went wrong",
                              "example": "Something went wrong",
                              "maxLength": 500,
                              "type": "string"
                            },
                            "metadata": {
                              "additionalProperties": true,
                              "description": "Error-specific metadata providing additional context about the error",
                              "example": {
                                "field": "username"
                              },
                              "type": "object"
                            },
                            "stack": {
                              "description": "Error stack trace (only included in development environments)",
                              "example": "Error: Example error\n    at example.js:10:5",
                              "type": "string"
                            },
                            "status": {
                              "description": "HTTP status code indicating the type of error",
                              "maximum": 599,
                              "minimum": 400,
                              "type": "integer"
                            },
                            "timestamp": {
                              "description": "UNIX timestamp when the error occurred",
                              "example": 1690000001,
                              "format": "int64",
                              "minimum": 0,
                              "type": "integer"
                            }
                          },
                          "required": [
                            "code",
                            "status",
                            "timestamp"
                          ],
                          "title": "Error Response",
                          "type": "object"
                        },
                        {
                          "properties": {
                            "code": {
                              "enum": [
                                "token.expired"
                              ]
                            },
                            "status": {
                              "enum": [401]
                            }
                          },
                          "type": "object"
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "additionalProperties": false,
                          "description": "Standard error response structure for API errors",
                          "properties": {
                            "code": {
                              "description": "Error code identifying the specific error type",
                              "pattern": "^[a-z]+\\.[a-z_]+$",
                              "type": "string"
                            },
                            "correlationId": {
                              "description": "Unique correlation ID linking this error to the original request for tracing",
                              "example": "123e4567-e89b-12d3-a456-426614174111",
                              "format": "uuid",
                              "type": "string"
                            },
                            "instance": {
                              "description": "Request path where the error occurred",
                              "example": "/api/v1/example/123",
                              "pattern": "^/api/v[0-9]+/",
                              "type": "string"
                            },
                            "message": {
                              "description": "Human readable error message explaining what went wrong",
                              "example": "Something went wrong",
                              "maxLength": 500,
                              "type": "string"
                            },
                            "metadata": {
                              "additionalProperties": true,
                              "description": "Error-specific metadata providing additional context about the error",
                              "example": {
                                "field": "username"
                              },
                              "type": "object"
                            },
                            "stack": {
                              "description": "Error stack trace (only included in development environments)",
                              "example": "Error: Example error\n    at example.js:10:5",
                              "type": "string"
                            },
                            "status": {
                              "description": "HTTP status code indicating the type of error",
                              "maximum": 599,
                              "minimum": 400,
                              "type": "integer"
                            },
                            "timestamp": {
                              "description": "UNIX timestamp when the error occurred",
                              "example": 1690000001,
                              "format": "int64",
                              "minimum": 0,
                              "type": "integer"
                            }
                          },
                          "required": [
                            "code",
                            "status",
                            "timestamp"
                          ],
                          "title": "Error Response",
                          "type": "object"
                        },
                        {
                          "properties": {
                            "code": {
                              "enum": [
                                "token.invalid"
                              ]
                            },
                            "status": {
                              "enum": [401]
                            }
                          },
                          "type": "object"
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "additionalProperties": false,
                          "description": "Standard error response structure for API errors",
                          "properties": {
                            "code": {
                              "description": "Error code identifying the specific error type",
                              "pattern": "^[a-z]+\\.[a-z_]+$",
                              "type": "string"
                            },
                            "correlationId": {
                              "description": "Unique correlation ID linking this error to the original request for tracing",
                              "example": "123e4567-e89b-12d3-a456-426614174111",
                              "format": "uuid",
                              "type": "string"
                            },
                            "instance": {
                              "description": "Request path where the error occurred",
                              "example": "/api/v1/example/123",
                              "pattern": "^/api/v[0-9]+/",
                              "type": "string"
                            },
                            "message": {
                              "description": "Human readable error message explaining what went wrong",
                              "example": "Something went wrong",
                              "maxLength": 500,
                              "type": "string"
                            },
                            "metadata": {
                              "additionalProperties": true,
                              "description": "Error-specific metadata providing additional context about the error",
                              "example": {
                                "field": "username"
                              },
                              "type": "object"
                            },
                            "stack": {
                              "description": "Error stack trace (only included in development environments)",
                              "example": "Error: Example error\n    at example.js:10:5",
                              "type": "string"
                            },
                            "status": {
                              "description": "HTTP status code indicating the type of error",
                              "maximum": 599,
                              "minimum": 400,
                              "type": "integer"
                            },
                            "timestamp": {
                              "description": "UNIX timestamp when the error occurred",
                              "example": 1690000001,
                              "format": "int64",
                              "minimum": 0,
                              "type": "integer"
                            }
                          },
                          "required": [
                            "code",
                            "status",
                            "timestamp"
                          ],
                          "title": "Error Response",
                          "type": "object"
                        },
                        {
                          "properties": {
                            "code": {
                              "enum": [
                                "credentials.invalid"
                              ]
                            },
                            "status": {
                              "enum": [401]
                            }
                          },
                          "type": "object"
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Authorization Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "code": {
                          "enum": [
                            "unauthorized"
                          ]
                        },
                        "status": {
                          "enum": [403]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Password reset email send operation failed",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "code": {
                          "enum": [
                            "auth.password.reset.failed"
                          ]
                        },
                        "status": {
                          "enum": [500]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/auth/token/refresh": {
      "post": {
        "tags": [
          "auth"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "additionalProperties": false,
                "description": "Request body for refreshing access token",
                "properties": {
                  "refreshToken": {
                    "description": "Valid refresh token to exchange for new access token",
                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...",
                    "type": "string"
                  }
                },
                "required": [
                  "refreshToken"
                ],
                "title": "Refresh Token Body",
                "type": "object"
              }
            }
          },
          "required": true,
          "description": "Request body for refreshing access token"
        },
        "responses": {
          "200": {
            "description": "Token Refreshed Successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard response envelope containing event information and data payload",
                      "properties": {
                        "data": {
                          "description": "Response data payload containing the actual response content",
                          "type": "object"
                        },
                        "event": {
                          "additionalProperties": false,
                          "description": "Event information describing the operation performed",
                          "properties": {
                            "code": {
                              "description": "Event code identifying the specific operation that occurred",
                              "pattern": "^[a-z]+\\.[a-z_]+$",
                              "type": "string"
                            },
                            "correlationId": {
                              "description": "Unique correlation ID linking this event to the original request for tracing",
                              "example": "123e4567-e89b-12d3-a456-426614174000",
                              "format": "uuid",
                              "type": "string"
                            },
                            "metadata": {
                              "additionalProperties": true,
                              "description": "Event-specific metadata providing additional context",
                              "example": {
                                "field": "value"
                              },
                              "type": "object"
                            },
                            "payload": {
                              "additionalProperties": true,
                              "description": "Event payload containing detailed information about the event",
                              "example": {
                                "field": "value"
                              },
                              "type": "object"
                            }
                          },
                          "required": [
                            "code"
                          ],
                          "type": "object"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the response was generated",
                          "example": 1690000000,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "event",
                        "timestamp"
                      ],
                      "title": "Reply Envelope",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "data": {
                          "additionalProperties": false,
                          "properties": {
                            "accessToken": {
                              "description": "New access token for API authentication",
                              "type": "string"
                            }
                          },
                          "required": [
                            "accessToken"
                          ],
                          "type": "object"
                        },
                        "event": {
                          "properties": {
                            "code": {
                              "enum": [
                                "auth.token.refreshed"
                              ]
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Validation Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "description": "Validation error response with detailed field-level errors",
                      "properties": {
                        "code": {
                          "description": "Fixed error code for validation errors",
                          "enum": [
                            "validation.error"
                          ]
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Validation-specific metadata containing detailed error information",
                          "properties": {
                            "validation_errors": {
                              "description": "Array of field-level validation errors",
                              "items": {
                                "additionalProperties": false,
                                "description": "Individual field validation error",
                                "properties": {
                                  "code": {
                                    "description": "Specific validation error code for this field",
                                    "example": "required",
                                    "type": "string"
                                  },
                                  "params": {
                                    "additionalProperties": true,
                                    "description": "Validation parameters providing context for the error",
                                    "example": {
                                      "expectedType": "string",
                                      "receivedType": "number"
                                    },
                                    "type": "object"
                                  },
                                  "path": {
                                    "description": "JSON path to the field that failed validation",
                                    "example": "/username",
                                    "pattern": "^/",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "code",
                                  "path",
                                  "params"
                                ],
                                "type": "object"
                              },
                              "minItems": 1,
                              "type": "array"
                            }
                          },
                          "required": [
                            "validation_errors"
                          ],
                          "type": "object"
                        },
                        "status": {
                          "description": "HTTP status code for validation errors",
                          "enum": [400]
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "description": "Validation error response extending the base error response",
                  "title": "Validation Error"
                }
              }
            }
          },
          "401": {
            "description": "Authentication Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "oneOf": [
                    {
                      "allOf": [
                        {
                          "additionalProperties": false,
                          "description": "Standard error response structure for API errors",
                          "properties": {
                            "code": {
                              "description": "Error code identifying the specific error type",
                              "pattern": "^[a-z]+\\.[a-z_]+$",
                              "type": "string"
                            },
                            "correlationId": {
                              "description": "Unique correlation ID linking this error to the original request for tracing",
                              "example": "123e4567-e89b-12d3-a456-426614174111",
                              "format": "uuid",
                              "type": "string"
                            },
                            "instance": {
                              "description": "Request path where the error occurred",
                              "example": "/api/v1/example/123",
                              "pattern": "^/api/v[0-9]+/",
                              "type": "string"
                            },
                            "message": {
                              "description": "Human readable error message explaining what went wrong",
                              "example": "Something went wrong",
                              "maxLength": 500,
                              "type": "string"
                            },
                            "metadata": {
                              "additionalProperties": true,
                              "description": "Error-specific metadata providing additional context about the error",
                              "example": {
                                "field": "username"
                              },
                              "type": "object"
                            },
                            "stack": {
                              "description": "Error stack trace (only included in development environments)",
                              "example": "Error: Example error\n    at example.js:10:5",
                              "type": "string"
                            },
                            "status": {
                              "description": "HTTP status code indicating the type of error",
                              "maximum": 599,
                              "minimum": 400,
                              "type": "integer"
                            },
                            "timestamp": {
                              "description": "UNIX timestamp when the error occurred",
                              "example": 1690000001,
                              "format": "int64",
                              "minimum": 0,
                              "type": "integer"
                            }
                          },
                          "required": [
                            "code",
                            "status",
                            "timestamp"
                          ],
                          "title": "Error Response",
                          "type": "object"
                        },
                        {
                          "properties": {
                            "code": {
                              "enum": [
                                "token.expired"
                              ]
                            },
                            "status": {
                              "enum": [401]
                            }
                          },
                          "type": "object"
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "additionalProperties": false,
                          "description": "Standard error response structure for API errors",
                          "properties": {
                            "code": {
                              "description": "Error code identifying the specific error type",
                              "pattern": "^[a-z]+\\.[a-z_]+$",
                              "type": "string"
                            },
                            "correlationId": {
                              "description": "Unique correlation ID linking this error to the original request for tracing",
                              "example": "123e4567-e89b-12d3-a456-426614174111",
                              "format": "uuid",
                              "type": "string"
                            },
                            "instance": {
                              "description": "Request path where the error occurred",
                              "example": "/api/v1/example/123",
                              "pattern": "^/api/v[0-9]+/",
                              "type": "string"
                            },
                            "message": {
                              "description": "Human readable error message explaining what went wrong",
                              "example": "Something went wrong",
                              "maxLength": 500,
                              "type": "string"
                            },
                            "metadata": {
                              "additionalProperties": true,
                              "description": "Error-specific metadata providing additional context about the error",
                              "example": {
                                "field": "username"
                              },
                              "type": "object"
                            },
                            "stack": {
                              "description": "Error stack trace (only included in development environments)",
                              "example": "Error: Example error\n    at example.js:10:5",
                              "type": "string"
                            },
                            "status": {
                              "description": "HTTP status code indicating the type of error",
                              "maximum": 599,
                              "minimum": 400,
                              "type": "integer"
                            },
                            "timestamp": {
                              "description": "UNIX timestamp when the error occurred",
                              "example": 1690000001,
                              "format": "int64",
                              "minimum": 0,
                              "type": "integer"
                            }
                          },
                          "required": [
                            "code",
                            "status",
                            "timestamp"
                          ],
                          "title": "Error Response",
                          "type": "object"
                        },
                        {
                          "properties": {
                            "code": {
                              "enum": [
                                "token.invalid"
                              ]
                            },
                            "status": {
                              "enum": [401]
                            }
                          },
                          "type": "object"
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "additionalProperties": false,
                          "description": "Standard error response structure for API errors",
                          "properties": {
                            "code": {
                              "description": "Error code identifying the specific error type",
                              "pattern": "^[a-z]+\\.[a-z_]+$",
                              "type": "string"
                            },
                            "correlationId": {
                              "description": "Unique correlation ID linking this error to the original request for tracing",
                              "example": "123e4567-e89b-12d3-a456-426614174111",
                              "format": "uuid",
                              "type": "string"
                            },
                            "instance": {
                              "description": "Request path where the error occurred",
                              "example": "/api/v1/example/123",
                              "pattern": "^/api/v[0-9]+/",
                              "type": "string"
                            },
                            "message": {
                              "description": "Human readable error message explaining what went wrong",
                              "example": "Something went wrong",
                              "maxLength": 500,
                              "type": "string"
                            },
                            "metadata": {
                              "additionalProperties": true,
                              "description": "Error-specific metadata providing additional context about the error",
                              "example": {
                                "field": "username"
                              },
                              "type": "object"
                            },
                            "stack": {
                              "description": "Error stack trace (only included in development environments)",
                              "example": "Error: Example error\n    at example.js:10:5",
                              "type": "string"
                            },
                            "status": {
                              "description": "HTTP status code indicating the type of error",
                              "maximum": 599,
                              "minimum": 400,
                              "type": "integer"
                            },
                            "timestamp": {
                              "description": "UNIX timestamp when the error occurred",
                              "example": 1690000001,
                              "format": "int64",
                              "minimum": 0,
                              "type": "integer"
                            }
                          },
                          "required": [
                            "code",
                            "status",
                            "timestamp"
                          ],
                          "title": "Error Response",
                          "type": "object"
                        },
                        {
                          "properties": {
                            "code": {
                              "enum": [
                                "credentials.invalid"
                              ]
                            },
                            "status": {
                              "enum": [401]
                            }
                          },
                          "type": "object"
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Authorization Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "code": {
                          "enum": [
                            "unauthorized"
                          ]
                        },
                        "status": {
                          "enum": [403]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Token refresh operation failed",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "code": {
                          "enum": [
                            "auth.token.refresh.failed"
                          ]
                        },
                        "status": {
                          "enum": [500]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/auth/token/revoke": {
      "post": {
        "tags": [
          "auth"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "additionalProperties": false,
                "description": "Request body for revoking user tokens",
                "properties": {
                  "userId": {
                    "description": "UUID of the user whose tokens to revoke",
                    "example": "123e4567-e89b-12d3-a456-426614174000",
                    "format": "uuid",
                    "type": "string"
                  }
                },
                "required": [
                  "userId"
                ],
                "title": "Revoke Token Body",
                "type": "object"
              }
            }
          },
          "required": true,
          "description": "Request body for revoking user tokens"
        },
        "responses": {
          "200": {
            "description": "Token Revoked Successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard response envelope containing event information and data payload",
                      "properties": {
                        "data": {
                          "description": "Response data payload containing the actual response content",
                          "type": "object"
                        },
                        "event": {
                          "additionalProperties": false,
                          "description": "Event information describing the operation performed",
                          "properties": {
                            "code": {
                              "description": "Event code identifying the specific operation that occurred",
                              "pattern": "^[a-z]+\\.[a-z_]+$",
                              "type": "string"
                            },
                            "correlationId": {
                              "description": "Unique correlation ID linking this event to the original request for tracing",
                              "example": "123e4567-e89b-12d3-a456-426614174000",
                              "format": "uuid",
                              "type": "string"
                            },
                            "metadata": {
                              "additionalProperties": true,
                              "description": "Event-specific metadata providing additional context",
                              "example": {
                                "field": "value"
                              },
                              "type": "object"
                            },
                            "payload": {
                              "additionalProperties": true,
                              "description": "Event payload containing detailed information about the event",
                              "example": {
                                "field": "value"
                              },
                              "type": "object"
                            }
                          },
                          "required": [
                            "code"
                          ],
                          "type": "object"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the response was generated",
                          "example": 1690000000,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "event",
                        "timestamp"
                      ],
                      "title": "Reply Envelope",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "data": {
                          "additionalProperties": false,
                          "description": "Simple success response for operations that do not return data",
                          "properties": {
                            "success": {
                              "description": "Boolean flag indicating the operation completed successfully",
                              "example": true,
                              "type": "boolean",
                              "enum": [true]
                            }
                          },
                          "required": [
                            "success"
                          ],
                          "title": "Success Response",
                          "type": "object"
                        },
                        "event": {
                          "properties": {
                            "code": {
                              "enum": [
                                "auth.token.revoked"
                              ]
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Validation Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "description": "Validation error response with detailed field-level errors",
                      "properties": {
                        "code": {
                          "description": "Fixed error code for validation errors",
                          "enum": [
                            "validation.error"
                          ]
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Validation-specific metadata containing detailed error information",
                          "properties": {
                            "validation_errors": {
                              "description": "Array of field-level validation errors",
                              "items": {
                                "additionalProperties": false,
                                "description": "Individual field validation error",
                                "properties": {
                                  "code": {
                                    "description": "Specific validation error code for this field",
                                    "example": "required",
                                    "type": "string"
                                  },
                                  "params": {
                                    "additionalProperties": true,
                                    "description": "Validation parameters providing context for the error",
                                    "example": {
                                      "expectedType": "string",
                                      "receivedType": "number"
                                    },
                                    "type": "object"
                                  },
                                  "path": {
                                    "description": "JSON path to the field that failed validation",
                                    "example": "/username",
                                    "pattern": "^/",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "code",
                                  "path",
                                  "params"
                                ],
                                "type": "object"
                              },
                              "minItems": 1,
                              "type": "array"
                            }
                          },
                          "required": [
                            "validation_errors"
                          ],
                          "type": "object"
                        },
                        "status": {
                          "description": "HTTP status code for validation errors",
                          "enum": [400]
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "description": "Validation error response extending the base error response",
                  "title": "Validation Error"
                }
              }
            }
          },
          "401": {
            "description": "Authentication Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "oneOf": [
                    {
                      "allOf": [
                        {
                          "additionalProperties": false,
                          "description": "Standard error response structure for API errors",
                          "properties": {
                            "code": {
                              "description": "Error code identifying the specific error type",
                              "pattern": "^[a-z]+\\.[a-z_]+$",
                              "type": "string"
                            },
                            "correlationId": {
                              "description": "Unique correlation ID linking this error to the original request for tracing",
                              "example": "123e4567-e89b-12d3-a456-426614174111",
                              "format": "uuid",
                              "type": "string"
                            },
                            "instance": {
                              "description": "Request path where the error occurred",
                              "example": "/api/v1/example/123",
                              "pattern": "^/api/v[0-9]+/",
                              "type": "string"
                            },
                            "message": {
                              "description": "Human readable error message explaining what went wrong",
                              "example": "Something went wrong",
                              "maxLength": 500,
                              "type": "string"
                            },
                            "metadata": {
                              "additionalProperties": true,
                              "description": "Error-specific metadata providing additional context about the error",
                              "example": {
                                "field": "username"
                              },
                              "type": "object"
                            },
                            "stack": {
                              "description": "Error stack trace (only included in development environments)",
                              "example": "Error: Example error\n    at example.js:10:5",
                              "type": "string"
                            },
                            "status": {
                              "description": "HTTP status code indicating the type of error",
                              "maximum": 599,
                              "minimum": 400,
                              "type": "integer"
                            },
                            "timestamp": {
                              "description": "UNIX timestamp when the error occurred",
                              "example": 1690000001,
                              "format": "int64",
                              "minimum": 0,
                              "type": "integer"
                            }
                          },
                          "required": [
                            "code",
                            "status",
                            "timestamp"
                          ],
                          "title": "Error Response",
                          "type": "object"
                        },
                        {
                          "properties": {
                            "code": {
                              "enum": [
                                "token.expired"
                              ]
                            },
                            "status": {
                              "enum": [401]
                            }
                          },
                          "type": "object"
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "additionalProperties": false,
                          "description": "Standard error response structure for API errors",
                          "properties": {
                            "code": {
                              "description": "Error code identifying the specific error type",
                              "pattern": "^[a-z]+\\.[a-z_]+$",
                              "type": "string"
                            },
                            "correlationId": {
                              "description": "Unique correlation ID linking this error to the original request for tracing",
                              "example": "123e4567-e89b-12d3-a456-426614174111",
                              "format": "uuid",
                              "type": "string"
                            },
                            "instance": {
                              "description": "Request path where the error occurred",
                              "example": "/api/v1/example/123",
                              "pattern": "^/api/v[0-9]+/",
                              "type": "string"
                            },
                            "message": {
                              "description": "Human readable error message explaining what went wrong",
                              "example": "Something went wrong",
                              "maxLength": 500,
                              "type": "string"
                            },
                            "metadata": {
                              "additionalProperties": true,
                              "description": "Error-specific metadata providing additional context about the error",
                              "example": {
                                "field": "username"
                              },
                              "type": "object"
                            },
                            "stack": {
                              "description": "Error stack trace (only included in development environments)",
                              "example": "Error: Example error\n    at example.js:10:5",
                              "type": "string"
                            },
                            "status": {
                              "description": "HTTP status code indicating the type of error",
                              "maximum": 599,
                              "minimum": 400,
                              "type": "integer"
                            },
                            "timestamp": {
                              "description": "UNIX timestamp when the error occurred",
                              "example": 1690000001,
                              "format": "int64",
                              "minimum": 0,
                              "type": "integer"
                            }
                          },
                          "required": [
                            "code",
                            "status",
                            "timestamp"
                          ],
                          "title": "Error Response",
                          "type": "object"
                        },
                        {
                          "properties": {
                            "code": {
                              "enum": [
                                "token.invalid"
                              ]
                            },
                            "status": {
                              "enum": [401]
                            }
                          },
                          "type": "object"
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "additionalProperties": false,
                          "description": "Standard error response structure for API errors",
                          "properties": {
                            "code": {
                              "description": "Error code identifying the specific error type",
                              "pattern": "^[a-z]+\\.[a-z_]+$",
                              "type": "string"
                            },
                            "correlationId": {
                              "description": "Unique correlation ID linking this error to the original request for tracing",
                              "example": "123e4567-e89b-12d3-a456-426614174111",
                              "format": "uuid",
                              "type": "string"
                            },
                            "instance": {
                              "description": "Request path where the error occurred",
                              "example": "/api/v1/example/123",
                              "pattern": "^/api/v[0-9]+/",
                              "type": "string"
                            },
                            "message": {
                              "description": "Human readable error message explaining what went wrong",
                              "example": "Something went wrong",
                              "maxLength": 500,
                              "type": "string"
                            },
                            "metadata": {
                              "additionalProperties": true,
                              "description": "Error-specific metadata providing additional context about the error",
                              "example": {
                                "field": "username"
                              },
                              "type": "object"
                            },
                            "stack": {
                              "description": "Error stack trace (only included in development environments)",
                              "example": "Error: Example error\n    at example.js:10:5",
                              "type": "string"
                            },
                            "status": {
                              "description": "HTTP status code indicating the type of error",
                              "maximum": 599,
                              "minimum": 400,
                              "type": "integer"
                            },
                            "timestamp": {
                              "description": "UNIX timestamp when the error occurred",
                              "example": 1690000001,
                              "format": "int64",
                              "minimum": 0,
                              "type": "integer"
                            }
                          },
                          "required": [
                            "code",
                            "status",
                            "timestamp"
                          ],
                          "title": "Error Response",
                          "type": "object"
                        },
                        {
                          "properties": {
                            "code": {
                              "enum": [
                                "credentials.invalid"
                              ]
                            },
                            "status": {
                              "enum": [401]
                            }
                          },
                          "type": "object"
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Authorization Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "code": {
                          "enum": [
                            "unauthorized"
                          ]
                        },
                        "status": {
                          "enum": [403]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Token revoke operation failed",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "code": {
                          "enum": [
                            "auth.token.revoke.failed"
                          ]
                        },
                        "status": {
                          "enum": [500]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/users/new": {
      "post": {
        "tags": [
          "users"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "additionalProperties": false,
                "description": "Request body for creating a new user account",
                "properties": {
                  "email": {
                    "description": "Email address for the new user (must be unique)",
                    "example": "new.user@example.com",
                    "format": "email",
                    "maxLength": 254,
                    "type": "string"
                  },
                  "name": {
                    "description": "Full display name for the new user",
                    "example": "Jane Smith",
                    "maxLength": 100,
                    "minLength": 3,
                    "type": "string"
                  },
                  "password": {
                    "description": "Password for the new user account",
                    "example": "strongPassword123!",
                    "minLength": 6,
                    "type": "string"
                  }
                },
                "required": [
                  "email",
                  "name",
                  "password"
                ],
                "title": "Create User Body",
                "type": "object"
              }
            }
          },
          "required": true,
          "description": "Request body for creating a new user account"
        },
        "responses": {
          "200": {
            "description": "User created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard response envelope containing event information and data payload",
                      "properties": {
                        "data": {
                          "description": "Response data payload containing the actual response content",
                          "type": "object"
                        },
                        "event": {
                          "additionalProperties": false,
                          "description": "Event information describing the operation performed",
                          "properties": {
                            "code": {
                              "description": "Event code identifying the specific operation that occurred",
                              "pattern": "^[a-z]+\\.[a-z_]+$",
                              "type": "string"
                            },
                            "correlationId": {
                              "description": "Unique correlation ID linking this event to the original request for tracing",
                              "example": "123e4567-e89b-12d3-a456-426614174000",
                              "format": "uuid",
                              "type": "string"
                            },
                            "metadata": {
                              "additionalProperties": true,
                              "description": "Event-specific metadata providing additional context",
                              "example": {
                                "field": "value"
                              },
                              "type": "object"
                            },
                            "payload": {
                              "additionalProperties": true,
                              "description": "Event payload containing detailed information about the event",
                              "example": {
                                "field": "value"
                              },
                              "type": "object"
                            }
                          },
                          "required": [
                            "code"
                          ],
                          "type": "object"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the response was generated",
                          "example": 1690000000,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "event",
                        "timestamp"
                      ],
                      "title": "Reply Envelope",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "data": {
                          "additionalProperties": false,
                          "properties": {
                            "user": {
                              "additionalProperties": false,
                              "description": "User entity representing a workspace member",
                              "properties": {
                                "archived": {
                                  "description": "Whether the user account is archived",
                                  "type": "boolean"
                                },
                                "archivedAt": {
                                  "description": "UNIX timestamp (ms) when the user was archived",
                                  "example": 1726282800000,
                                  "format": "int64",
                                  "minimum": 0,
                                  "nullable": true,
                                  "type": "number"
                                },
                                "archivedBy": {
                                  "description": "UUID of the actor who archived the user",
                                  "format": "uuid",
                                  "nullable": true,
                                  "type": "string"
                                },
                                "createdAt": {
                                  "description": "UNIX timestamp (ms) when the user was created",
                                  "example": 1726282800000,
                                  "format": "int64",
                                  "minimum": 0,
                                  "type": "number"
                                },
                                "email": {
                                  "description": "Primary email address",
                                  "example": "john.doe@example.com",
                                  "format": "email",
                                  "maxLength": 254,
                                  "type": "string"
                                },
                                "id": {
                                  "description": "Unique identifier for the user",
                                  "example": "123e4567-e89b-12d3-a456-426614174000",
                                  "format": "uuid",
                                  "type": "string"
                                },
                                "invitedBy": {
                                  "description": "UUID of the inviter, if applicable",
                                  "format": "uuid",
                                  "nullable": true,
                                  "type": "string"
                                },
                                "joinedAt": {
                                  "description": "UNIX timestamp (ms) when the user joined the organization",
                                  "example": 1726282830000,
                                  "format": "int64",
                                  "nullable": true,
                                  "type": "number"
                                },
                                "lastLoginAt": {
                                  "description": "UNIX timestamp (ms) of last successful login",
                                  "example": 1726282860000,
                                  "format": "int64",
                                  "nullable": true,
                                  "type": "number"
                                },
                                "lastRefreshAt": {
                                  "description": "UNIX timestamp (ms) of last token refresh",
                                  "example": 1726282900000,
                                  "format": "int64",
                                  "nullable": true,
                                  "type": "number"
                                },
                                "name": {
                                  "description": "Display name for the user",
                                  "example": "Jane Smith",
                                  "maxLength": 100,
                                  "type": "string"
                                },
                                "object": {
                                  "description": "Object type identifier",
                                  "type": "string",
                                  "enum": [
                                    "user"
                                  ]
                                },
                                "organization": {
                                  "description": "UUID of the organization the user belongs to",
                                  "format": "uuid",
                                  "nullable": true,
                                  "type": "string"
                                },
                                "preferences": {
                                  "additionalProperties": false,
                                  "description": "User interface preferences",
                                  "properties": {
                                    "language": {
                                      "description": "Preferred language",
                                      "enum": [
                                        "en",
                                        "fr"
                                      ],
                                      "type": "string"
                                    },
                                    "theme": {
                                      "description": "Preferred theme",
                                      "enum": [
                                        "light",
                                        "dark"
                                      ],
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                },
                                "roles": {
                                  "description": "Role identifiers assigned to the user",
                                  "items": {
                                    "format": "uuid",
                                    "type": "string"
                                  },
                                  "type": "array"
                                },
                                "verified": {
                                  "description": "Whether the user email has been verified",
                                  "type": "boolean"
                                }
                              },
                              "required": [
                                "id",
                                "email",
                                "name",
                                "object",
                                "archived",
                                "createdAt",
                                "roles",
                                "verified"
                              ],
                              "title": "User",
                              "type": "object"
                            }
                          },
                          "required": [
                            "user"
                          ],
                          "type": "object"
                        },
                        "event": {
                          "properties": {
                            "code": {
                              "enum": [
                                "user.created"
                              ]
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Validation Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "description": "Validation error response with detailed field-level errors",
                      "properties": {
                        "code": {
                          "description": "Fixed error code for validation errors",
                          "enum": [
                            "validation.error"
                          ]
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Validation-specific metadata containing detailed error information",
                          "properties": {
                            "validation_errors": {
                              "description": "Array of field-level validation errors",
                              "items": {
                                "additionalProperties": false,
                                "description": "Individual field validation error",
                                "properties": {
                                  "code": {
                                    "description": "Specific validation error code for this field",
                                    "example": "required",
                                    "type": "string"
                                  },
                                  "params": {
                                    "additionalProperties": true,
                                    "description": "Validation parameters providing context for the error",
                                    "example": {
                                      "expectedType": "string",
                                      "receivedType": "number"
                                    },
                                    "type": "object"
                                  },
                                  "path": {
                                    "description": "JSON path to the field that failed validation",
                                    "example": "/username",
                                    "pattern": "^/",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "code",
                                  "path",
                                  "params"
                                ],
                                "type": "object"
                              },
                              "minItems": 1,
                              "type": "array"
                            }
                          },
                          "required": [
                            "validation_errors"
                          ],
                          "type": "object"
                        },
                        "status": {
                          "description": "HTTP status code for validation errors",
                          "enum": [400]
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "description": "Validation error response extending the base error response",
                  "title": "Validation Error"
                }
              }
            }
          },
          "500": {
            "description": "User Create Failed",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "code": {
                          "enum": [
                            "user.create.failed"
                          ]
                        },
                        "status": {
                          "enum": [500]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/users/login": {
      "post": {
        "tags": [
          "users"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "additionalProperties": false,
                "description": "Request body for user authentication/login",
                "properties": {
                  "email": {
                    "description": "User email address for authentication",
                    "example": "john.doe@example.com",
                    "format": "email",
                    "maxLength": 254,
                    "type": "string"
                  },
                  "password": {
                    "description": "User password for authentication",
                    "example": "securePassword123!",
                    "minLength": 6,
                    "type": "string"
                  }
                },
                "required": [
                  "email",
                  "password"
                ],
                "title": "Login User Body",
                "type": "object"
              }
            }
          },
          "required": true,
          "description": "Request body for user authentication/login"
        },
        "responses": {
          "200": {
            "description": "User Authenticated Successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard response envelope containing event information and data payload",
                      "properties": {
                        "data": {
                          "description": "Response data payload containing the actual response content",
                          "type": "object"
                        },
                        "event": {
                          "additionalProperties": false,
                          "description": "Event information describing the operation performed",
                          "properties": {
                            "code": {
                              "description": "Event code identifying the specific operation that occurred",
                              "pattern": "^[a-z]+\\.[a-z_]+$",
                              "type": "string"
                            },
                            "correlationId": {
                              "description": "Unique correlation ID linking this event to the original request for tracing",
                              "example": "123e4567-e89b-12d3-a456-426614174000",
                              "format": "uuid",
                              "type": "string"
                            },
                            "metadata": {
                              "additionalProperties": true,
                              "description": "Event-specific metadata providing additional context",
                              "example": {
                                "field": "value"
                              },
                              "type": "object"
                            },
                            "payload": {
                              "additionalProperties": true,
                              "description": "Event payload containing detailed information about the event",
                              "example": {
                                "field": "value"
                              },
                              "type": "object"
                            }
                          },
                          "required": [
                            "code"
                          ],
                          "type": "object"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the response was generated",
                          "example": 1690000000,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "event",
                        "timestamp"
                      ],
                      "title": "Reply Envelope",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "data": {
                          "oneOf": [
                            {
                              "additionalProperties": false,
                              "properties": {
                                "accessToken": {
                                  "type": "string"
                                },
                                "refreshToken": {
                                  "type": "string"
                                },
                                "user": {
                                  "additionalProperties": false,
                                  "description": "User entity representing a workspace member",
                                  "properties": {
                                    "archived": {
                                      "description": "Whether the user account is archived",
                                      "type": "boolean"
                                    },
                                    "archivedAt": {
                                      "description": "UNIX timestamp (ms) when the user was archived",
                                      "example": 1726282800000,
                                      "format": "int64",
                                      "minimum": 0,
                                      "nullable": true,
                                      "type": "number"
                                    },
                                    "archivedBy": {
                                      "description": "UUID of the actor who archived the user",
                                      "format": "uuid",
                                      "nullable": true,
                                      "type": "string"
                                    },
                                    "createdAt": {
                                      "description": "UNIX timestamp (ms) when the user was created",
                                      "example": 1726282800000,
                                      "format": "int64",
                                      "minimum": 0,
                                      "type": "number"
                                    },
                                    "email": {
                                      "description": "Primary email address",
                                      "example": "john.doe@example.com",
                                      "format": "email",
                                      "maxLength": 254,
                                      "type": "string"
                                    },
                                    "id": {
                                      "description": "Unique identifier for the user",
                                      "example": "123e4567-e89b-12d3-a456-426614174000",
                                      "format": "uuid",
                                      "type": "string"
                                    },
                                    "invitedBy": {
                                      "description": "UUID of the inviter, if applicable",
                                      "format": "uuid",
                                      "nullable": true,
                                      "type": "string"
                                    },
                                    "joinedAt": {
                                      "description": "UNIX timestamp (ms) when the user joined the organization",
                                      "example": 1726282830000,
                                      "format": "int64",
                                      "nullable": true,
                                      "type": "number"
                                    },
                                    "lastLoginAt": {
                                      "description": "UNIX timestamp (ms) of last successful login",
                                      "example": 1726282860000,
                                      "format": "int64",
                                      "nullable": true,
                                      "type": "number"
                                    },
                                    "lastRefreshAt": {
                                      "description": "UNIX timestamp (ms) of last token refresh",
                                      "example": 1726282900000,
                                      "format": "int64",
                                      "nullable": true,
                                      "type": "number"
                                    },
                                    "name": {
                                      "description": "Display name for the user",
                                      "example": "Jane Smith",
                                      "maxLength": 100,
                                      "type": "string"
                                    },
                                    "object": {
                                      "description": "Object type identifier",
                                      "type": "string",
                                      "enum": [
                                        "user"
                                      ]
                                    },
                                    "organization": {
                                      "description": "UUID of the organization the user belongs to",
                                      "format": "uuid",
                                      "nullable": true,
                                      "type": "string"
                                    },
                                    "preferences": {
                                      "additionalProperties": false,
                                      "description": "User interface preferences",
                                      "properties": {
                                        "language": {
                                          "description": "Preferred language",
                                          "enum": [
                                            "en",
                                            "fr"
                                          ],
                                          "type": "string"
                                        },
                                        "theme": {
                                          "description": "Preferred theme",
                                          "enum": [
                                            "light",
                                            "dark"
                                          ],
                                          "type": "string"
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "roles": {
                                      "description": "Role identifiers assigned to the user",
                                      "items": {
                                        "format": "uuid",
                                        "type": "string"
                                      },
                                      "type": "array"
                                    },
                                    "verified": {
                                      "description": "Whether the user email has been verified",
                                      "type": "boolean"
                                    }
                                  },
                                  "required": [
                                    "id",
                                    "email",
                                    "name",
                                    "object",
                                    "archived",
                                    "createdAt",
                                    "roles",
                                    "verified"
                                  ],
                                  "title": "User",
                                  "type": "object"
                                }
                              },
                              "required": [
                                "accessToken",
                                "refreshToken",
                                "user"
                              ],
                              "type": "object"
                            },
                            {
                              "additionalProperties": false,
                              "properties": {
                                "success": {
                                  "enum": [true]
                                }
                              },
                              "required": [
                                "success"
                              ],
                              "type": "object"
                            }
                          ]
                        },
                        "event": {
                          "oneOf": [
                            {
                              "properties": {
                                "code": {
                                  "enum": [
                                    "user.authenticated"
                                  ]
                                }
                              },
                              "type": "object"
                            },
                            {
                              "properties": {
                                "code": {
                                  "enum": [
                                    "auth.verification.email.sent"
                                  ]
                                }
                              },
                              "type": "object"
                            }
                          ]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Validation Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "description": "Validation error response with detailed field-level errors",
                      "properties": {
                        "code": {
                          "description": "Fixed error code for validation errors",
                          "enum": [
                            "validation.error"
                          ]
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Validation-specific metadata containing detailed error information",
                          "properties": {
                            "validation_errors": {
                              "description": "Array of field-level validation errors",
                              "items": {
                                "additionalProperties": false,
                                "description": "Individual field validation error",
                                "properties": {
                                  "code": {
                                    "description": "Specific validation error code for this field",
                                    "example": "required",
                                    "type": "string"
                                  },
                                  "params": {
                                    "additionalProperties": true,
                                    "description": "Validation parameters providing context for the error",
                                    "example": {
                                      "expectedType": "string",
                                      "receivedType": "number"
                                    },
                                    "type": "object"
                                  },
                                  "path": {
                                    "description": "JSON path to the field that failed validation",
                                    "example": "/username",
                                    "pattern": "^/",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "code",
                                  "path",
                                  "params"
                                ],
                                "type": "object"
                              },
                              "minItems": 1,
                              "type": "array"
                            }
                          },
                          "required": [
                            "validation_errors"
                          ],
                          "type": "object"
                        },
                        "status": {
                          "description": "HTTP status code for validation errors",
                          "enum": [400]
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "description": "Validation error response extending the base error response",
                  "title": "Validation Error"
                }
              }
            }
          },
          "401": {
            "description": "Authentication Failed",
            "content": {
              "application/problem+json": {
                "schema": {
                  "oneOf": [
                    {
                      "allOf": [
                        {
                          "additionalProperties": false,
                          "description": "Standard error response structure for API errors",
                          "properties": {
                            "code": {
                              "description": "Error code identifying the specific error type",
                              "pattern": "^[a-z]+\\.[a-z_]+$",
                              "type": "string"
                            },
                            "correlationId": {
                              "description": "Unique correlation ID linking this error to the original request for tracing",
                              "example": "123e4567-e89b-12d3-a456-426614174111",
                              "format": "uuid",
                              "type": "string"
                            },
                            "instance": {
                              "description": "Request path where the error occurred",
                              "example": "/api/v1/example/123",
                              "pattern": "^/api/v[0-9]+/",
                              "type": "string"
                            },
                            "message": {
                              "description": "Human readable error message explaining what went wrong",
                              "example": "Something went wrong",
                              "maxLength": 500,
                              "type": "string"
                            },
                            "metadata": {
                              "additionalProperties": true,
                              "description": "Error-specific metadata providing additional context about the error",
                              "example": {
                                "field": "username"
                              },
                              "type": "object"
                            },
                            "stack": {
                              "description": "Error stack trace (only included in development environments)",
                              "example": "Error: Example error\n    at example.js:10:5",
                              "type": "string"
                            },
                            "status": {
                              "description": "HTTP status code indicating the type of error",
                              "maximum": 599,
                              "minimum": 400,
                              "type": "integer"
                            },
                            "timestamp": {
                              "description": "UNIX timestamp when the error occurred",
                              "example": 1690000001,
                              "format": "int64",
                              "minimum": 0,
                              "type": "integer"
                            }
                          },
                          "required": [
                            "code",
                            "status",
                            "timestamp"
                          ],
                          "title": "Error Response",
                          "type": "object"
                        },
                        {
                          "properties": {
                            "code": {
                              "enum": [
                                "credentials.invalid"
                              ]
                            },
                            "status": {
                              "enum": [401]
                            }
                          },
                          "type": "object"
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "additionalProperties": false,
                          "description": "Standard error response structure for API errors",
                          "properties": {
                            "code": {
                              "description": "Error code identifying the specific error type",
                              "pattern": "^[a-z]+\\.[a-z_]+$",
                              "type": "string"
                            },
                            "correlationId": {
                              "description": "Unique correlation ID linking this error to the original request for tracing",
                              "example": "123e4567-e89b-12d3-a456-426614174111",
                              "format": "uuid",
                              "type": "string"
                            },
                            "instance": {
                              "description": "Request path where the error occurred",
                              "example": "/api/v1/example/123",
                              "pattern": "^/api/v[0-9]+/",
                              "type": "string"
                            },
                            "message": {
                              "description": "Human readable error message explaining what went wrong",
                              "example": "Something went wrong",
                              "maxLength": 500,
                              "type": "string"
                            },
                            "metadata": {
                              "additionalProperties": true,
                              "description": "Error-specific metadata providing additional context about the error",
                              "example": {
                                "field": "username"
                              },
                              "type": "object"
                            },
                            "stack": {
                              "description": "Error stack trace (only included in development environments)",
                              "example": "Error: Example error\n    at example.js:10:5",
                              "type": "string"
                            },
                            "status": {
                              "description": "HTTP status code indicating the type of error",
                              "maximum": 599,
                              "minimum": 400,
                              "type": "integer"
                            },
                            "timestamp": {
                              "description": "UNIX timestamp when the error occurred",
                              "example": 1690000001,
                              "format": "int64",
                              "minimum": 0,
                              "type": "integer"
                            }
                          },
                          "required": [
                            "code",
                            "status",
                            "timestamp"
                          ],
                          "title": "Error Response",
                          "type": "object"
                        },
                        {
                          "properties": {
                            "code": {
                              "enum": [
                                "user.authentication.failed"
                              ]
                            },
                            "status": {
                              "enum": [401]
                            }
                          },
                          "type": "object"
                        }
                      ]
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/users/{id}": {
      "put": {
        "tags": [
          "users"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "additionalProperties": false,
                "description": "Request body for updating user information",
                "properties": {
                  "email": {
                    "description": "New email address for the user (must be unique)",
                    "example": "john.doe.updated@example.com",
                    "format": "email",
                    "maxLength": 254,
                    "type": "string"
                  },
                  "name": {
                    "description": "New display name for the user",
                    "example": "John Updated Doe",
                    "maxLength": 100,
                    "minLength": 3,
                    "type": "string"
                  },
                  "password": {
                    "description": "New password for the user account",
                    "example": "newSecurePassword123!",
                    "minLength": 6,
                    "type": "string"
                  },
                  "preferences": {
                    "additionalProperties": false,
                    "description": "User preferences and settings",
                    "properties": {
                      "language": {
                        "description": "Preferred language code (ISO 639-1)",
                        "example": "en",
                        "pattern": "^[a-z]{2}$",
                        "type": "string"
                      },
                      "theme": {
                        "description": "Preferred UI theme",
                        "enum": [
                          "light",
                          "dark",
                          "auto"
                        ],
                        "example": "dark",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "verified": {
                    "description": "Whether the user email address has been verified",
                    "example": false,
                    "type": "boolean"
                  }
                },
                "title": "Update User Body",
                "type": "object"
              }
            }
          },
          "description": "Request body for updating user information"
        },
        "parameters": [
          {
            "schema": {
              "example": "123e4567-e89b-12d3-a456-426614174000",
              "format": "uuid",
              "type": "string"
            },
            "in": "path",
            "name": "id",
            "required": true,
            "description": "Unique identifier of the user"
          }
        ],
        "responses": {
          "200": {
            "description": "User updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard response envelope containing event information and data payload",
                      "properties": {
                        "data": {
                          "description": "Response data payload containing the actual response content",
                          "type": "object"
                        },
                        "event": {
                          "additionalProperties": false,
                          "description": "Event information describing the operation performed",
                          "properties": {
                            "code": {
                              "description": "Event code identifying the specific operation that occurred",
                              "pattern": "^[a-z]+\\.[a-z_]+$",
                              "type": "string"
                            },
                            "correlationId": {
                              "description": "Unique correlation ID linking this event to the original request for tracing",
                              "example": "123e4567-e89b-12d3-a456-426614174000",
                              "format": "uuid",
                              "type": "string"
                            },
                            "metadata": {
                              "additionalProperties": true,
                              "description": "Event-specific metadata providing additional context",
                              "example": {
                                "field": "value"
                              },
                              "type": "object"
                            },
                            "payload": {
                              "additionalProperties": true,
                              "description": "Event payload containing detailed information about the event",
                              "example": {
                                "field": "value"
                              },
                              "type": "object"
                            }
                          },
                          "required": [
                            "code"
                          ],
                          "type": "object"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the response was generated",
                          "example": 1690000000,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "event",
                        "timestamp"
                      ],
                      "title": "Reply Envelope",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "data": {
                          "additionalProperties": false,
                          "description": "Simple success response for operations that do not return data",
                          "properties": {
                            "success": {
                              "description": "Boolean flag indicating the operation completed successfully",
                              "example": true,
                              "type": "boolean",
                              "enum": [true]
                            }
                          },
                          "required": [
                            "success"
                          ],
                          "title": "Success Response",
                          "type": "object"
                        },
                        "event": {
                          "properties": {
                            "code": {
                              "enum": [
                                "user.updated"
                              ]
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Validation Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "description": "Validation error response with detailed field-level errors",
                      "properties": {
                        "code": {
                          "description": "Fixed error code for validation errors",
                          "enum": [
                            "validation.error"
                          ]
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Validation-specific metadata containing detailed error information",
                          "properties": {
                            "validation_errors": {
                              "description": "Array of field-level validation errors",
                              "items": {
                                "additionalProperties": false,
                                "description": "Individual field validation error",
                                "properties": {
                                  "code": {
                                    "description": "Specific validation error code for this field",
                                    "example": "required",
                                    "type": "string"
                                  },
                                  "params": {
                                    "additionalProperties": true,
                                    "description": "Validation parameters providing context for the error",
                                    "example": {
                                      "expectedType": "string",
                                      "receivedType": "number"
                                    },
                                    "type": "object"
                                  },
                                  "path": {
                                    "description": "JSON path to the field that failed validation",
                                    "example": "/username",
                                    "pattern": "^/",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "code",
                                  "path",
                                  "params"
                                ],
                                "type": "object"
                              },
                              "minItems": 1,
                              "type": "array"
                            }
                          },
                          "required": [
                            "validation_errors"
                          ],
                          "type": "object"
                        },
                        "status": {
                          "description": "HTTP status code for validation errors",
                          "enum": [400]
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "description": "Validation error response extending the base error response",
                  "title": "Validation Error"
                }
              }
            }
          },
          "401": {
            "description": "User Authentication Failed",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "code": {
                          "enum": [
                            "unauthorized"
                          ]
                        },
                        "status": {
                          "enum": [403]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "User Not Found",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "code": {
                          "enum": [
                            "user.not.found"
                          ]
                        },
                        "status": {
                          "enum": [404]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "User Update Failed",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "code": {
                          "enum": [
                            "user.update.failed"
                          ]
                        },
                        "status": {
                          "enum": [500]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "users"
        ],
        "parameters": [
          {
            "schema": {
              "example": "123e4567-e89b-12d3-a456-426614174000",
              "format": "uuid",
              "type": "string"
            },
            "in": "path",
            "name": "id",
            "required": true,
            "description": "Unique identifier of the user"
          }
        ],
        "responses": {
          "200": {
            "description": "User deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard response envelope containing event information and data payload",
                      "properties": {
                        "data": {
                          "description": "Response data payload containing the actual response content",
                          "type": "object"
                        },
                        "event": {
                          "additionalProperties": false,
                          "description": "Event information describing the operation performed",
                          "properties": {
                            "code": {
                              "description": "Event code identifying the specific operation that occurred",
                              "pattern": "^[a-z]+\\.[a-z_]+$",
                              "type": "string"
                            },
                            "correlationId": {
                              "description": "Unique correlation ID linking this event to the original request for tracing",
                              "example": "123e4567-e89b-12d3-a456-426614174000",
                              "format": "uuid",
                              "type": "string"
                            },
                            "metadata": {
                              "additionalProperties": true,
                              "description": "Event-specific metadata providing additional context",
                              "example": {
                                "field": "value"
                              },
                              "type": "object"
                            },
                            "payload": {
                              "additionalProperties": true,
                              "description": "Event payload containing detailed information about the event",
                              "example": {
                                "field": "value"
                              },
                              "type": "object"
                            }
                          },
                          "required": [
                            "code"
                          ],
                          "type": "object"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the response was generated",
                          "example": 1690000000,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "event",
                        "timestamp"
                      ],
                      "title": "Reply Envelope",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "data": {
                          "additionalProperties": false,
                          "description": "Simple success response for operations that do not return data",
                          "properties": {
                            "success": {
                              "description": "Boolean flag indicating the operation completed successfully",
                              "example": true,
                              "type": "boolean",
                              "enum": [true]
                            }
                          },
                          "required": [
                            "success"
                          ],
                          "title": "Success Response",
                          "type": "object"
                        },
                        "event": {
                          "properties": {
                            "code": {
                              "enum": [
                                "user.deleted"
                              ]
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Validation Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "description": "Validation error response with detailed field-level errors",
                      "properties": {
                        "code": {
                          "description": "Fixed error code for validation errors",
                          "enum": [
                            "validation.error"
                          ]
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Validation-specific metadata containing detailed error information",
                          "properties": {
                            "validation_errors": {
                              "description": "Array of field-level validation errors",
                              "items": {
                                "additionalProperties": false,
                                "description": "Individual field validation error",
                                "properties": {
                                  "code": {
                                    "description": "Specific validation error code for this field",
                                    "example": "required",
                                    "type": "string"
                                  },
                                  "params": {
                                    "additionalProperties": true,
                                    "description": "Validation parameters providing context for the error",
                                    "example": {
                                      "expectedType": "string",
                                      "receivedType": "number"
                                    },
                                    "type": "object"
                                  },
                                  "path": {
                                    "description": "JSON path to the field that failed validation",
                                    "example": "/username",
                                    "pattern": "^/",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "code",
                                  "path",
                                  "params"
                                ],
                                "type": "object"
                              },
                              "minItems": 1,
                              "type": "array"
                            }
                          },
                          "required": [
                            "validation_errors"
                          ],
                          "type": "object"
                        },
                        "status": {
                          "description": "HTTP status code for validation errors",
                          "enum": [400]
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "description": "Validation error response extending the base error response",
                  "title": "Validation Error"
                }
              }
            }
          },
          "401": {
            "description": "User Authentication Failed",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "code": {
                          "enum": [
                            "unauthorized"
                          ]
                        },
                        "status": {
                          "enum": [403]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "User Not Found",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "code": {
                          "enum": [
                            "user.not.found"
                          ]
                        },
                        "status": {
                          "enum": [404]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "User Delete Failed",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "code": {
                          "enum": [
                            "user.delete.failed"
                          ]
                        },
                        "status": {
                          "enum": [500]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "users"
        ],
        "parameters": [
          {
            "schema": {
              "example": "123e4567-e89b-12d3-a456-426614174000",
              "format": "uuid",
              "type": "string"
            },
            "in": "path",
            "name": "id",
            "required": true,
            "description": "Unique identifier of the user"
          }
        ],
        "responses": {
          "200": {
            "description": "User retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard response envelope containing event information and data payload",
                      "properties": {
                        "data": {
                          "description": "Response data payload containing the actual response content",
                          "type": "object"
                        },
                        "event": {
                          "additionalProperties": false,
                          "description": "Event information describing the operation performed",
                          "properties": {
                            "code": {
                              "description": "Event code identifying the specific operation that occurred",
                              "pattern": "^[a-z]+\\.[a-z_]+$",
                              "type": "string"
                            },
                            "correlationId": {
                              "description": "Unique correlation ID linking this event to the original request for tracing",
                              "example": "123e4567-e89b-12d3-a456-426614174000",
                              "format": "uuid",
                              "type": "string"
                            },
                            "metadata": {
                              "additionalProperties": true,
                              "description": "Event-specific metadata providing additional context",
                              "example": {
                                "field": "value"
                              },
                              "type": "object"
                            },
                            "payload": {
                              "additionalProperties": true,
                              "description": "Event payload containing detailed information about the event",
                              "example": {
                                "field": "value"
                              },
                              "type": "object"
                            }
                          },
                          "required": [
                            "code"
                          ],
                          "type": "object"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the response was generated",
                          "example": 1690000000,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "event",
                        "timestamp"
                      ],
                      "title": "Reply Envelope",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "data": {
                          "additionalProperties": false,
                          "properties": {
                            "user": {
                              "additionalProperties": false,
                              "description": "User entity representing a workspace member",
                              "properties": {
                                "archived": {
                                  "description": "Whether the user account is archived",
                                  "type": "boolean"
                                },
                                "archivedAt": {
                                  "description": "UNIX timestamp (ms) when the user was archived",
                                  "example": 1726282800000,
                                  "format": "int64",
                                  "minimum": 0,
                                  "nullable": true,
                                  "type": "number"
                                },
                                "archivedBy": {
                                  "description": "UUID of the actor who archived the user",
                                  "format": "uuid",
                                  "nullable": true,
                                  "type": "string"
                                },
                                "createdAt": {
                                  "description": "UNIX timestamp (ms) when the user was created",
                                  "example": 1726282800000,
                                  "format": "int64",
                                  "minimum": 0,
                                  "type": "number"
                                },
                                "email": {
                                  "description": "Primary email address",
                                  "example": "john.doe@example.com",
                                  "format": "email",
                                  "maxLength": 254,
                                  "type": "string"
                                },
                                "id": {
                                  "description": "Unique identifier for the user",
                                  "example": "123e4567-e89b-12d3-a456-426614174000",
                                  "format": "uuid",
                                  "type": "string"
                                },
                                "invitedBy": {
                                  "description": "UUID of the inviter, if applicable",
                                  "format": "uuid",
                                  "nullable": true,
                                  "type": "string"
                                },
                                "joinedAt": {
                                  "description": "UNIX timestamp (ms) when the user joined the organization",
                                  "example": 1726282830000,
                                  "format": "int64",
                                  "nullable": true,
                                  "type": "number"
                                },
                                "lastLoginAt": {
                                  "description": "UNIX timestamp (ms) of last successful login",
                                  "example": 1726282860000,
                                  "format": "int64",
                                  "nullable": true,
                                  "type": "number"
                                },
                                "lastRefreshAt": {
                                  "description": "UNIX timestamp (ms) of last token refresh",
                                  "example": 1726282900000,
                                  "format": "int64",
                                  "nullable": true,
                                  "type": "number"
                                },
                                "name": {
                                  "description": "Display name for the user",
                                  "example": "Jane Smith",
                                  "maxLength": 100,
                                  "type": "string"
                                },
                                "object": {
                                  "description": "Object type identifier",
                                  "type": "string",
                                  "enum": [
                                    "user"
                                  ]
                                },
                                "organization": {
                                  "description": "UUID of the organization the user belongs to",
                                  "format": "uuid",
                                  "nullable": true,
                                  "type": "string"
                                },
                                "preferences": {
                                  "additionalProperties": false,
                                  "description": "User interface preferences",
                                  "properties": {
                                    "language": {
                                      "description": "Preferred language",
                                      "enum": [
                                        "en",
                                        "fr"
                                      ],
                                      "type": "string"
                                    },
                                    "theme": {
                                      "description": "Preferred theme",
                                      "enum": [
                                        "light",
                                        "dark"
                                      ],
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                },
                                "roles": {
                                  "description": "Role identifiers assigned to the user",
                                  "items": {
                                    "format": "uuid",
                                    "type": "string"
                                  },
                                  "type": "array"
                                },
                                "verified": {
                                  "description": "Whether the user email has been verified",
                                  "type": "boolean"
                                }
                              },
                              "required": [
                                "id",
                                "email",
                                "name",
                                "object",
                                "archived",
                                "createdAt",
                                "roles",
                                "verified"
                              ],
                              "title": "User",
                              "type": "object"
                            }
                          },
                          "required": [
                            "user"
                          ],
                          "type": "object"
                        },
                        "event": {
                          "properties": {
                            "code": {
                              "enum": [
                                "user.retrieved"
                              ]
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Validation Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "description": "Validation error response with detailed field-level errors",
                      "properties": {
                        "code": {
                          "description": "Fixed error code for validation errors",
                          "enum": [
                            "validation.error"
                          ]
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Validation-specific metadata containing detailed error information",
                          "properties": {
                            "validation_errors": {
                              "description": "Array of field-level validation errors",
                              "items": {
                                "additionalProperties": false,
                                "description": "Individual field validation error",
                                "properties": {
                                  "code": {
                                    "description": "Specific validation error code for this field",
                                    "example": "required",
                                    "type": "string"
                                  },
                                  "params": {
                                    "additionalProperties": true,
                                    "description": "Validation parameters providing context for the error",
                                    "example": {
                                      "expectedType": "string",
                                      "receivedType": "number"
                                    },
                                    "type": "object"
                                  },
                                  "path": {
                                    "description": "JSON path to the field that failed validation",
                                    "example": "/username",
                                    "pattern": "^/",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "code",
                                  "path",
                                  "params"
                                ],
                                "type": "object"
                              },
                              "minItems": 1,
                              "type": "array"
                            }
                          },
                          "required": [
                            "validation_errors"
                          ],
                          "type": "object"
                        },
                        "status": {
                          "description": "HTTP status code for validation errors",
                          "enum": [400]
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "description": "Validation error response extending the base error response",
                  "title": "Validation Error"
                }
              }
            }
          },
          "401": {
            "description": "User Authentication Failed",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "code": {
                          "enum": [
                            "unauthorized"
                          ]
                        },
                        "status": {
                          "enum": [403]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "User Not Found",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "code": {
                          "enum": [
                            "user.not.found"
                          ]
                        },
                        "status": {
                          "enum": [404]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "User Retrieve Failed",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "code": {
                          "enum": [
                            "user.retrieve.failed"
                          ]
                        },
                        "status": {
                          "enum": [500]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/users/{id}/roles": {
      "post": {
        "tags": [
          "users"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "additionalProperties": false,
                "description": "Request body for adding a role to a user",
                "properties": {
                  "roleId": {
                    "description": "Unique identifier of the role to assign to the user",
                    "example": "550e8400-e29b-41d4-a716-446655440000",
                    "format": "uuid",
                    "type": "string"
                  }
                },
                "required": [
                  "roleId"
                ],
                "title": "Add Role to User Body",
                "type": "object"
              }
            }
          },
          "required": true,
          "description": "Request body for adding a role to a user"
        },
        "parameters": [
          {
            "schema": {
              "example": "123e4567-e89b-12d3-a456-426614174000",
              "format": "uuid",
              "type": "string"
            },
            "in": "path",
            "name": "id",
            "required": true,
            "description": "Unique identifier of the user"
          }
        ],
        "responses": {
          "200": {
            "description": "User Role Added Successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard response envelope containing event information and data payload",
                      "properties": {
                        "data": {
                          "description": "Response data payload containing the actual response content",
                          "type": "object"
                        },
                        "event": {
                          "additionalProperties": false,
                          "description": "Event information describing the operation performed",
                          "properties": {
                            "code": {
                              "description": "Event code identifying the specific operation that occurred",
                              "pattern": "^[a-z]+\\.[a-z_]+$",
                              "type": "string"
                            },
                            "correlationId": {
                              "description": "Unique correlation ID linking this event to the original request for tracing",
                              "example": "123e4567-e89b-12d3-a456-426614174000",
                              "format": "uuid",
                              "type": "string"
                            },
                            "metadata": {
                              "additionalProperties": true,
                              "description": "Event-specific metadata providing additional context",
                              "example": {
                                "field": "value"
                              },
                              "type": "object"
                            },
                            "payload": {
                              "additionalProperties": true,
                              "description": "Event payload containing detailed information about the event",
                              "example": {
                                "field": "value"
                              },
                              "type": "object"
                            }
                          },
                          "required": [
                            "code"
                          ],
                          "type": "object"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the response was generated",
                          "example": 1690000000,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "event",
                        "timestamp"
                      ],
                      "title": "Reply Envelope",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "data": {
                          "additionalProperties": false,
                          "description": "Simple success response for operations that do not return data",
                          "properties": {
                            "success": {
                              "description": "Boolean flag indicating the operation completed successfully",
                              "example": true,
                              "type": "boolean",
                              "enum": [true]
                            }
                          },
                          "required": [
                            "success"
                          ],
                          "title": "Success Response",
                          "type": "object"
                        },
                        "event": {
                          "properties": {
                            "code": {
                              "enum": [
                                "user.role.added"
                              ]
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Validation Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "description": "Validation error response with detailed field-level errors",
                      "properties": {
                        "code": {
                          "description": "Fixed error code for validation errors",
                          "enum": [
                            "validation.error"
                          ]
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Validation-specific metadata containing detailed error information",
                          "properties": {
                            "validation_errors": {
                              "description": "Array of field-level validation errors",
                              "items": {
                                "additionalProperties": false,
                                "description": "Individual field validation error",
                                "properties": {
                                  "code": {
                                    "description": "Specific validation error code for this field",
                                    "example": "required",
                                    "type": "string"
                                  },
                                  "params": {
                                    "additionalProperties": true,
                                    "description": "Validation parameters providing context for the error",
                                    "example": {
                                      "expectedType": "string",
                                      "receivedType": "number"
                                    },
                                    "type": "object"
                                  },
                                  "path": {
                                    "description": "JSON path to the field that failed validation",
                                    "example": "/username",
                                    "pattern": "^/",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "code",
                                  "path",
                                  "params"
                                ],
                                "type": "object"
                              },
                              "minItems": 1,
                              "type": "array"
                            }
                          },
                          "required": [
                            "validation_errors"
                          ],
                          "type": "object"
                        },
                        "status": {
                          "description": "HTTP status code for validation errors",
                          "enum": [400]
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "description": "Validation error response extending the base error response",
                  "title": "Validation Error"
                }
              }
            }
          },
          "401": {
            "description": "User Authentication Failed",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "code": {
                          "enum": [
                            "unauthorized"
                          ]
                        },
                        "status": {
                          "enum": [403]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "User Not Found",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "code": {
                          "enum": [
                            "user.not.found"
                          ]
                        },
                        "status": {
                          "enum": [404]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "User Role Add Failed",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "code": {
                          "enum": [
                            "user.not.found"
                          ]
                        },
                        "status": {
                          "enum": [404]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/users/{id}/roles/{roleId}": {
      "delete": {
        "tags": [
          "users"
        ],
        "parameters": [
          {
            "schema": {
              "example": "123e4567-e89b-12d3-a456-426614174000",
              "format": "uuid",
              "type": "string"
            },
            "in": "path",
            "name": "id",
            "required": true,
            "description": "Unique identifier of the user"
          },
          {
            "schema": {
              "example": "550e8400-e29b-41d4-a716-446655440000",
              "format": "uuid",
              "type": "string"
            },
            "in": "path",
            "name": "roleId",
            "required": true,
            "description": "Unique identifier of the role to remove from the user"
          }
        ],
        "responses": {
          "200": {
            "description": "User Role Removed Successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard response envelope containing event information and data payload",
                      "properties": {
                        "data": {
                          "description": "Response data payload containing the actual response content",
                          "type": "object"
                        },
                        "event": {
                          "additionalProperties": false,
                          "description": "Event information describing the operation performed",
                          "properties": {
                            "code": {
                              "description": "Event code identifying the specific operation that occurred",
                              "pattern": "^[a-z]+\\.[a-z_]+$",
                              "type": "string"
                            },
                            "correlationId": {
                              "description": "Unique correlation ID linking this event to the original request for tracing",
                              "example": "123e4567-e89b-12d3-a456-426614174000",
                              "format": "uuid",
                              "type": "string"
                            },
                            "metadata": {
                              "additionalProperties": true,
                              "description": "Event-specific metadata providing additional context",
                              "example": {
                                "field": "value"
                              },
                              "type": "object"
                            },
                            "payload": {
                              "additionalProperties": true,
                              "description": "Event payload containing detailed information about the event",
                              "example": {
                                "field": "value"
                              },
                              "type": "object"
                            }
                          },
                          "required": [
                            "code"
                          ],
                          "type": "object"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the response was generated",
                          "example": 1690000000,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "event",
                        "timestamp"
                      ],
                      "title": "Reply Envelope",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "data": {
                          "additionalProperties": false,
                          "description": "Simple success response for operations that do not return data",
                          "properties": {
                            "success": {
                              "description": "Boolean flag indicating the operation completed successfully",
                              "example": true,
                              "type": "boolean",
                              "enum": [true]
                            }
                          },
                          "required": [
                            "success"
                          ],
                          "title": "Success Response",
                          "type": "object"
                        },
                        "event": {
                          "properties": {
                            "code": {
                              "enum": [
                                "user.role.removed"
                              ]
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Validation Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "description": "Validation error response with detailed field-level errors",
                      "properties": {
                        "code": {
                          "description": "Fixed error code for validation errors",
                          "enum": [
                            "validation.error"
                          ]
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Validation-specific metadata containing detailed error information",
                          "properties": {
                            "validation_errors": {
                              "description": "Array of field-level validation errors",
                              "items": {
                                "additionalProperties": false,
                                "description": "Individual field validation error",
                                "properties": {
                                  "code": {
                                    "description": "Specific validation error code for this field",
                                    "example": "required",
                                    "type": "string"
                                  },
                                  "params": {
                                    "additionalProperties": true,
                                    "description": "Validation parameters providing context for the error",
                                    "example": {
                                      "expectedType": "string",
                                      "receivedType": "number"
                                    },
                                    "type": "object"
                                  },
                                  "path": {
                                    "description": "JSON path to the field that failed validation",
                                    "example": "/username",
                                    "pattern": "^/",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "code",
                                  "path",
                                  "params"
                                ],
                                "type": "object"
                              },
                              "minItems": 1,
                              "type": "array"
                            }
                          },
                          "required": [
                            "validation_errors"
                          ],
                          "type": "object"
                        },
                        "status": {
                          "description": "HTTP status code for validation errors",
                          "enum": [400]
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "description": "Validation error response extending the base error response",
                  "title": "Validation Error"
                }
              }
            }
          },
          "401": {
            "description": "User Authentication Failed",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "code": {
                          "enum": [
                            "unauthorized"
                          ]
                        },
                        "status": {
                          "enum": [403]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "User Not Found",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "code": {
                          "enum": [
                            "user.not.found"
                          ]
                        },
                        "status": {
                          "enum": [404]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/users/list": {
      "post": {
        "tags": [
          "users"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "additionalProperties": false,
                "description": "Request body for listing users with filtering and pagination",
                "properties": {
                  "limit": {
                    "description": "Maximum number of users to return",
                    "example": 20,
                    "minimum": 1,
                    "type": "integer"
                  },
                  "order": {
                    "description": "Sort order for the results",
                    "enum": [
                      "asc",
                      "desc"
                    ],
                    "example": "asc",
                    "type": "string"
                  },
                  "page": {
                    "description": "Page number for pagination (1-based)",
                    "example": 1,
                    "minimum": 1,
                    "type": "integer"
                  },
                  "roleId": {
                    "description": "Filter users by role",
                    "format": "uuid",
                    "type": "string"
                  }
                },
                "title": "List Users Body",
                "type": "object"
              }
            }
          },
          "description": "Request body for listing users with filtering and pagination"
        },
        "responses": {
          "200": {
            "description": "Users listed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard response envelope containing event information and data payload",
                      "properties": {
                        "data": {
                          "description": "Response data payload containing the actual response content",
                          "type": "object"
                        },
                        "event": {
                          "additionalProperties": false,
                          "description": "Event information describing the operation performed",
                          "properties": {
                            "code": {
                              "description": "Event code identifying the specific operation that occurred",
                              "pattern": "^[a-z]+\\.[a-z_]+$",
                              "type": "string"
                            },
                            "correlationId": {
                              "description": "Unique correlation ID linking this event to the original request for tracing",
                              "example": "123e4567-e89b-12d3-a456-426614174000",
                              "format": "uuid",
                              "type": "string"
                            },
                            "metadata": {
                              "additionalProperties": true,
                              "description": "Event-specific metadata providing additional context",
                              "example": {
                                "field": "value"
                              },
                              "type": "object"
                            },
                            "payload": {
                              "additionalProperties": true,
                              "description": "Event payload containing detailed information about the event",
                              "example": {
                                "field": "value"
                              },
                              "type": "object"
                            }
                          },
                          "required": [
                            "code"
                          ],
                          "type": "object"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the response was generated",
                          "example": 1690000000,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "event",
                        "timestamp"
                      ],
                      "title": "Reply Envelope",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "data": {
                          "additionalProperties": false,
                          "properties": {
                            "users": {
                              "items": {
                                "additionalProperties": false,
                                "description": "User entity representing a workspace member",
                                "properties": {
                                  "archived": {
                                    "description": "Whether the user account is archived",
                                    "type": "boolean"
                                  },
                                  "archivedAt": {
                                    "description": "UNIX timestamp (ms) when the user was archived",
                                    "example": 1726282800000,
                                    "format": "int64",
                                    "minimum": 0,
                                    "nullable": true,
                                    "type": "number"
                                  },
                                  "archivedBy": {
                                    "description": "UUID of the actor who archived the user",
                                    "format": "uuid",
                                    "nullable": true,
                                    "type": "string"
                                  },
                                  "createdAt": {
                                    "description": "UNIX timestamp (ms) when the user was created",
                                    "example": 1726282800000,
                                    "format": "int64",
                                    "minimum": 0,
                                    "type": "number"
                                  },
                                  "email": {
                                    "description": "Primary email address",
                                    "example": "john.doe@example.com",
                                    "format": "email",
                                    "maxLength": 254,
                                    "type": "string"
                                  },
                                  "id": {
                                    "description": "Unique identifier for the user",
                                    "example": "123e4567-e89b-12d3-a456-426614174000",
                                    "format": "uuid",
                                    "type": "string"
                                  },
                                  "invitedBy": {
                                    "description": "UUID of the inviter, if applicable",
                                    "format": "uuid",
                                    "nullable": true,
                                    "type": "string"
                                  },
                                  "joinedAt": {
                                    "description": "UNIX timestamp (ms) when the user joined the organization",
                                    "example": 1726282830000,
                                    "format": "int64",
                                    "nullable": true,
                                    "type": "number"
                                  },
                                  "lastLoginAt": {
                                    "description": "UNIX timestamp (ms) of last successful login",
                                    "example": 1726282860000,
                                    "format": "int64",
                                    "nullable": true,
                                    "type": "number"
                                  },
                                  "lastRefreshAt": {
                                    "description": "UNIX timestamp (ms) of last token refresh",
                                    "example": 1726282900000,
                                    "format": "int64",
                                    "nullable": true,
                                    "type": "number"
                                  },
                                  "name": {
                                    "description": "Display name for the user",
                                    "example": "Jane Smith",
                                    "maxLength": 100,
                                    "type": "string"
                                  },
                                  "object": {
                                    "description": "Object type identifier",
                                    "type": "string",
                                    "enum": [
                                      "user"
                                    ]
                                  },
                                  "organization": {
                                    "description": "UUID of the organization the user belongs to",
                                    "format": "uuid",
                                    "nullable": true,
                                    "type": "string"
                                  },
                                  "preferences": {
                                    "additionalProperties": false,
                                    "description": "User interface preferences",
                                    "properties": {
                                      "language": {
                                        "description": "Preferred language",
                                        "enum": [
                                          "en",
                                          "fr"
                                        ],
                                        "type": "string"
                                      },
                                      "theme": {
                                        "description": "Preferred theme",
                                        "enum": [
                                          "light",
                                          "dark"
                                        ],
                                        "type": "string"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "roles": {
                                    "description": "Role identifiers assigned to the user",
                                    "items": {
                                      "format": "uuid",
                                      "type": "string"
                                    },
                                    "type": "array"
                                  },
                                  "verified": {
                                    "description": "Whether the user email has been verified",
                                    "type": "boolean"
                                  }
                                },
                                "required": [
                                  "id",
                                  "email",
                                  "name",
                                  "object",
                                  "archived",
                                  "createdAt",
                                  "roles",
                                  "verified"
                                ],
                                "title": "User",
                                "type": "object"
                              },
                              "type": "array"
                            }
                          },
                          "required": [
                            "users"
                          ],
                          "type": "object"
                        },
                        "event": {
                          "properties": {
                            "code": {
                              "enum": [
                                "users.listed"
                              ]
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Validation Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "description": "Validation error response with detailed field-level errors",
                      "properties": {
                        "code": {
                          "description": "Fixed error code for validation errors",
                          "enum": [
                            "validation.error"
                          ]
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Validation-specific metadata containing detailed error information",
                          "properties": {
                            "validation_errors": {
                              "description": "Array of field-level validation errors",
                              "items": {
                                "additionalProperties": false,
                                "description": "Individual field validation error",
                                "properties": {
                                  "code": {
                                    "description": "Specific validation error code for this field",
                                    "example": "required",
                                    "type": "string"
                                  },
                                  "params": {
                                    "additionalProperties": true,
                                    "description": "Validation parameters providing context for the error",
                                    "example": {
                                      "expectedType": "string",
                                      "receivedType": "number"
                                    },
                                    "type": "object"
                                  },
                                  "path": {
                                    "description": "JSON path to the field that failed validation",
                                    "example": "/username",
                                    "pattern": "^/",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "code",
                                  "path",
                                  "params"
                                ],
                                "type": "object"
                              },
                              "minItems": 1,
                              "type": "array"
                            }
                          },
                          "required": [
                            "validation_errors"
                          ],
                          "type": "object"
                        },
                        "status": {
                          "description": "HTTP status code for validation errors",
                          "enum": [400]
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "description": "Validation error response extending the base error response",
                  "title": "Validation Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "code": {
                          "enum": [
                            "unauthorized"
                          ]
                        },
                        "status": {
                          "enum": [403]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/users/{id}/scopes": {
      "get": {
        "tags": [
          "users"
        ],
        "parameters": [
          {
            "schema": {
              "example": "123e4567-e89b-12d3-a456-426614174000",
              "format": "uuid",
              "type": "string"
            },
            "in": "path",
            "name": "id",
            "required": true,
            "description": "Unique identifier of the user"
          }
        ],
        "responses": {
          "200": {
            "description": "User Scopes Retrieved Successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard response envelope containing event information and data payload",
                      "properties": {
                        "data": {
                          "description": "Response data payload containing the actual response content",
                          "type": "object"
                        },
                        "event": {
                          "additionalProperties": false,
                          "description": "Event information describing the operation performed",
                          "properties": {
                            "code": {
                              "description": "Event code identifying the specific operation that occurred",
                              "pattern": "^[a-z]+\\.[a-z_]+$",
                              "type": "string"
                            },
                            "correlationId": {
                              "description": "Unique correlation ID linking this event to the original request for tracing",
                              "example": "123e4567-e89b-12d3-a456-426614174000",
                              "format": "uuid",
                              "type": "string"
                            },
                            "metadata": {
                              "additionalProperties": true,
                              "description": "Event-specific metadata providing additional context",
                              "example": {
                                "field": "value"
                              },
                              "type": "object"
                            },
                            "payload": {
                              "additionalProperties": true,
                              "description": "Event payload containing detailed information about the event",
                              "example": {
                                "field": "value"
                              },
                              "type": "object"
                            }
                          },
                          "required": [
                            "code"
                          ],
                          "type": "object"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the response was generated",
                          "example": 1690000000,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "event",
                        "timestamp"
                      ],
                      "title": "Reply Envelope",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "data": {
                          "additionalProperties": false,
                          "properties": {
                            "scopes": {
                              "description": "Array of permission scopes assigned to this user",
                              "example": [
                                "owner",
                                "organization",
                                "assistants"
                              ],
                              "items": {
                                "description": "Permission scope defining what actions this user can perform",
                                "enum": [
                                  "owner",
                                  "organization",
                                  "assistants",
                                  "roles",
                                  "members",
                                  "logs",
                                  "apiKeys",
                                  "invitations"
                                ],
                                "type": "string"
                              },
                              "type": "array"
                            }
                          },
                          "required": [
                            "scopes"
                          ],
                          "type": "object"
                        },
                        "event": {
                          "properties": {
                            "code": {
                              "enum": [
                                "user.scopes.retrieved"
                              ]
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Validation Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "description": "Validation error response with detailed field-level errors",
                      "properties": {
                        "code": {
                          "description": "Fixed error code for validation errors",
                          "enum": [
                            "validation.error"
                          ]
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Validation-specific metadata containing detailed error information",
                          "properties": {
                            "validation_errors": {
                              "description": "Array of field-level validation errors",
                              "items": {
                                "additionalProperties": false,
                                "description": "Individual field validation error",
                                "properties": {
                                  "code": {
                                    "description": "Specific validation error code for this field",
                                    "example": "required",
                                    "type": "string"
                                  },
                                  "params": {
                                    "additionalProperties": true,
                                    "description": "Validation parameters providing context for the error",
                                    "example": {
                                      "expectedType": "string",
                                      "receivedType": "number"
                                    },
                                    "type": "object"
                                  },
                                  "path": {
                                    "description": "JSON path to the field that failed validation",
                                    "example": "/username",
                                    "pattern": "^/",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "code",
                                  "path",
                                  "params"
                                ],
                                "type": "object"
                              },
                              "minItems": 1,
                              "type": "array"
                            }
                          },
                          "required": [
                            "validation_errors"
                          ],
                          "type": "object"
                        },
                        "status": {
                          "description": "HTTP status code for validation errors",
                          "enum": [400]
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "description": "Validation error response extending the base error response",
                  "title": "Validation Error"
                }
              }
            }
          },
          "401": {
            "description": "User Authentication Failed",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "code": {
                          "enum": [
                            "unauthorized"
                          ]
                        },
                        "status": {
                          "enum": [403]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "User Not Found",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "code": {
                          "enum": [
                            "user.not.found"
                          ]
                        },
                        "status": {
                          "enum": [404]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "User Retrieve Failed",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "code": {
                          "enum": [
                            "user.retrieve.failed"
                          ]
                        },
                        "status": {
                          "enum": [500]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/threads/new": {
      "post": {
        "tags": [
          "threads"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "additionalProperties": false,
                "description": "Request body for creating a new conversation thread",
                "properties": {
                  "assistantId": {
                    "description": "UUID of the assistant to create a thread with",
                    "example": "550e8400-e29b-41d4-a716-446655440000",
                    "format": "uuid",
                    "type": "string"
                  }
                },
                "required": [
                  "assistantId"
                ],
                "title": "Create Thread Body",
                "type": "object"
              }
            }
          },
          "required": true,
          "description": "Request body for creating a new conversation thread"
        },
        "responses": {
          "200": {
            "description": "Thread created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard response envelope containing event information and data payload",
                      "properties": {
                        "data": {
                          "description": "Response data payload containing the actual response content",
                          "type": "object"
                        },
                        "event": {
                          "additionalProperties": false,
                          "description": "Event information describing the operation performed",
                          "properties": {
                            "code": {
                              "description": "Event code identifying the specific operation that occurred",
                              "pattern": "^[a-z]+\\.[a-z_]+$",
                              "type": "string"
                            },
                            "correlationId": {
                              "description": "Unique correlation ID linking this event to the original request for tracing",
                              "example": "123e4567-e89b-12d3-a456-426614174000",
                              "format": "uuid",
                              "type": "string"
                            },
                            "metadata": {
                              "additionalProperties": true,
                              "description": "Event-specific metadata providing additional context",
                              "example": {
                                "field": "value"
                              },
                              "type": "object"
                            },
                            "payload": {
                              "additionalProperties": true,
                              "description": "Event payload containing detailed information about the event",
                              "example": {
                                "field": "value"
                              },
                              "type": "object"
                            }
                          },
                          "required": [
                            "code"
                          ],
                          "type": "object"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the response was generated",
                          "example": 1690000000,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "event",
                        "timestamp"
                      ],
                      "title": "Reply Envelope",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "data": {
                          "additionalProperties": false,
                          "properties": {
                            "thread": {
                              "additionalProperties": false,
                              "description": "Conversation thread containing messages between users and assistants",
                              "properties": {
                                "archived": {
                                  "description": "Whether the thread has been archived (soft deleted)",
                                  "example": false,
                                  "type": "boolean"
                                },
                                "archivedAt": {
                                  "description": "UNIX timestamp (seconds since epoch) when the thread was archived",
                                  "example": 1726282900,
                                  "format": "int64",
                                  "minimum": 0,
                                  "nullable": true,
                                  "type": "number"
                                },
                                "archivedBy": {
                                  "description": "UUID of the user who archived this thread",
                                  "example": "456f7890-f01e-23g4-b567-537725285111",
                                  "format": "uuid",
                                  "nullable": true,
                                  "type": "string"
                                },
                                "assistantId": {
                                  "description": "UUID of the assistant associated with this thread",
                                  "example": "550e8400-e29b-41d4-a716-446655440000",
                                  "format": "uuid",
                                  "type": "string"
                                },
                                "createdAt": {
                                  "description": "UNIX timestamp (seconds since epoch) when the thread was created",
                                  "example": 1726282800,
                                  "format": "int64",
                                  "minimum": 0,
                                  "type": "number"
                                },
                                "createdBy": {
                                  "description": "UUID of the user who created this thread",
                                  "example": "123e4567-e89b-12d3-a456-426614174000",
                                  "format": "uuid",
                                  "type": "string"
                                },
                                "id": {
                                  "description": "Unique identifier for the thread",
                                  "example": "880h0700-h51e-74g7-d049-779988773333",
                                  "format": "uuid",
                                  "type": "string"
                                },
                                "messages": {
                                  "description": "Messages that have been exchanged in this thread",
                                  "items": {
                                    "additionalProperties": false,
                                    "description": "Message exchanged within a thread",
                                    "properties": {
                                      "content": {
                                        "description": "Plaintext content of the message",
                                        "type": "string"
                                      },
                                      "createdAt": {
                                        "description": "UNIX timestamp when the message was created",
                                        "example": 1726282800,
                                        "format": "int64",
                                        "minimum": 0,
                                        "type": "number"
                                      },
                                      "createdBy": {
                                        "description": "UUID of the actor who created the message",
                                        "format": "uuid",
                                        "type": "string"
                                      },
                                      "id": {
                                        "description": "Unique identifier for the message",
                                        "format": "uuid",
                                        "type": "string"
                                      },
                                      "object": {
                                        "description": "Object type identifier for this entity",
                                        "type": "string",
                                        "enum": [
                                          "message"
                                        ]
                                      },
                                      "organization": {
                                        "description": "UUID of the organization that owns the message",
                                        "format": "uuid",
                                        "type": "string"
                                      },
                                      "role": {
                                        "description": "Author role for the message",
                                        "enum": [
                                          "user",
                                          "assistant",
                                          "tool"
                                        ],
                                        "type": "string"
                                      },
                                      "threadId": {
                                        "description": "UUID of the thread the message belongs to",
                                        "format": "uuid",
                                        "type": "string"
                                      },
                                      "tokens": {
                                        "description": "Token count for the message when tracked",
                                        "minimum": 0,
                                        "nullable": true,
                                        "type": "number"
                                      },
                                      "toolCalls": {
                                        "description": "Tool calls triggered by the assistant",
                                        "items": {
                                          "additionalProperties": false,
                                          "properties": {
                                            "id": {
                                              "type": "string"
                                            },
                                            "name": {
                                              "type": "string"
                                            },
                                            "query": {
                                              "type": "string"
                                            }
                                          },
                                          "type": "object"
                                        },
                                        "type": "array"
                                      },
                                      "toolResponses": {
                                        "description": "Responses returned from tools referenced in this message",
                                        "items": {
                                          "additionalProperties": false,
                                          "properties": {
                                            "content": {
                                              "type": "string"
                                            },
                                            "id": {
                                              "type": "string"
                                            },
                                            "name": {
                                              "type": "string"
                                            }
                                          },
                                          "type": "object"
                                        },
                                        "type": "array"
                                      }
                                    },
                                    "required": [
                                      "id",
                                      "thread",
                                      "role",
                                      "content",
                                      "createdAt",
                                      "createdBy",
                                      "object",
                                      "organization"
                                    ],
                                    "title": "Message",
                                    "type": "object"
                                  },
                                  "type": "array"
                                },
                                "object": {
                                  "description": "Object type identifier for this entity",
                                  "example": "thread",
                                  "type": "string",
                                  "enum": [
                                    "thread"
                                  ]
                                },
                                "organization": {
                                  "description": "UUID of the organization that owns this thread",
                                  "example": "123e4567-e89b-12d3-a456-426614174000",
                                  "format": "uuid",
                                  "type": "string"
                                },
                                "title": {
                                  "description": "Title of the conversation thread",
                                  "example": "Document Analysis Discussion",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "id",
                                "assistant",
                                "organization",
                                "title",
                                "messages",
                                "archived",
                                "createdAt",
                                "createdBy",
                                "object"
                              ],
                              "title": "Thread",
                              "type": "object"
                            }
                          },
                          "required": [
                            "thread"
                          ],
                          "type": "object"
                        },
                        "event": {
                          "properties": {
                            "code": {
                              "enum": [
                                "thread.created"
                              ]
                            }
                          },
                          "type": "object"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Validation Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "description": "Validation error response with detailed field-level errors",
                      "properties": {
                        "code": {
                          "description": "Fixed error code for validation errors",
                          "enum": [
                            "validation.error"
                          ]
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Validation-specific metadata containing detailed error information",
                          "properties": {
                            "validation_errors": {
                              "description": "Array of field-level validation errors",
                              "items": {
                                "additionalProperties": false,
                                "description": "Individual field validation error",
                                "properties": {
                                  "code": {
                                    "description": "Specific validation error code for this field",
                                    "example": "required",
                                    "type": "string"
                                  },
                                  "params": {
                                    "additionalProperties": true,
                                    "description": "Validation parameters providing context for the error",
                                    "example": {
                                      "expectedType": "string",
                                      "receivedType": "number"
                                    },
                                    "type": "object"
                                  },
                                  "path": {
                                    "description": "JSON path to the field that failed validation",
                                    "example": "/username",
                                    "pattern": "^/",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "code",
                                  "path",
                                  "params"
                                ],
                                "type": "object"
                              },
                              "minItems": 1,
                              "type": "array"
                            }
                          },
                          "required": [
                            "validation_errors"
                          ],
                          "type": "object"
                        },
                        "status": {
                          "description": "HTTP status code for validation errors",
                          "enum": [400]
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "description": "Validation error response extending the base error response",
                  "title": "Validation Error"
                }
              }
            }
          },
          "401": {
            "description": "Thread Authentication Failed",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "code": {
                          "enum": [
                            "unauthorized"
                          ]
                        },
                        "status": {
                          "enum": [403]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Thread Create Failed",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "code": {
                          "enum": [
                            "thread.create.failed"
                          ]
                        },
                        "status": {
                          "enum": [500]
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/threads/list": {
      "post": {
        "tags": [
          "threads"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "additionalProperties": false,
                "description": "Request body for listing conversation threads with filtering and pagination",
                "properties": {
                  "assistantId": {
                    "description": "UUID of the assistant to filter threads by",
                    "example": "550e8400-e29b-41d4-a716-446655440000",
                    "format": "uuid",
                    "type": "string"
                  },
                  "date": {
                    "additionalProperties": false,
                    "description": "Date range filter for thread creation",
                    "properties": {
                      "end": {
                        "anyOf": [
                          {
                            "type": "string"
                          },
                          {
                            "type": "number"
                          }
                        ],
                        "description": "End date for filtering (ISO string, timestamp, or Date)"
                      },
                      "start": {
                        "anyOf": [
                          {
                            "type": "string"
                          },
                          {
                            "type": "number"
                          }
                        ],
                        "description": "Start date for filtering (ISO string, timestamp, or Date)"
                      }
                    },
                    "type": "object"
                  },
                  "limit": {
                    "default": 10,
                    "description": "Maximum number of threads to return per page",
                    "example": 20,
                    "maximum": 100,
                    "minimum": 1,
                    "type": "integer"
                  },
                  "order": {
                    "default": "desc",
                    "description": "Sort order for the results",
                    "enum": [
                      "asc",
                      "desc"
                    ],
                    "example": "desc",
                    "type": "string"
                  },
                  "page": {
                    "default": 1,
                    "description": "Page number for pagination (1-based)",
                    "example": 1,
                    "minimum": 1,
                    "type": "integer"
                  },
                  "userId": {
                    "description": "UUID of the user to filter threads by",
                    "example": "123e4567-e89b-12d3-a456-426614174000",
                    "format": "uuid",
                    "type": "string"
                  }
                },
                "title": "List Threads Body",
                "type": "object"
              }
            }
          },
          "description": "Request body for listing conversation threads with filtering and pagination"
        },
        "responses": {
          "200": {
            "description": "Threads Listed Successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard response envelope containing event information and data payload",
                      "properties": {
                        "data": {
                          "description": "Response data payload containing the actual response content",
                          "type": "object"
                        },
                        "event": {
                          "additionalProperties": false,
                          "description": "Event information describing the operation performed",
                          "properties": {
                            "code": {
                              "description": "Event code identifying the specific operation that occurred",
                              "pattern": "^[a-z]+\\.[a-z_]+$",
                              "type": "string"
                            },
                            "correlationId": {
                              "description": "Unique correlation ID linking this event to the original request for tracing",
                              "example": "123e4567-e89b-12d3-a456-426614174000",
                              "format": "uuid",
                              "type": "string"
                            },
                            "metadata": {
                              "additionalProperties": true,
                              "description": "Event-specific metadata providing additional context",
                              "example": {
                                "field": "value"
                              },
                              "type": "object"
                            },
                            "payload": {
                              "additionalProperties": true,
                              "description": "Event payload containing detailed information about the event",
                              "example": {
                                "field": "value"
                              },
                              "type": "object"
                            }
                          },
                          "required": [
                            "code"
                          ],
                          "type": "object"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the response was generated",
                          "example": 1690000000,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "event",
                        "timestamp"
                      ],
                      "title": "Reply Envelope",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "data": {
                          "additionalProperties": false,
                          "properties": {
                            "threads": {
                              "items": {
                                "additionalProperties": false,
                                "description": "Conversation thread containing messages between users and assistants",
                                "properties": {
                                  "archived": {
                                    "description": "Whether the thread has been archived (soft deleted)",
                                    "example": false,
                                    "type": "boolean"
                                  },
                                  "archivedAt": {
                                    "description": "UNIX timestamp (seconds since epoch) when the thread was archived",
                                    "example": 1726282900,
                                    "format": "int64",
                                    "minimum": 0,
                                    "nullable": true,
                                    "type": "number"
                                  },
                                  "archivedBy": {
                                    "description": "UUID of the user who archived this thread",
                                    "example": "456f7890-f01e-23g4-b567-537725285111",
                                    "format": "uuid",
                                    "nullable": true,
                                    "type": "string"
                                  },
                                  "assistantId": {
                                    "description": "UUID of the assistant associated with this thread",
                                    "example": "550e8400-e29b-41d4-a716-446655440000",
                                    "format": "uuid",
                                    "type": "string"
                                  },
                                  "createdAt": {
                                    "description": "UNIX timestamp (seconds since epoch) when the thread was created",
                                    "example": 1726282800,
                                    "format": "int64",
                                    "minimum": 0,
                                    "type": "number"
                                  },
                                  "createdBy": {
                                    "description": "UUID of the user who created this thread",
                                    "example": "123e4567-e89b-12d3-a456-426614174000",
                                    "format": "uuid",
                                    "type": "string"
                                  },
                                  "id": {
                                    "description": "Unique identifier for the thread",
                                    "example": "880h0700-h51e-74g7-d049-779988773333",
                                    "format": "uuid",
                                    "type": "string"
                                  },
                                  "messages": {
                                    "description": "Messages that have been exchanged in this thread",
                                    "items": {
                                      "additionalProperties": false,
                                      "description": "Message exchanged within a thread",
                                      "properties": {
                                        "content": {
                                          "description": "Plaintext content of the message",
                                          "type": "string"
                                        },
                                        "createdAt": {
                                          "description": "UNIX timestamp when the message was created",
                                          "example": 1726282800,
                                          "format": "int64",
                                          "minimum": 0,
                                          "type": "number"
                                        },
                                        "createdBy": {
                                          "description": "UUID of the actor who created the message",
                                          "format": "uuid",
                                          "type": "string"
                                        },
                                        "id": {
                                          "description": "Unique identifier for the message",
                                          "format": "uuid",
                                          "type": "string"
                                        },
                                        "object": {
                                          "description": "Object type identifier for this entity",
                                          "type": "string",
                                          "enum": [
                                            "message"
                                          ]
                                        },
                                        "organization": {
                                          "description": "UUID of the organization that owns the message",
                                          "format": "uuid",
                                          "type": "string"
                                        },
                                        "role": {
                                          "description": "Author role for the message",
                                          "enum": [
                                            "user",
                                            "assistant",
                                            "tool"
                                          ],
                                          "type": "string"
                                        },
                                        "threadId": {
                                          "description": "UUID of the thread the message belongs to",
                                          "format": "uuid",
                                          "type": "string"
                                        },
                                        "tokens": {
                                          "description": "Token count for the message when tracked",
                                          "minimum": 0,
                                          "nullable": true,
                                          "type": "number"
                                        },
                                        "toolCalls": {
                                          "description": "Tool calls triggered by the assistant",
                                          "items": {
                                            "additionalProperties": false,
                                            "properties": {
                                              "id": {
                                                "type": "string"
                                              },
                                              "name": {
                                                "type": "string"
                                              },
                                              "query": {
                                                "type": "string"
                                              }
                                            },
                                            "type": "object"
                                          },
                                          "type": "array"
                                        },
                                        "toolResponses": {
                                          "description": "Responses returned from tools referenced in this message",
                                          "items": {
                                            "additionalProperties": false,
                                            "properties": {
                                              "content": {
                                                "type": "string"
                                              },
                                              "id": {
                                                "type": "string"
                                              },
                                              "name": {
                                                "type": "string"
                                              }
                                            },
                                            "type": "object"
                                          },
                                          "type": "array"
                                        }
                                      },
                                      "required": [
                                        "id",
                                        "thread",
                                        "role",
                                        "content",
                                        "createdAt",
                                        "createdBy",
                                        "object",
                                        "organization"
                                      ],
                                      "title": "Message",
                                      "type": "object"
                                    },
                                    "type": "array"
                                  },
                                  "object": {
                                    "description": "Object type identifier for this entity",
                                    "example": "thread",
                                    "type": "string",
                                    "enum": [
                                      "thread"
                                    ]
                                  },
                                  "organization": {
                                    "description": "UUID of the organization that owns this thread",
                                    "example": "123e4567-e89b-12d3-a456-426614174000",
                                    "format": "uuid",
                                    "type": "string"
                                  },
                                  "title": {
                                    "description": "Title of the conversation thread",
                                    "example": "Document Analysis Discussion",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "id",
                                  "assistant",
                                  "organization",
                                  "title",
                                  "messages",
                                  "archived",
                                  "createdAt",
                                  "createdBy",
                                  "object"
                                ],
                                "title": "Thread",
                                "type": "object"
                              },
                              "type": "array"
                            }
                          },
                          "required": [
                            "threads"
                          ],
                          "type": "object"
                        },
                        "event": {
                          "properties": {
                            "code": {
                              "enum": [
                                "threads.listed"
                              ]
                            }
                          },
                          "type": "object"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Validation Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "description": "Validation error response with detailed field-level errors",
                      "properties": {
                        "code": {
                          "description": "Fixed error code for validation errors",
                          "enum": [
                            "validation.error"
                          ]
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Validation-specific metadata containing detailed error information",
                          "properties": {
                            "validation_errors": {
                              "description": "Array of field-level validation errors",
                              "items": {
                                "additionalProperties": false,
                                "description": "Individual field validation error",
                                "properties": {
                                  "code": {
                                    "description": "Specific validation error code for this field",
                                    "example": "required",
                                    "type": "string"
                                  },
                                  "params": {
                                    "additionalProperties": true,
                                    "description": "Validation parameters providing context for the error",
                                    "example": {
                                      "expectedType": "string",
                                      "receivedType": "number"
                                    },
                                    "type": "object"
                                  },
                                  "path": {
                                    "description": "JSON path to the field that failed validation",
                                    "example": "/username",
                                    "pattern": "^/",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "code",
                                  "path",
                                  "params"
                                ],
                                "type": "object"
                              },
                              "minItems": 1,
                              "type": "array"
                            }
                          },
                          "required": [
                            "validation_errors"
                          ],
                          "type": "object"
                        },
                        "status": {
                          "description": "HTTP status code for validation errors",
                          "enum": [400]
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "description": "Validation error response extending the base error response",
                  "title": "Validation Error"
                }
              }
            }
          },
          "401": {
            "description": "Thread Authentication Failed",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "code": {
                          "enum": [
                            "unauthorized"
                          ]
                        },
                        "status": {
                          "enum": [403]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Thread List Failed",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "code": {
                          "enum": [
                            "thread.list.failed"
                          ]
                        },
                        "status": {
                          "enum": [500]
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/threads/{id}": {
      "get": {
        "tags": [
          "threads"
        ],
        "parameters": [
          {
            "schema": {
              "format": "uuid",
              "type": "string"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Thread Retrieved Successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard response envelope containing event information and data payload",
                      "properties": {
                        "data": {
                          "description": "Response data payload containing the actual response content",
                          "type": "object"
                        },
                        "event": {
                          "additionalProperties": false,
                          "description": "Event information describing the operation performed",
                          "properties": {
                            "code": {
                              "description": "Event code identifying the specific operation that occurred",
                              "pattern": "^[a-z]+\\.[a-z_]+$",
                              "type": "string"
                            },
                            "correlationId": {
                              "description": "Unique correlation ID linking this event to the original request for tracing",
                              "example": "123e4567-e89b-12d3-a456-426614174000",
                              "format": "uuid",
                              "type": "string"
                            },
                            "metadata": {
                              "additionalProperties": true,
                              "description": "Event-specific metadata providing additional context",
                              "example": {
                                "field": "value"
                              },
                              "type": "object"
                            },
                            "payload": {
                              "additionalProperties": true,
                              "description": "Event payload containing detailed information about the event",
                              "example": {
                                "field": "value"
                              },
                              "type": "object"
                            }
                          },
                          "required": [
                            "code"
                          ],
                          "type": "object"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the response was generated",
                          "example": 1690000000,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "event",
                        "timestamp"
                      ],
                      "title": "Reply Envelope",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "data": {
                          "additionalProperties": false,
                          "properties": {
                            "thread": {
                              "additionalProperties": false,
                              "description": "Conversation thread containing messages between users and assistants",
                              "properties": {
                                "archived": {
                                  "description": "Whether the thread has been archived (soft deleted)",
                                  "example": false,
                                  "type": "boolean"
                                },
                                "archivedAt": {
                                  "description": "UNIX timestamp (seconds since epoch) when the thread was archived",
                                  "example": 1726282900,
                                  "format": "int64",
                                  "minimum": 0,
                                  "nullable": true,
                                  "type": "number"
                                },
                                "archivedBy": {
                                  "description": "UUID of the user who archived this thread",
                                  "example": "456f7890-f01e-23g4-b567-537725285111",
                                  "format": "uuid",
                                  "nullable": true,
                                  "type": "string"
                                },
                                "assistantId": {
                                  "description": "UUID of the assistant associated with this thread",
                                  "example": "550e8400-e29b-41d4-a716-446655440000",
                                  "format": "uuid",
                                  "type": "string"
                                },
                                "createdAt": {
                                  "description": "UNIX timestamp (seconds since epoch) when the thread was created",
                                  "example": 1726282800,
                                  "format": "int64",
                                  "minimum": 0,
                                  "type": "number"
                                },
                                "createdBy": {
                                  "description": "UUID of the user who created this thread",
                                  "example": "123e4567-e89b-12d3-a456-426614174000",
                                  "format": "uuid",
                                  "type": "string"
                                },
                                "id": {
                                  "description": "Unique identifier for the thread",
                                  "example": "880h0700-h51e-74g7-d049-779988773333",
                                  "format": "uuid",
                                  "type": "string"
                                },
                                "messages": {
                                  "description": "Messages that have been exchanged in this thread",
                                  "items": {
                                    "additionalProperties": false,
                                    "description": "Message exchanged within a thread",
                                    "properties": {
                                      "content": {
                                        "description": "Plaintext content of the message",
                                        "type": "string"
                                      },
                                      "createdAt": {
                                        "description": "UNIX timestamp when the message was created",
                                        "example": 1726282800,
                                        "format": "int64",
                                        "minimum": 0,
                                        "type": "number"
                                      },
                                      "createdBy": {
                                        "description": "UUID of the actor who created the message",
                                        "format": "uuid",
                                        "type": "string"
                                      },
                                      "id": {
                                        "description": "Unique identifier for the message",
                                        "format": "uuid",
                                        "type": "string"
                                      },
                                      "object": {
                                        "description": "Object type identifier for this entity",
                                        "type": "string",
                                        "enum": [
                                          "message"
                                        ]
                                      },
                                      "organization": {
                                        "description": "UUID of the organization that owns the message",
                                        "format": "uuid",
                                        "type": "string"
                                      },
                                      "role": {
                                        "description": "Author role for the message",
                                        "enum": [
                                          "user",
                                          "assistant",
                                          "tool"
                                        ],
                                        "type": "string"
                                      },
                                      "threadId": {
                                        "description": "UUID of the thread the message belongs to",
                                        "format": "uuid",
                                        "type": "string"
                                      },
                                      "tokens": {
                                        "description": "Token count for the message when tracked",
                                        "minimum": 0,
                                        "nullable": true,
                                        "type": "number"
                                      },
                                      "toolCalls": {
                                        "description": "Tool calls triggered by the assistant",
                                        "items": {
                                          "additionalProperties": false,
                                          "properties": {
                                            "id": {
                                              "type": "string"
                                            },
                                            "name": {
                                              "type": "string"
                                            },
                                            "query": {
                                              "type": "string"
                                            }
                                          },
                                          "type": "object"
                                        },
                                        "type": "array"
                                      },
                                      "toolResponses": {
                                        "description": "Responses returned from tools referenced in this message",
                                        "items": {
                                          "additionalProperties": false,
                                          "properties": {
                                            "content": {
                                              "type": "string"
                                            },
                                            "id": {
                                              "type": "string"
                                            },
                                            "name": {
                                              "type": "string"
                                            }
                                          },
                                          "type": "object"
                                        },
                                        "type": "array"
                                      }
                                    },
                                    "required": [
                                      "id",
                                      "thread",
                                      "role",
                                      "content",
                                      "createdAt",
                                      "createdBy",
                                      "object",
                                      "organization"
                                    ],
                                    "title": "Message",
                                    "type": "object"
                                  },
                                  "type": "array"
                                },
                                "object": {
                                  "description": "Object type identifier for this entity",
                                  "example": "thread",
                                  "type": "string",
                                  "enum": [
                                    "thread"
                                  ]
                                },
                                "organization": {
                                  "description": "UUID of the organization that owns this thread",
                                  "example": "123e4567-e89b-12d3-a456-426614174000",
                                  "format": "uuid",
                                  "type": "string"
                                },
                                "title": {
                                  "description": "Title of the conversation thread",
                                  "example": "Document Analysis Discussion",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "id",
                                "assistant",
                                "organization",
                                "title",
                                "messages",
                                "archived",
                                "createdAt",
                                "createdBy",
                                "object"
                              ],
                              "title": "Thread",
                              "type": "object"
                            }
                          },
                          "required": [
                            "thread"
                          ],
                          "type": "object"
                        },
                        "event": {
                          "properties": {
                            "code": {
                              "enum": [
                                "thread.retrieved"
                              ]
                            }
                          },
                          "type": "object"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Validation Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "description": "Validation error response with detailed field-level errors",
                      "properties": {
                        "code": {
                          "description": "Fixed error code for validation errors",
                          "enum": [
                            "validation.error"
                          ]
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Validation-specific metadata containing detailed error information",
                          "properties": {
                            "validation_errors": {
                              "description": "Array of field-level validation errors",
                              "items": {
                                "additionalProperties": false,
                                "description": "Individual field validation error",
                                "properties": {
                                  "code": {
                                    "description": "Specific validation error code for this field",
                                    "example": "required",
                                    "type": "string"
                                  },
                                  "params": {
                                    "additionalProperties": true,
                                    "description": "Validation parameters providing context for the error",
                                    "example": {
                                      "expectedType": "string",
                                      "receivedType": "number"
                                    },
                                    "type": "object"
                                  },
                                  "path": {
                                    "description": "JSON path to the field that failed validation",
                                    "example": "/username",
                                    "pattern": "^/",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "code",
                                  "path",
                                  "params"
                                ],
                                "type": "object"
                              },
                              "minItems": 1,
                              "type": "array"
                            }
                          },
                          "required": [
                            "validation_errors"
                          ],
                          "type": "object"
                        },
                        "status": {
                          "description": "HTTP status code for validation errors",
                          "enum": [400]
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "description": "Validation error response extending the base error response",
                  "title": "Validation Error"
                }
              }
            }
          },
          "401": {
            "description": "Thread Authentication Failed",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "code": {
                          "enum": [
                            "unauthorized"
                          ]
                        },
                        "status": {
                          "enum": [403]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Thread Not Found",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "code": {
                          "enum": [
                            "thread.not.found"
                          ]
                        },
                        "status": {
                          "enum": [404]
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Thread Retrieve Failed",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "code": {
                          "enum": [
                            "thread.retrieve.failed"
                          ]
                        },
                        "status": {
                          "enum": [500]
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "threads"
        ],
        "parameters": [
          {
            "schema": {
              "format": "uuid",
              "type": "string"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Thread Deleted Successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard response envelope containing event information and data payload",
                      "properties": {
                        "data": {
                          "description": "Response data payload containing the actual response content",
                          "type": "object"
                        },
                        "event": {
                          "additionalProperties": false,
                          "description": "Event information describing the operation performed",
                          "properties": {
                            "code": {
                              "description": "Event code identifying the specific operation that occurred",
                              "pattern": "^[a-z]+\\.[a-z_]+$",
                              "type": "string"
                            },
                            "correlationId": {
                              "description": "Unique correlation ID linking this event to the original request for tracing",
                              "example": "123e4567-e89b-12d3-a456-426614174000",
                              "format": "uuid",
                              "type": "string"
                            },
                            "metadata": {
                              "additionalProperties": true,
                              "description": "Event-specific metadata providing additional context",
                              "example": {
                                "field": "value"
                              },
                              "type": "object"
                            },
                            "payload": {
                              "additionalProperties": true,
                              "description": "Event payload containing detailed information about the event",
                              "example": {
                                "field": "value"
                              },
                              "type": "object"
                            }
                          },
                          "required": [
                            "code"
                          ],
                          "type": "object"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the response was generated",
                          "example": 1690000000,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "event",
                        "timestamp"
                      ],
                      "title": "Reply Envelope",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "data": {
                          "additionalProperties": false,
                          "description": "Simple success response for operations that do not return data",
                          "properties": {
                            "success": {
                              "description": "Boolean flag indicating the operation completed successfully",
                              "example": true,
                              "type": "boolean",
                              "enum": [true]
                            }
                          },
                          "required": [
                            "success"
                          ],
                          "title": "Success Response",
                          "type": "object"
                        },
                        "event": {
                          "properties": {
                            "code": {
                              "enum": [
                                "thread.deleted"
                              ]
                            }
                          },
                          "type": "object"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Validation Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "description": "Validation error response with detailed field-level errors",
                      "properties": {
                        "code": {
                          "description": "Fixed error code for validation errors",
                          "enum": [
                            "validation.error"
                          ]
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Validation-specific metadata containing detailed error information",
                          "properties": {
                            "validation_errors": {
                              "description": "Array of field-level validation errors",
                              "items": {
                                "additionalProperties": false,
                                "description": "Individual field validation error",
                                "properties": {
                                  "code": {
                                    "description": "Specific validation error code for this field",
                                    "example": "required",
                                    "type": "string"
                                  },
                                  "params": {
                                    "additionalProperties": true,
                                    "description": "Validation parameters providing context for the error",
                                    "example": {
                                      "expectedType": "string",
                                      "receivedType": "number"
                                    },
                                    "type": "object"
                                  },
                                  "path": {
                                    "description": "JSON path to the field that failed validation",
                                    "example": "/username",
                                    "pattern": "^/",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "code",
                                  "path",
                                  "params"
                                ],
                                "type": "object"
                              },
                              "minItems": 1,
                              "type": "array"
                            }
                          },
                          "required": [
                            "validation_errors"
                          ],
                          "type": "object"
                        },
                        "status": {
                          "description": "HTTP status code for validation errors",
                          "enum": [400]
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "description": "Validation error response extending the base error response",
                  "title": "Validation Error"
                }
              }
            }
          },
          "401": {
            "description": "Thread Authentication Failed",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "code": {
                          "enum": [
                            "unauthorized"
                          ]
                        },
                        "status": {
                          "enum": [403]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Thread Not Found",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "code": {
                          "enum": [
                            "thread.not.found"
                          ]
                        },
                        "status": {
                          "enum": [404]
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Thread Delete Failed",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "code": {
                          "enum": [
                            "thread.delete.failed"
                          ]
                        },
                        "status": {
                          "enum": [500]
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/threads/{id}/archive": {
      "post": {
        "tags": [
          "threads"
        ],
        "parameters": [
          {
            "schema": {
              "format": "uuid",
              "type": "string"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Thread Archived Successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard response envelope containing event information and data payload",
                      "properties": {
                        "data": {
                          "description": "Response data payload containing the actual response content",
                          "type": "object"
                        },
                        "event": {
                          "additionalProperties": false,
                          "description": "Event information describing the operation performed",
                          "properties": {
                            "code": {
                              "description": "Event code identifying the specific operation that occurred",
                              "pattern": "^[a-z]+\\.[a-z_]+$",
                              "type": "string"
                            },
                            "correlationId": {
                              "description": "Unique correlation ID linking this event to the original request for tracing",
                              "example": "123e4567-e89b-12d3-a456-426614174000",
                              "format": "uuid",
                              "type": "string"
                            },
                            "metadata": {
                              "additionalProperties": true,
                              "description": "Event-specific metadata providing additional context",
                              "example": {
                                "field": "value"
                              },
                              "type": "object"
                            },
                            "payload": {
                              "additionalProperties": true,
                              "description": "Event payload containing detailed information about the event",
                              "example": {
                                "field": "value"
                              },
                              "type": "object"
                            }
                          },
                          "required": [
                            "code"
                          ],
                          "type": "object"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the response was generated",
                          "example": 1690000000,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "event",
                        "timestamp"
                      ],
                      "title": "Reply Envelope",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "data": {
                          "additionalProperties": false,
                          "description": "Simple success response for operations that do not return data",
                          "properties": {
                            "success": {
                              "description": "Boolean flag indicating the operation completed successfully",
                              "example": true,
                              "type": "boolean",
                              "enum": [true]
                            }
                          },
                          "required": [
                            "success"
                          ],
                          "title": "Success Response",
                          "type": "object"
                        },
                        "event": {
                          "properties": {
                            "code": {
                              "enum": [
                                "thread.archived"
                              ]
                            }
                          },
                          "type": "object"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Validation Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "description": "Validation error response with detailed field-level errors",
                      "properties": {
                        "code": {
                          "description": "Fixed error code for validation errors",
                          "enum": [
                            "validation.error"
                          ]
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Validation-specific metadata containing detailed error information",
                          "properties": {
                            "validation_errors": {
                              "description": "Array of field-level validation errors",
                              "items": {
                                "additionalProperties": false,
                                "description": "Individual field validation error",
                                "properties": {
                                  "code": {
                                    "description": "Specific validation error code for this field",
                                    "example": "required",
                                    "type": "string"
                                  },
                                  "params": {
                                    "additionalProperties": true,
                                    "description": "Validation parameters providing context for the error",
                                    "example": {
                                      "expectedType": "string",
                                      "receivedType": "number"
                                    },
                                    "type": "object"
                                  },
                                  "path": {
                                    "description": "JSON path to the field that failed validation",
                                    "example": "/username",
                                    "pattern": "^/",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "code",
                                  "path",
                                  "params"
                                ],
                                "type": "object"
                              },
                              "minItems": 1,
                              "type": "array"
                            }
                          },
                          "required": [
                            "validation_errors"
                          ],
                          "type": "object"
                        },
                        "status": {
                          "description": "HTTP status code for validation errors",
                          "enum": [400]
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "description": "Validation error response extending the base error response",
                  "title": "Validation Error"
                }
              }
            }
          },
          "401": {
            "description": "Thread Authentication Failed",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "code": {
                          "enum": [
                            "unauthorized"
                          ]
                        },
                        "status": {
                          "enum": [403]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Thread Not Found",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "code": {
                          "enum": [
                            "thread.not.found"
                          ]
                        },
                        "status": {
                          "enum": [404]
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Thread Archive Failed",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "code": {
                          "enum": [
                            "thread.archive.failed"
                          ]
                        },
                        "status": {
                          "enum": [500]
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/threads/{id}/restore": {
      "post": {
        "tags": [
          "threads"
        ],
        "parameters": [
          {
            "schema": {
              "format": "uuid",
              "type": "string"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Thread Restored Successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard response envelope containing event information and data payload",
                      "properties": {
                        "data": {
                          "description": "Response data payload containing the actual response content",
                          "type": "object"
                        },
                        "event": {
                          "additionalProperties": false,
                          "description": "Event information describing the operation performed",
                          "properties": {
                            "code": {
                              "description": "Event code identifying the specific operation that occurred",
                              "pattern": "^[a-z]+\\.[a-z_]+$",
                              "type": "string"
                            },
                            "correlationId": {
                              "description": "Unique correlation ID linking this event to the original request for tracing",
                              "example": "123e4567-e89b-12d3-a456-426614174000",
                              "format": "uuid",
                              "type": "string"
                            },
                            "metadata": {
                              "additionalProperties": true,
                              "description": "Event-specific metadata providing additional context",
                              "example": {
                                "field": "value"
                              },
                              "type": "object"
                            },
                            "payload": {
                              "additionalProperties": true,
                              "description": "Event payload containing detailed information about the event",
                              "example": {
                                "field": "value"
                              },
                              "type": "object"
                            }
                          },
                          "required": [
                            "code"
                          ],
                          "type": "object"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the response was generated",
                          "example": 1690000000,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "event",
                        "timestamp"
                      ],
                      "title": "Reply Envelope",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "data": {
                          "additionalProperties": false,
                          "description": "Simple success response for operations that do not return data",
                          "properties": {
                            "success": {
                              "description": "Boolean flag indicating the operation completed successfully",
                              "example": true,
                              "type": "boolean",
                              "enum": [true]
                            }
                          },
                          "required": [
                            "success"
                          ],
                          "title": "Success Response",
                          "type": "object"
                        },
                        "event": {
                          "properties": {
                            "code": {
                              "enum": [
                                "thread.restored"
                              ]
                            }
                          },
                          "type": "object"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Validation Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "description": "Validation error response with detailed field-level errors",
                      "properties": {
                        "code": {
                          "description": "Fixed error code for validation errors",
                          "enum": [
                            "validation.error"
                          ]
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Validation-specific metadata containing detailed error information",
                          "properties": {
                            "validation_errors": {
                              "description": "Array of field-level validation errors",
                              "items": {
                                "additionalProperties": false,
                                "description": "Individual field validation error",
                                "properties": {
                                  "code": {
                                    "description": "Specific validation error code for this field",
                                    "example": "required",
                                    "type": "string"
                                  },
                                  "params": {
                                    "additionalProperties": true,
                                    "description": "Validation parameters providing context for the error",
                                    "example": {
                                      "expectedType": "string",
                                      "receivedType": "number"
                                    },
                                    "type": "object"
                                  },
                                  "path": {
                                    "description": "JSON path to the field that failed validation",
                                    "example": "/username",
                                    "pattern": "^/",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "code",
                                  "path",
                                  "params"
                                ],
                                "type": "object"
                              },
                              "minItems": 1,
                              "type": "array"
                            }
                          },
                          "required": [
                            "validation_errors"
                          ],
                          "type": "object"
                        },
                        "status": {
                          "description": "HTTP status code for validation errors",
                          "enum": [400]
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "description": "Validation error response extending the base error response",
                  "title": "Validation Error"
                }
              }
            }
          },
          "401": {
            "description": "Thread Authentication Failed",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "code": {
                          "enum": [
                            "unauthorized"
                          ]
                        },
                        "status": {
                          "enum": [403]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Thread Not Found",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "code": {
                          "enum": [
                            "thread.not.found"
                          ]
                        },
                        "status": {
                          "enum": [404]
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Thread Restore Failed",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "code": {
                          "enum": [
                            "thread.restore.failed"
                          ]
                        },
                        "status": {
                          "enum": [500]
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/files/{id}": {
      "delete": {
        "tags": [
          "files"
        ],
        "parameters": [
          {
            "schema": {
              "format": "uuid",
              "type": "string"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "File Deleted Successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard response envelope containing event information and data payload",
                      "properties": {
                        "data": {
                          "description": "Response data payload containing the actual response content",
                          "type": "object"
                        },
                        "event": {
                          "additionalProperties": false,
                          "description": "Event information describing the operation performed",
                          "properties": {
                            "code": {
                              "description": "Event code identifying the specific operation that occurred",
                              "pattern": "^[a-z]+\\.[a-z_]+$",
                              "type": "string"
                            },
                            "correlationId": {
                              "description": "Unique correlation ID linking this event to the original request for tracing",
                              "example": "123e4567-e89b-12d3-a456-426614174000",
                              "format": "uuid",
                              "type": "string"
                            },
                            "metadata": {
                              "additionalProperties": true,
                              "description": "Event-specific metadata providing additional context",
                              "example": {
                                "field": "value"
                              },
                              "type": "object"
                            },
                            "payload": {
                              "additionalProperties": true,
                              "description": "Event payload containing detailed information about the event",
                              "example": {
                                "field": "value"
                              },
                              "type": "object"
                            }
                          },
                          "required": [
                            "code"
                          ],
                          "type": "object"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the response was generated",
                          "example": 1690000000,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "event",
                        "timestamp"
                      ],
                      "title": "Reply Envelope",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "data": {
                          "additionalProperties": false,
                          "description": "Simple success response for operations that do not return data",
                          "properties": {
                            "success": {
                              "description": "Boolean flag indicating the operation completed successfully",
                              "example": true,
                              "type": "boolean",
                              "enum": [true]
                            }
                          },
                          "required": [
                            "success"
                          ],
                          "title": "Success Response",
                          "type": "object"
                        },
                        "event": {
                          "properties": {
                            "code": {
                              "enum": [
                                "file.deleted"
                              ]
                            }
                          },
                          "type": "object"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Validation Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "description": "Validation error response with detailed field-level errors",
                      "properties": {
                        "code": {
                          "description": "Fixed error code for validation errors",
                          "enum": [
                            "validation.error"
                          ]
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Validation-specific metadata containing detailed error information",
                          "properties": {
                            "validation_errors": {
                              "description": "Array of field-level validation errors",
                              "items": {
                                "additionalProperties": false,
                                "description": "Individual field validation error",
                                "properties": {
                                  "code": {
                                    "description": "Specific validation error code for this field",
                                    "example": "required",
                                    "type": "string"
                                  },
                                  "params": {
                                    "additionalProperties": true,
                                    "description": "Validation parameters providing context for the error",
                                    "example": {
                                      "expectedType": "string",
                                      "receivedType": "number"
                                    },
                                    "type": "object"
                                  },
                                  "path": {
                                    "description": "JSON path to the field that failed validation",
                                    "example": "/username",
                                    "pattern": "^/",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "code",
                                  "path",
                                  "params"
                                ],
                                "type": "object"
                              },
                              "minItems": 1,
                              "type": "array"
                            }
                          },
                          "required": [
                            "validation_errors"
                          ],
                          "type": "object"
                        },
                        "status": {
                          "description": "HTTP status code for validation errors",
                          "enum": [400]
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "description": "Validation error response extending the base error response",
                  "title": "Validation Error"
                }
              }
            }
          },
          "401": {
            "description": "File Authentication Failed",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "code": {
                          "enum": [
                            "unauthorized"
                          ]
                        },
                        "status": {
                          "enum": [403]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "File Not Found",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "code": {
                          "enum": [
                            "file.not.found"
                          ]
                        },
                        "status": {
                          "enum": [404]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "File Delete Failed",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "code": {
                          "enum": [
                            "file.delete.failed"
                          ]
                        },
                        "status": {
                          "enum": [500]
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "files"
        ],
        "parameters": [
          {
            "schema": {
              "format": "uuid",
              "type": "string"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "File Retrieved Successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard response envelope containing event information and data payload",
                      "properties": {
                        "data": {
                          "description": "Response data payload containing the actual response content",
                          "type": "object"
                        },
                        "event": {
                          "additionalProperties": false,
                          "description": "Event information describing the operation performed",
                          "properties": {
                            "code": {
                              "description": "Event code identifying the specific operation that occurred",
                              "pattern": "^[a-z]+\\.[a-z_]+$",
                              "type": "string"
                            },
                            "correlationId": {
                              "description": "Unique correlation ID linking this event to the original request for tracing",
                              "example": "123e4567-e89b-12d3-a456-426614174000",
                              "format": "uuid",
                              "type": "string"
                            },
                            "metadata": {
                              "additionalProperties": true,
                              "description": "Event-specific metadata providing additional context",
                              "example": {
                                "field": "value"
                              },
                              "type": "object"
                            },
                            "payload": {
                              "additionalProperties": true,
                              "description": "Event payload containing detailed information about the event",
                              "example": {
                                "field": "value"
                              },
                              "type": "object"
                            }
                          },
                          "required": [
                            "code"
                          ],
                          "type": "object"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the response was generated",
                          "example": 1690000000,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "event",
                        "timestamp"
                      ],
                      "title": "Reply Envelope",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "data": {
                          "additionalProperties": false,
                          "properties": {
                            "file": {
                              "additionalProperties": false,
                              "description": "File entity representing an uploaded document or media file",
                              "properties": {
                                "archived": {
                                  "description": "Whether the file has been archived (soft deleted)",
                                  "example": false,
                                  "type": "boolean"
                                },
                                "archivedAt": {
                                  "description": "UNIX timestamp when the file was archived",
                                  "example": 1726282800,
                                  "format": "int64",
                                  "minimum": 0,
                                  "nullable": true,
                                  "type": "number"
                                },
                                "archivedBy": {
                                  "description": "ID of user who archived the file, or null if not archived",
                                  "example": "123e4567-e89b-12d3-a456-426614174000",
                                  "format": "uuid",
                                  "nullable": true,
                                  "type": "string"
                                },
                                "assistantId": {
                                  "description": "UUID of the assistant this file is associated with",
                                  "example": "550e8400-e29b-41d4-a716-446655440000",
                                  "format": "uuid",
                                  "type": "string"
                                },
                                "createdAt": {
                                  "description": "UNIX timestamp when the file was uploaded",
                                  "example": 1726282800,
                                  "format": "int64",
                                  "minimum": 0,
                                  "type": "number"
                                },
                                "createdBy": {
                                  "description": "UUID of the user who uploaded the file",
                                  "example": "123e4567-e89b-12d3-a456-426614174000",
                                  "format": "uuid",
                                  "type": "string"
                                },
                                "folder": {
                                  "description": "ID of folder containing the file, or null if in root",
                                  "example": "770g9600-g40d-63f6-c938-668877662222",
                                  "format": "uuid",
                                  "nullable": true,
                                  "type": "string"
                                },
                                "id": {
                                  "description": "Unique identifier for the file",
                                  "example": "123e4567-e89b-12d3-a456-426614174000",
                                  "format": "uuid",
                                  "type": "string"
                                },
                                "name": {
                                  "description": "Original filename of the uploaded file",
                                  "example": "document.pdf",
                                  "type": "string"
                                },
                                "object": {
                                  "description": "Object type identifier for this entity",
                                  "example": "file",
                                  "type": "string",
                                  "enum": [
                                    "file"
                                  ]
                                },
                                "organization": {
                                  "description": "UUID of the organization that owns the file",
                                  "example": "123e4567-e89b-12d3-a456-426614174000",
                                  "format": "uuid",
                                  "type": "string"
                                },
                                "pages": {
                                  "description": "Number of pages in the file, or null if not applicable",
                                  "example": 25,
                                  "minimum": 0,
                                  "nullable": true,
                                  "type": "integer"
                                },
                                "size": {
                                  "description": "File size in bytes",
                                  "example": 2048576,
                                  "minimum": 0,
                                  "type": "integer"
                                },
                                "status": {
                                  "description": "Current processing status of the file",
                                  "enum": [
                                    "complete",
                                    "error",
                                    "indexing"
                                  ],
                                  "example": "complete",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "id",
                                "name",
                                "object",
                                "size",
                                "status",
                                "archived",
                                "assistant",
                                "organization",
                                "createdAt",
                                "createdBy"
                              ],
                              "title": "File",
                              "type": "object"
                            }
                          },
                          "required": [
                            "file"
                          ],
                          "type": "object"
                        },
                        "event": {
                          "properties": {
                            "code": {
                              "enum": [
                                "file.retrieved"
                              ]
                            }
                          },
                          "type": "object"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Validation Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "description": "Validation error response with detailed field-level errors",
                      "properties": {
                        "code": {
                          "description": "Fixed error code for validation errors",
                          "enum": [
                            "validation.error"
                          ]
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Validation-specific metadata containing detailed error information",
                          "properties": {
                            "validation_errors": {
                              "description": "Array of field-level validation errors",
                              "items": {
                                "additionalProperties": false,
                                "description": "Individual field validation error",
                                "properties": {
                                  "code": {
                                    "description": "Specific validation error code for this field",
                                    "example": "required",
                                    "type": "string"
                                  },
                                  "params": {
                                    "additionalProperties": true,
                                    "description": "Validation parameters providing context for the error",
                                    "example": {
                                      "expectedType": "string",
                                      "receivedType": "number"
                                    },
                                    "type": "object"
                                  },
                                  "path": {
                                    "description": "JSON path to the field that failed validation",
                                    "example": "/username",
                                    "pattern": "^/",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "code",
                                  "path",
                                  "params"
                                ],
                                "type": "object"
                              },
                              "minItems": 1,
                              "type": "array"
                            }
                          },
                          "required": [
                            "validation_errors"
                          ],
                          "type": "object"
                        },
                        "status": {
                          "description": "HTTP status code for validation errors",
                          "enum": [400]
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "description": "Validation error response extending the base error response",
                  "title": "Validation Error"
                }
              }
            }
          },
          "401": {
            "description": "File Authentication Failed",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "code": {
                          "enum": [
                            "unauthorized"
                          ]
                        },
                        "status": {
                          "enum": [403]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "File Not Found",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "code": {
                          "enum": [
                            "file.not.found"
                          ]
                        },
                        "status": {
                          "enum": [404]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "File Retrieve Failed",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "code": {
                          "enum": [
                            "file.retrieve.failed"
                          ]
                        },
                        "status": {
                          "enum": [500]
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/files/list": {
      "post": {
        "tags": [
          "files"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "additionalProperties": false,
                "description": "Request body for listing files with filtering and pagination",
                "properties": {
                  "archived": {
                    "default": false,
                    "description": "Filter for archived files. Defaults to false (non-archived only)",
                    "type": "boolean"
                  },
                  "assistantId": {
                    "description": "UUID of the assistant to filter files by",
                    "example": "123e4567-e89b-12d3-a456-426614174000",
                    "format": "uuid",
                    "type": "string"
                  },
                  "date": {
                    "additionalProperties": false,
                    "description": "Date range filter for file creation",
                    "properties": {
                      "end": {
                        "anyOf": [
                          {
                            "type": "string"
                          },
                          {
                            "type": "number"
                          }
                        ],
                        "description": "End date for filtering (ISO string, timestamp, or Date)"
                      },
                      "start": {
                        "anyOf": [
                          {
                            "type": "string"
                          },
                          {
                            "type": "number"
                          }
                        ],
                        "description": "Start date for filtering (ISO string, timestamp, or Date)"
                      }
                    },
                    "type": "object"
                  },
                  "folderId": {
                    "description": "UUID of the folder to list files from",
                    "example": "789e0123-e45b-67c8-d901-234567890abc",
                    "format": "uuid",
                    "type": "string"
                  },
                  "limit": {
                    "default": 10,
                    "description": "Maximum number of files to return per page",
                    "example": 20,
                    "maximum": 100,
                    "minimum": 1,
                    "type": "integer"
                  },
                  "order": {
                    "default": "asc",
                    "description": "Sort order for the results",
                    "enum": [
                      "asc",
                      "desc"
                    ],
                    "type": "string"
                  },
                  "page": {
                    "default": 1,
                    "description": "Page number for pagination (1-based)",
                    "example": 1,
                    "minimum": 1,
                    "type": "integer"
                  },
                  "pages": {
                    "additionalProperties": false,
                    "description": "Filter by number of pages in the file",
                    "properties": {
                      "max": {
                        "description": "Maximum number of pages",
                        "example": 100,
                        "type": "number"
                      },
                      "min": {
                        "description": "Minimum number of pages",
                        "example": 1,
                        "type": "number"
                      }
                    },
                    "type": "object"
                  },
                  "search": {
                    "additionalProperties": false,
                    "description": "Search criteria for file names",
                    "properties": {
                      "name": {
                        "description": "Search term to match against file names",
                        "example": "report",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "size": {
                    "additionalProperties": false,
                    "description": "Filter by file size in bytes",
                    "properties": {
                      "max": {
                        "description": "Maximum file size in bytes",
                        "example": 10485760,
                        "type": "number"
                      },
                      "min": {
                        "description": "Minimum file size in bytes",
                        "example": 1024,
                        "type": "number"
                      }
                    },
                    "type": "object"
                  },
                  "status": {
                    "description": "Filter by file processing status",
                    "enum": [
                      "complete",
                      "error",
                      "indexing"
                    ],
                    "example": "complete",
                    "type": "string"
                  }
                },
                "title": "List Files Body",
                "type": "object"
              }
            }
          },
          "description": "Request body for listing files with filtering and pagination"
        },
        "responses": {
          "200": {
            "description": "Files Listed Successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard response envelope containing event information and data payload",
                      "properties": {
                        "data": {
                          "description": "Response data payload containing the actual response content",
                          "type": "object"
                        },
                        "event": {
                          "additionalProperties": false,
                          "description": "Event information describing the operation performed",
                          "properties": {
                            "code": {
                              "description": "Event code identifying the specific operation that occurred",
                              "pattern": "^[a-z]+\\.[a-z_]+$",
                              "type": "string"
                            },
                            "correlationId": {
                              "description": "Unique correlation ID linking this event to the original request for tracing",
                              "example": "123e4567-e89b-12d3-a456-426614174000",
                              "format": "uuid",
                              "type": "string"
                            },
                            "metadata": {
                              "additionalProperties": true,
                              "description": "Event-specific metadata providing additional context",
                              "example": {
                                "field": "value"
                              },
                              "type": "object"
                            },
                            "payload": {
                              "additionalProperties": true,
                              "description": "Event payload containing detailed information about the event",
                              "example": {
                                "field": "value"
                              },
                              "type": "object"
                            }
                          },
                          "required": [
                            "code"
                          ],
                          "type": "object"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the response was generated",
                          "example": 1690000000,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "event",
                        "timestamp"
                      ],
                      "title": "Reply Envelope",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "data": {
                          "additionalProperties": false,
                          "properties": {
                            "files": {
                              "items": {
                                "additionalProperties": false,
                                "description": "File entity representing an uploaded document or media file",
                                "properties": {
                                  "archived": {
                                    "description": "Whether the file has been archived (soft deleted)",
                                    "example": false,
                                    "type": "boolean"
                                  },
                                  "archivedAt": {
                                    "description": "UNIX timestamp when the file was archived",
                                    "example": 1726282800,
                                    "format": "int64",
                                    "minimum": 0,
                                    "nullable": true,
                                    "type": "number"
                                  },
                                  "archivedBy": {
                                    "description": "ID of user who archived the file, or null if not archived",
                                    "example": "123e4567-e89b-12d3-a456-426614174000",
                                    "format": "uuid",
                                    "nullable": true,
                                    "type": "string"
                                  },
                                  "assistantId": {
                                    "description": "UUID of the assistant this file is associated with",
                                    "example": "550e8400-e29b-41d4-a716-446655440000",
                                    "format": "uuid",
                                    "type": "string"
                                  },
                                  "createdAt": {
                                    "description": "UNIX timestamp when the file was uploaded",
                                    "example": 1726282800,
                                    "format": "int64",
                                    "minimum": 0,
                                    "type": "number"
                                  },
                                  "createdBy": {
                                    "description": "UUID of the user who uploaded the file",
                                    "example": "123e4567-e89b-12d3-a456-426614174000",
                                    "format": "uuid",
                                    "type": "string"
                                  },
                                  "folder": {
                                    "description": "ID of folder containing the file, or null if in root",
                                    "example": "770g9600-g40d-63f6-c938-668877662222",
                                    "format": "uuid",
                                    "nullable": true,
                                    "type": "string"
                                  },
                                  "id": {
                                    "description": "Unique identifier for the file",
                                    "example": "123e4567-e89b-12d3-a456-426614174000",
                                    "format": "uuid",
                                    "type": "string"
                                  },
                                  "name": {
                                    "description": "Original filename of the uploaded file",
                                    "example": "document.pdf",
                                    "type": "string"
                                  },
                                  "object": {
                                    "description": "Object type identifier for this entity",
                                    "example": "file",
                                    "type": "string",
                                    "enum": [
                                      "file"
                                    ]
                                  },
                                  "organization": {
                                    "description": "UUID of the organization that owns the file",
                                    "example": "123e4567-e89b-12d3-a456-426614174000",
                                    "format": "uuid",
                                    "type": "string"
                                  },
                                  "pages": {
                                    "description": "Number of pages in the file, or null if not applicable",
                                    "example": 25,
                                    "minimum": 0,
                                    "nullable": true,
                                    "type": "integer"
                                  },
                                  "size": {
                                    "description": "File size in bytes",
                                    "example": 2048576,
                                    "minimum": 0,
                                    "type": "integer"
                                  },
                                  "status": {
                                    "description": "Current processing status of the file",
                                    "enum": [
                                      "complete",
                                      "error",
                                      "indexing"
                                    ],
                                    "example": "complete",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "id",
                                  "name",
                                  "object",
                                  "size",
                                  "status",
                                  "archived",
                                  "assistant",
                                  "organization",
                                  "createdAt",
                                  "createdBy"
                                ],
                                "title": "File",
                                "type": "object"
                              },
                              "type": "array"
                            }
                          },
                          "required": [
                            "files"
                          ],
                          "type": "object"
                        },
                        "event": {
                          "properties": {
                            "code": {
                              "enum": [
                                "files.listed"
                              ]
                            }
                          },
                          "type": "object"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Validation Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "description": "Validation error response with detailed field-level errors",
                      "properties": {
                        "code": {
                          "description": "Fixed error code for validation errors",
                          "enum": [
                            "validation.error"
                          ]
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Validation-specific metadata containing detailed error information",
                          "properties": {
                            "validation_errors": {
                              "description": "Array of field-level validation errors",
                              "items": {
                                "additionalProperties": false,
                                "description": "Individual field validation error",
                                "properties": {
                                  "code": {
                                    "description": "Specific validation error code for this field",
                                    "example": "required",
                                    "type": "string"
                                  },
                                  "params": {
                                    "additionalProperties": true,
                                    "description": "Validation parameters providing context for the error",
                                    "example": {
                                      "expectedType": "string",
                                      "receivedType": "number"
                                    },
                                    "type": "object"
                                  },
                                  "path": {
                                    "description": "JSON path to the field that failed validation",
                                    "example": "/username",
                                    "pattern": "^/",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "code",
                                  "path",
                                  "params"
                                ],
                                "type": "object"
                              },
                              "minItems": 1,
                              "type": "array"
                            }
                          },
                          "required": [
                            "validation_errors"
                          ],
                          "type": "object"
                        },
                        "status": {
                          "description": "HTTP status code for validation errors",
                          "enum": [400]
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "description": "Validation error response extending the base error response",
                  "title": "Validation Error"
                }
              }
            }
          },
          "401": {
            "description": "File Authentication Failed",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "code": {
                          "enum": [
                            "unauthorized"
                          ]
                        },
                        "status": {
                          "enum": [403]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "File Not Found",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "code": {
                          "enum": [
                            "file.not.found"
                          ]
                        },
                        "status": {
                          "enum": [404]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "File List Failed",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "code": {
                          "enum": [
                            "file.list.failed"
                          ]
                        },
                        "status": {
                          "enum": [500]
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/files/repair/{id}": {
      "post": {
        "tags": [
          "files"
        ],
        "parameters": [
          {
            "schema": {
              "format": "uuid",
              "type": "string"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "File Repaired Successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard response envelope containing event information and data payload",
                      "properties": {
                        "data": {
                          "description": "Response data payload containing the actual response content",
                          "type": "object"
                        },
                        "event": {
                          "additionalProperties": false,
                          "description": "Event information describing the operation performed",
                          "properties": {
                            "code": {
                              "description": "Event code identifying the specific operation that occurred",
                              "pattern": "^[a-z]+\\.[a-z_]+$",
                              "type": "string"
                            },
                            "correlationId": {
                              "description": "Unique correlation ID linking this event to the original request for tracing",
                              "example": "123e4567-e89b-12d3-a456-426614174000",
                              "format": "uuid",
                              "type": "string"
                            },
                            "metadata": {
                              "additionalProperties": true,
                              "description": "Event-specific metadata providing additional context",
                              "example": {
                                "field": "value"
                              },
                              "type": "object"
                            },
                            "payload": {
                              "additionalProperties": true,
                              "description": "Event payload containing detailed information about the event",
                              "example": {
                                "field": "value"
                              },
                              "type": "object"
                            }
                          },
                          "required": [
                            "code"
                          ],
                          "type": "object"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the response was generated",
                          "example": 1690000000,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "event",
                        "timestamp"
                      ],
                      "title": "Reply Envelope",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "data": {
                          "additionalProperties": false,
                          "properties": {
                            "file": {
                              "additionalProperties": false,
                              "description": "File entity representing an uploaded document or media file",
                              "properties": {
                                "archived": {
                                  "description": "Whether the file has been archived (soft deleted)",
                                  "example": false,
                                  "type": "boolean"
                                },
                                "archivedAt": {
                                  "description": "UNIX timestamp when the file was archived",
                                  "example": 1726282800,
                                  "format": "int64",
                                  "minimum": 0,
                                  "nullable": true,
                                  "type": "number"
                                },
                                "archivedBy": {
                                  "description": "ID of user who archived the file, or null if not archived",
                                  "example": "123e4567-e89b-12d3-a456-426614174000",
                                  "format": "uuid",
                                  "nullable": true,
                                  "type": "string"
                                },
                                "assistantId": {
                                  "description": "UUID of the assistant this file is associated with",
                                  "example": "550e8400-e29b-41d4-a716-446655440000",
                                  "format": "uuid",
                                  "type": "string"
                                },
                                "createdAt": {
                                  "description": "UNIX timestamp when the file was uploaded",
                                  "example": 1726282800,
                                  "format": "int64",
                                  "minimum": 0,
                                  "type": "number"
                                },
                                "createdBy": {
                                  "description": "UUID of the user who uploaded the file",
                                  "example": "123e4567-e89b-12d3-a456-426614174000",
                                  "format": "uuid",
                                  "type": "string"
                                },
                                "folder": {
                                  "description": "ID of folder containing the file, or null if in root",
                                  "example": "770g9600-g40d-63f6-c938-668877662222",
                                  "format": "uuid",
                                  "nullable": true,
                                  "type": "string"
                                },
                                "id": {
                                  "description": "Unique identifier for the file",
                                  "example": "123e4567-e89b-12d3-a456-426614174000",
                                  "format": "uuid",
                                  "type": "string"
                                },
                                "name": {
                                  "description": "Original filename of the uploaded file",
                                  "example": "document.pdf",
                                  "type": "string"
                                },
                                "object": {
                                  "description": "Object type identifier for this entity",
                                  "example": "file",
                                  "type": "string",
                                  "enum": [
                                    "file"
                                  ]
                                },
                                "organization": {
                                  "description": "UUID of the organization that owns the file",
                                  "example": "123e4567-e89b-12d3-a456-426614174000",
                                  "format": "uuid",
                                  "type": "string"
                                },
                                "pages": {
                                  "description": "Number of pages in the file, or null if not applicable",
                                  "example": 25,
                                  "minimum": 0,
                                  "nullable": true,
                                  "type": "integer"
                                },
                                "size": {
                                  "description": "File size in bytes",
                                  "example": 2048576,
                                  "minimum": 0,
                                  "type": "integer"
                                },
                                "status": {
                                  "description": "Current processing status of the file",
                                  "enum": [
                                    "complete",
                                    "error",
                                    "indexing"
                                  ],
                                  "example": "complete",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "id",
                                "name",
                                "object",
                                "size",
                                "status",
                                "archived",
                                "assistant",
                                "organization",
                                "createdAt",
                                "createdBy"
                              ],
                              "title": "File",
                              "type": "object"
                            }
                          },
                          "required": [
                            "file"
                          ],
                          "type": "object"
                        },
                        "event": {
                          "properties": {
                            "code": {
                              "enum": [
                                "file.repaired"
                              ]
                            }
                          },
                          "type": "object"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Validation Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "description": "Validation error response with detailed field-level errors",
                      "properties": {
                        "code": {
                          "description": "Fixed error code for validation errors",
                          "enum": [
                            "validation.error"
                          ]
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Validation-specific metadata containing detailed error information",
                          "properties": {
                            "validation_errors": {
                              "description": "Array of field-level validation errors",
                              "items": {
                                "additionalProperties": false,
                                "description": "Individual field validation error",
                                "properties": {
                                  "code": {
                                    "description": "Specific validation error code for this field",
                                    "example": "required",
                                    "type": "string"
                                  },
                                  "params": {
                                    "additionalProperties": true,
                                    "description": "Validation parameters providing context for the error",
                                    "example": {
                                      "expectedType": "string",
                                      "receivedType": "number"
                                    },
                                    "type": "object"
                                  },
                                  "path": {
                                    "description": "JSON path to the field that failed validation",
                                    "example": "/username",
                                    "pattern": "^/",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "code",
                                  "path",
                                  "params"
                                ],
                                "type": "object"
                              },
                              "minItems": 1,
                              "type": "array"
                            }
                          },
                          "required": [
                            "validation_errors"
                          ],
                          "type": "object"
                        },
                        "status": {
                          "description": "HTTP status code for validation errors",
                          "enum": [400]
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "description": "Validation error response extending the base error response",
                  "title": "Validation Error"
                }
              }
            }
          },
          "401": {
            "description": "File Authentication Failed",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "code": {
                          "enum": [
                            "unauthorized"
                          ]
                        },
                        "status": {
                          "enum": [403]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "File Not Found",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "code": {
                          "enum": [
                            "file.not.found"
                          ]
                        },
                        "status": {
                          "enum": [404]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "File Repair Failed",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "code": {
                          "enum": [
                            "file.repair.failed"
                          ]
                        },
                        "status": {
                          "enum": [500]
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/files/download/{id}": {
      "get": {
        "tags": [
          "files"
        ],
        "parameters": [
          {
            "schema": {
              "format": "uuid",
              "type": "string"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/v1/files/{id}/archive": {
      "post": {
        "tags": [
          "files"
        ],
        "parameters": [
          {
            "schema": {
              "format": "uuid",
              "type": "string"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "File Archived Successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard response envelope containing event information and data payload",
                      "properties": {
                        "data": {
                          "description": "Response data payload containing the actual response content",
                          "type": "object"
                        },
                        "event": {
                          "additionalProperties": false,
                          "description": "Event information describing the operation performed",
                          "properties": {
                            "code": {
                              "description": "Event code identifying the specific operation that occurred",
                              "pattern": "^[a-z]+\\.[a-z_]+$",
                              "type": "string"
                            },
                            "correlationId": {
                              "description": "Unique correlation ID linking this event to the original request for tracing",
                              "example": "123e4567-e89b-12d3-a456-426614174000",
                              "format": "uuid",
                              "type": "string"
                            },
                            "metadata": {
                              "additionalProperties": true,
                              "description": "Event-specific metadata providing additional context",
                              "example": {
                                "field": "value"
                              },
                              "type": "object"
                            },
                            "payload": {
                              "additionalProperties": true,
                              "description": "Event payload containing detailed information about the event",
                              "example": {
                                "field": "value"
                              },
                              "type": "object"
                            }
                          },
                          "required": [
                            "code"
                          ],
                          "type": "object"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the response was generated",
                          "example": 1690000000,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "event",
                        "timestamp"
                      ],
                      "title": "Reply Envelope",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "data": {
                          "additionalProperties": false,
                          "properties": {
                            "file": {
                              "additionalProperties": false,
                              "description": "File entity representing an uploaded document or media file",
                              "properties": {
                                "archived": {
                                  "description": "Whether the file has been archived (soft deleted)",
                                  "example": false,
                                  "type": "boolean"
                                },
                                "archivedAt": {
                                  "description": "UNIX timestamp when the file was archived",
                                  "example": 1726282800,
                                  "format": "int64",
                                  "minimum": 0,
                                  "nullable": true,
                                  "type": "number"
                                },
                                "archivedBy": {
                                  "description": "ID of user who archived the file, or null if not archived",
                                  "example": "123e4567-e89b-12d3-a456-426614174000",
                                  "format": "uuid",
                                  "nullable": true,
                                  "type": "string"
                                },
                                "assistantId": {
                                  "description": "UUID of the assistant this file is associated with",
                                  "example": "550e8400-e29b-41d4-a716-446655440000",
                                  "format": "uuid",
                                  "type": "string"
                                },
                                "createdAt": {
                                  "description": "UNIX timestamp when the file was uploaded",
                                  "example": 1726282800,
                                  "format": "int64",
                                  "minimum": 0,
                                  "type": "number"
                                },
                                "createdBy": {
                                  "description": "UUID of the user who uploaded the file",
                                  "example": "123e4567-e89b-12d3-a456-426614174000",
                                  "format": "uuid",
                                  "type": "string"
                                },
                                "folder": {
                                  "description": "ID of folder containing the file, or null if in root",
                                  "example": "770g9600-g40d-63f6-c938-668877662222",
                                  "format": "uuid",
                                  "nullable": true,
                                  "type": "string"
                                },
                                "id": {
                                  "description": "Unique identifier for the file",
                                  "example": "123e4567-e89b-12d3-a456-426614174000",
                                  "format": "uuid",
                                  "type": "string"
                                },
                                "name": {
                                  "description": "Original filename of the uploaded file",
                                  "example": "document.pdf",
                                  "type": "string"
                                },
                                "object": {
                                  "description": "Object type identifier for this entity",
                                  "example": "file",
                                  "type": "string",
                                  "enum": [
                                    "file"
                                  ]
                                },
                                "organization": {
                                  "description": "UUID of the organization that owns the file",
                                  "example": "123e4567-e89b-12d3-a456-426614174000",
                                  "format": "uuid",
                                  "type": "string"
                                },
                                "pages": {
                                  "description": "Number of pages in the file, or null if not applicable",
                                  "example": 25,
                                  "minimum": 0,
                                  "nullable": true,
                                  "type": "integer"
                                },
                                "size": {
                                  "description": "File size in bytes",
                                  "example": 2048576,
                                  "minimum": 0,
                                  "type": "integer"
                                },
                                "status": {
                                  "description": "Current processing status of the file",
                                  "enum": [
                                    "complete",
                                    "error",
                                    "indexing"
                                  ],
                                  "example": "complete",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "id",
                                "name",
                                "object",
                                "size",
                                "status",
                                "archived",
                                "assistant",
                                "organization",
                                "createdAt",
                                "createdBy"
                              ],
                              "title": "File",
                              "type": "object"
                            }
                          },
                          "required": [
                            "file"
                          ],
                          "type": "object"
                        },
                        "event": {
                          "properties": {
                            "code": {
                              "enum": [
                                "file.archived"
                              ]
                            }
                          },
                          "type": "object"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Validation Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "description": "Validation error response with detailed field-level errors",
                      "properties": {
                        "code": {
                          "description": "Fixed error code for validation errors",
                          "enum": [
                            "validation.error"
                          ]
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Validation-specific metadata containing detailed error information",
                          "properties": {
                            "validation_errors": {
                              "description": "Array of field-level validation errors",
                              "items": {
                                "additionalProperties": false,
                                "description": "Individual field validation error",
                                "properties": {
                                  "code": {
                                    "description": "Specific validation error code for this field",
                                    "example": "required",
                                    "type": "string"
                                  },
                                  "params": {
                                    "additionalProperties": true,
                                    "description": "Validation parameters providing context for the error",
                                    "example": {
                                      "expectedType": "string",
                                      "receivedType": "number"
                                    },
                                    "type": "object"
                                  },
                                  "path": {
                                    "description": "JSON path to the field that failed validation",
                                    "example": "/username",
                                    "pattern": "^/",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "code",
                                  "path",
                                  "params"
                                ],
                                "type": "object"
                              },
                              "minItems": 1,
                              "type": "array"
                            }
                          },
                          "required": [
                            "validation_errors"
                          ],
                          "type": "object"
                        },
                        "status": {
                          "description": "HTTP status code for validation errors",
                          "enum": [400]
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "description": "Validation error response extending the base error response",
                  "title": "Validation Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "code": {
                          "enum": [
                            "unauthorized"
                          ]
                        },
                        "status": {
                          "enum": [403]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "File not found",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "code": {
                          "enum": [
                            "file.not.found"
                          ]
                        },
                        "status": {
                          "enum": [404]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "File archive operation failed",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "code": {
                          "enum": [
                            "file.archive.failed"
                          ]
                        },
                        "status": {
                          "enum": [500]
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/files/{id}/restore": {
      "post": {
        "tags": [
          "files"
        ],
        "parameters": [
          {
            "schema": {
              "format": "uuid",
              "type": "string"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "File Restored Successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard response envelope containing event information and data payload",
                      "properties": {
                        "data": {
                          "description": "Response data payload containing the actual response content",
                          "type": "object"
                        },
                        "event": {
                          "additionalProperties": false,
                          "description": "Event information describing the operation performed",
                          "properties": {
                            "code": {
                              "description": "Event code identifying the specific operation that occurred",
                              "pattern": "^[a-z]+\\.[a-z_]+$",
                              "type": "string"
                            },
                            "correlationId": {
                              "description": "Unique correlation ID linking this event to the original request for tracing",
                              "example": "123e4567-e89b-12d3-a456-426614174000",
                              "format": "uuid",
                              "type": "string"
                            },
                            "metadata": {
                              "additionalProperties": true,
                              "description": "Event-specific metadata providing additional context",
                              "example": {
                                "field": "value"
                              },
                              "type": "object"
                            },
                            "payload": {
                              "additionalProperties": true,
                              "description": "Event payload containing detailed information about the event",
                              "example": {
                                "field": "value"
                              },
                              "type": "object"
                            }
                          },
                          "required": [
                            "code"
                          ],
                          "type": "object"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the response was generated",
                          "example": 1690000000,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "event",
                        "timestamp"
                      ],
                      "title": "Reply Envelope",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "data": {
                          "additionalProperties": false,
                          "properties": {
                            "file": {
                              "additionalProperties": false,
                              "description": "File entity representing an uploaded document or media file",
                              "properties": {
                                "archived": {
                                  "description": "Whether the file has been archived (soft deleted)",
                                  "example": false,
                                  "type": "boolean"
                                },
                                "archivedAt": {
                                  "description": "UNIX timestamp when the file was archived",
                                  "example": 1726282800,
                                  "format": "int64",
                                  "minimum": 0,
                                  "nullable": true,
                                  "type": "number"
                                },
                                "archivedBy": {
                                  "description": "ID of user who archived the file, or null if not archived",
                                  "example": "123e4567-e89b-12d3-a456-426614174000",
                                  "format": "uuid",
                                  "nullable": true,
                                  "type": "string"
                                },
                                "assistantId": {
                                  "description": "UUID of the assistant this file is associated with",
                                  "example": "550e8400-e29b-41d4-a716-446655440000",
                                  "format": "uuid",
                                  "type": "string"
                                },
                                "createdAt": {
                                  "description": "UNIX timestamp when the file was uploaded",
                                  "example": 1726282800,
                                  "format": "int64",
                                  "minimum": 0,
                                  "type": "number"
                                },
                                "createdBy": {
                                  "description": "UUID of the user who uploaded the file",
                                  "example": "123e4567-e89b-12d3-a456-426614174000",
                                  "format": "uuid",
                                  "type": "string"
                                },
                                "folder": {
                                  "description": "ID of folder containing the file, or null if in root",
                                  "example": "770g9600-g40d-63f6-c938-668877662222",
                                  "format": "uuid",
                                  "nullable": true,
                                  "type": "string"
                                },
                                "id": {
                                  "description": "Unique identifier for the file",
                                  "example": "123e4567-e89b-12d3-a456-426614174000",
                                  "format": "uuid",
                                  "type": "string"
                                },
                                "name": {
                                  "description": "Original filename of the uploaded file",
                                  "example": "document.pdf",
                                  "type": "string"
                                },
                                "object": {
                                  "description": "Object type identifier for this entity",
                                  "example": "file",
                                  "type": "string",
                                  "enum": [
                                    "file"
                                  ]
                                },
                                "organization": {
                                  "description": "UUID of the organization that owns the file",
                                  "example": "123e4567-e89b-12d3-a456-426614174000",
                                  "format": "uuid",
                                  "type": "string"
                                },
                                "pages": {
                                  "description": "Number of pages in the file, or null if not applicable",
                                  "example": 25,
                                  "minimum": 0,
                                  "nullable": true,
                                  "type": "integer"
                                },
                                "size": {
                                  "description": "File size in bytes",
                                  "example": 2048576,
                                  "minimum": 0,
                                  "type": "integer"
                                },
                                "status": {
                                  "description": "Current processing status of the file",
                                  "enum": [
                                    "complete",
                                    "error",
                                    "indexing"
                                  ],
                                  "example": "complete",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "id",
                                "name",
                                "object",
                                "size",
                                "status",
                                "archived",
                                "assistant",
                                "organization",
                                "createdAt",
                                "createdBy"
                              ],
                              "title": "File",
                              "type": "object"
                            }
                          },
                          "required": [
                            "file"
                          ],
                          "type": "object"
                        },
                        "event": {
                          "properties": {
                            "code": {
                              "enum": [
                                "file.restored"
                              ]
                            }
                          },
                          "type": "object"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Validation Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "description": "Validation error response with detailed field-level errors",
                      "properties": {
                        "code": {
                          "description": "Fixed error code for validation errors",
                          "enum": [
                            "validation.error"
                          ]
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Validation-specific metadata containing detailed error information",
                          "properties": {
                            "validation_errors": {
                              "description": "Array of field-level validation errors",
                              "items": {
                                "additionalProperties": false,
                                "description": "Individual field validation error",
                                "properties": {
                                  "code": {
                                    "description": "Specific validation error code for this field",
                                    "example": "required",
                                    "type": "string"
                                  },
                                  "params": {
                                    "additionalProperties": true,
                                    "description": "Validation parameters providing context for the error",
                                    "example": {
                                      "expectedType": "string",
                                      "receivedType": "number"
                                    },
                                    "type": "object"
                                  },
                                  "path": {
                                    "description": "JSON path to the field that failed validation",
                                    "example": "/username",
                                    "pattern": "^/",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "code",
                                  "path",
                                  "params"
                                ],
                                "type": "object"
                              },
                              "minItems": 1,
                              "type": "array"
                            }
                          },
                          "required": [
                            "validation_errors"
                          ],
                          "type": "object"
                        },
                        "status": {
                          "description": "HTTP status code for validation errors",
                          "enum": [400]
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "description": "Validation error response extending the base error response",
                  "title": "Validation Error"
                }
              }
            }
          },
          "401": {
            "description": "File Authentication Failed",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "code": {
                          "enum": [
                            "unauthorized"
                          ]
                        },
                        "status": {
                          "enum": [403]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "File Not Found",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "code": {
                          "enum": [
                            "file.not.found"
                          ]
                        },
                        "status": {
                          "enum": [404]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "File Restore Failed",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "code": {
                          "enum": [
                            "file.restore.failed"
                          ]
                        },
                        "status": {
                          "enum": [500]
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/keys/new": {
      "post": {
        "tags": [
          "apiKeys"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "additionalProperties": false,
                "description": "Request body for creating a new API key",
                "properties": {
                  "assistants": {
                    "description": "Assistant-level access to grant the key",
                    "items": {
                      "additionalProperties": false,
                      "properties": {
                        "id": {
                          "format": "uuid",
                          "type": "string"
                        },
                        "scopes": {
                          "items": {
                            "enum": [
                              "files",
                              "messages"
                            ],
                            "type": "string"
                          },
                          "type": "array"
                        }
                      },
                      "required": [
                        "id",
                        "scopes"
                      ],
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "name": {
                    "description": "Display name for the API key",
                    "example": "Production API Key",
                    "maxLength": 100,
                    "minLength": 1,
                    "type": "string"
                  },
                  "scopes": {
                    "description": "Array of permission scopes to grant to this API key",
                    "example": [
                      "assistants",
                      "logs"
                    ],
                    "items": {
                      "description": "Permission scope",
                      "enum": [
                        "assistants",
                        "logs"
                      ],
                      "type": "string"
                    },
                    "type": "array"
                  }
                },
                "required": [
                  "name"
                ],
                "title": "Create API Key Body",
                "type": "object"
              }
            }
          },
          "required": true,
          "description": "Request body for creating a new API key"
        },
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard response envelope containing event information and data payload",
                      "properties": {
                        "data": {
                          "description": "Response data payload containing the actual response content",
                          "type": "object"
                        },
                        "event": {
                          "additionalProperties": false,
                          "description": "Event information describing the operation performed",
                          "properties": {
                            "code": {
                              "description": "Event code identifying the specific operation that occurred",
                              "pattern": "^[a-z]+\\.[a-z_]+$",
                              "type": "string"
                            },
                            "correlationId": {
                              "description": "Unique correlation ID linking this event to the original request for tracing",
                              "example": "123e4567-e89b-12d3-a456-426614174000",
                              "format": "uuid",
                              "type": "string"
                            },
                            "metadata": {
                              "additionalProperties": true,
                              "description": "Event-specific metadata providing additional context",
                              "example": {
                                "field": "value"
                              },
                              "type": "object"
                            },
                            "payload": {
                              "additionalProperties": true,
                              "description": "Event payload containing detailed information about the event",
                              "example": {
                                "field": "value"
                              },
                              "type": "object"
                            }
                          },
                          "required": [
                            "code"
                          ],
                          "type": "object"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the response was generated",
                          "example": 1690000000,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "event",
                        "timestamp"
                      ],
                      "title": "Reply Envelope",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "data": {
                          "additionalProperties": false,
                          "properties": {
                            "apiKey": {
                              "additionalProperties": false,
                              "description": "API Key entity",
                              "properties": {
                                "assistants": {
                                  "description": "Assistant-level access granted to the API key",
                                  "items": {
                                    "additionalProperties": false,
                                    "properties": {
                                      "id": {
                                        "format": "uuid",
                                        "type": "string"
                                      },
                                      "scopes": {
                                        "items": {
                                          "enum": [
                                            "files",
                                            "messages"
                                          ],
                                          "type": "string"
                                        },
                                        "type": "array"
                                      }
                                    },
                                    "required": [
                                      "id",
                                      "scopes"
                                    ],
                                    "type": "object"
                                  },
                                  "type": "array"
                                },
                                "createdAt": {
                                  "description": "UNIX timestamp when the API key was created",
                                  "example": 1726282800000,
                                  "format": "int64",
                                  "minimum": 0,
                                  "type": "number"
                                },
                                "createdBy": {
                                  "description": "UUID of the user who created this API key",
                                  "format": "uuid",
                                  "type": "string"
                                },
                                "id": {
                                  "description": "Unique identifier for the API key",
                                  "example": "123e4567-e89b-12d3-a456-426614174000",
                                  "format": "uuid",
                                  "type": "string"
                                },
                                "name": {
                                  "description": "Display name of the API key",
                                  "example": "Production API Key",
                                  "type": "string"
                                },
                                "object": {
                                  "description": "Object type identifier for this entity",
                                  "example": "apiKey",
                                  "type": "string",
                                  "enum": [
                                    "apiKey"
                                  ]
                                },
                                "organization": {
                                  "description": "UUID of the organization this API key is associated with",
                                  "format": "uuid",
                                  "type": "string"
                                },
                                "scopes": {
                                  "description": "Array of global scopes granted to this API key",
                                  "items": {
                                    "enum": [
                                      "assistants",
                                      "logs"
                                    ],
                                    "type": "string"
                                  },
                                  "type": "array"
                                }
                              },
                              "required": [
                                "id",
                                "name",
                                "object",
                                "organization",
                                "createdAt",
                                "createdBy"
                              ],
                              "title": "API Key",
                              "type": "object"
                            }
                          },
                          "required": [
                            "apiKey"
                          ],
                          "type": "object"
                        },
                        "event": {
                          "properties": {
                            "code": {
                              "enum": [
                                "api_key.created"
                              ]
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Default Response",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "description": "Validation error response with detailed field-level errors",
                      "properties": {
                        "code": {
                          "description": "Fixed error code for validation errors",
                          "enum": [
                            "validation.error"
                          ]
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Validation-specific metadata containing detailed error information",
                          "properties": {
                            "validation_errors": {
                              "description": "Array of field-level validation errors",
                              "items": {
                                "additionalProperties": false,
                                "description": "Individual field validation error",
                                "properties": {
                                  "code": {
                                    "description": "Specific validation error code for this field",
                                    "example": "required",
                                    "type": "string"
                                  },
                                  "params": {
                                    "additionalProperties": true,
                                    "description": "Validation parameters providing context for the error",
                                    "example": {
                                      "expectedType": "string",
                                      "receivedType": "number"
                                    },
                                    "type": "object"
                                  },
                                  "path": {
                                    "description": "JSON path to the field that failed validation",
                                    "example": "/username",
                                    "pattern": "^/",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "code",
                                  "path",
                                  "params"
                                ],
                                "type": "object"
                              },
                              "minItems": 1,
                              "type": "array"
                            }
                          },
                          "required": [
                            "validation_errors"
                          ],
                          "type": "object"
                        },
                        "status": {
                          "description": "HTTP status code for validation errors",
                          "enum": [400]
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "description": "Validation error response extending the base error response",
                  "title": "Validation Error"
                }
              }
            }
          },
          "401": {
            "description": "Default Response",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "code": {
                          "enum": [
                            "api_key.authentication.failed"
                          ]
                        },
                        "status": {
                          "enum": [401]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Default Response",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "code": {
                          "enum": [
                            "api_key.not.found"
                          ]
                        },
                        "status": {
                          "enum": [404]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Default Response",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "code": {
                          "enum": [
                            "api_key.creation.failed"
                          ]
                        },
                        "status": {
                          "enum": [500]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/keys/{id}": {
      "get": {
        "tags": [
          "apiKeys"
        ],
        "parameters": [
          {
            "schema": {
              "example": "123e4567-e89b-12d3-a456-426614174000",
              "format": "uuid",
              "type": "string"
            },
            "in": "path",
            "name": "id",
            "required": true,
            "description": "Unique identifier of the API key"
          }
        ],
        "responses": {
          "200": {
            "description": "API Key Retrieved Successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard response envelope containing event information and data payload",
                      "properties": {
                        "data": {
                          "description": "Response data payload containing the actual response content",
                          "type": "object"
                        },
                        "event": {
                          "additionalProperties": false,
                          "description": "Event information describing the operation performed",
                          "properties": {
                            "code": {
                              "description": "Event code identifying the specific operation that occurred",
                              "pattern": "^[a-z]+\\.[a-z_]+$",
                              "type": "string"
                            },
                            "correlationId": {
                              "description": "Unique correlation ID linking this event to the original request for tracing",
                              "example": "123e4567-e89b-12d3-a456-426614174000",
                              "format": "uuid",
                              "type": "string"
                            },
                            "metadata": {
                              "additionalProperties": true,
                              "description": "Event-specific metadata providing additional context",
                              "example": {
                                "field": "value"
                              },
                              "type": "object"
                            },
                            "payload": {
                              "additionalProperties": true,
                              "description": "Event payload containing detailed information about the event",
                              "example": {
                                "field": "value"
                              },
                              "type": "object"
                            }
                          },
                          "required": [
                            "code"
                          ],
                          "type": "object"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the response was generated",
                          "example": 1690000000,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "event",
                        "timestamp"
                      ],
                      "title": "Reply Envelope",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "data": {
                          "additionalProperties": false,
                          "properties": {
                            "apiKey": {
                              "additionalProperties": false,
                              "description": "API Key entity",
                              "properties": {
                                "assistants": {
                                  "description": "Assistant-level access granted to the API key",
                                  "items": {
                                    "additionalProperties": false,
                                    "properties": {
                                      "id": {
                                        "format": "uuid",
                                        "type": "string"
                                      },
                                      "scopes": {
                                        "items": {
                                          "enum": [
                                            "files",
                                            "messages"
                                          ],
                                          "type": "string"
                                        },
                                        "type": "array"
                                      }
                                    },
                                    "required": [
                                      "id",
                                      "scopes"
                                    ],
                                    "type": "object"
                                  },
                                  "type": "array"
                                },
                                "createdAt": {
                                  "description": "UNIX timestamp when the API key was created",
                                  "example": 1726282800000,
                                  "format": "int64",
                                  "minimum": 0,
                                  "type": "number"
                                },
                                "createdBy": {
                                  "description": "UUID of the user who created this API key",
                                  "format": "uuid",
                                  "type": "string"
                                },
                                "id": {
                                  "description": "Unique identifier for the API key",
                                  "example": "123e4567-e89b-12d3-a456-426614174000",
                                  "format": "uuid",
                                  "type": "string"
                                },
                                "name": {
                                  "description": "Display name of the API key",
                                  "example": "Production API Key",
                                  "type": "string"
                                },
                                "object": {
                                  "description": "Object type identifier for this entity",
                                  "example": "apiKey",
                                  "type": "string",
                                  "enum": [
                                    "apiKey"
                                  ]
                                },
                                "organization": {
                                  "description": "UUID of the organization this API key is associated with",
                                  "format": "uuid",
                                  "type": "string"
                                },
                                "scopes": {
                                  "description": "Array of global scopes granted to this API key",
                                  "items": {
                                    "enum": [
                                      "assistants",
                                      "logs"
                                    ],
                                    "type": "string"
                                  },
                                  "type": "array"
                                }
                              },
                              "required": [
                                "id",
                                "name",
                                "object",
                                "organization",
                                "createdAt",
                                "createdBy"
                              ],
                              "title": "API Key",
                              "type": "object"
                            }
                          },
                          "required": [
                            "apiKey"
                          ],
                          "type": "object"
                        },
                        "event": {
                          "properties": {
                            "code": {
                              "enum": [
                                "api_key.retrieved"
                              ]
                            }
                          },
                          "type": "object"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Validation Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "description": "Validation error response with detailed field-level errors",
                      "properties": {
                        "code": {
                          "description": "Fixed error code for validation errors",
                          "enum": [
                            "validation.error"
                          ]
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Validation-specific metadata containing detailed error information",
                          "properties": {
                            "validation_errors": {
                              "description": "Array of field-level validation errors",
                              "items": {
                                "additionalProperties": false,
                                "description": "Individual field validation error",
                                "properties": {
                                  "code": {
                                    "description": "Specific validation error code for this field",
                                    "example": "required",
                                    "type": "string"
                                  },
                                  "params": {
                                    "additionalProperties": true,
                                    "description": "Validation parameters providing context for the error",
                                    "example": {
                                      "expectedType": "string",
                                      "receivedType": "number"
                                    },
                                    "type": "object"
                                  },
                                  "path": {
                                    "description": "JSON path to the field that failed validation",
                                    "example": "/username",
                                    "pattern": "^/",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "code",
                                  "path",
                                  "params"
                                ],
                                "type": "object"
                              },
                              "minItems": 1,
                              "type": "array"
                            }
                          },
                          "required": [
                            "validation_errors"
                          ],
                          "type": "object"
                        },
                        "status": {
                          "description": "HTTP status code for validation errors",
                          "enum": [400]
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "description": "Validation error response extending the base error response",
                  "title": "Validation Error"
                }
              }
            }
          },
          "401": {
            "description": "API Key Authentication Failed",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "code": {
                          "enum": [
                            "api_key.authentication.failed"
                          ]
                        },
                        "status": {
                          "enum": [401]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "API Key Not Found",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "code": {
                          "enum": [
                            "api_key.not.found"
                          ]
                        },
                        "status": {
                          "enum": [404]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "API Key Operation Failed",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "code": {
                          "enum": [
                            "api_key.retrieve.failed"
                          ]
                        },
                        "status": {
                          "enum": [500]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "apiKeys"
        ],
        "parameters": [
          {
            "schema": {
              "example": "123e4567-e89b-12d3-a456-426614174000",
              "format": "uuid",
              "type": "string"
            },
            "in": "path",
            "name": "id",
            "required": true,
            "description": "Unique identifier of the API key"
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard response envelope containing event information and data payload",
                      "properties": {
                        "data": {
                          "description": "Response data payload containing the actual response content",
                          "type": "object"
                        },
                        "event": {
                          "additionalProperties": false,
                          "description": "Event information describing the operation performed",
                          "properties": {
                            "code": {
                              "description": "Event code identifying the specific operation that occurred",
                              "pattern": "^[a-z]+\\.[a-z_]+$",
                              "type": "string"
                            },
                            "correlationId": {
                              "description": "Unique correlation ID linking this event to the original request for tracing",
                              "example": "123e4567-e89b-12d3-a456-426614174000",
                              "format": "uuid",
                              "type": "string"
                            },
                            "metadata": {
                              "additionalProperties": true,
                              "description": "Event-specific metadata providing additional context",
                              "example": {
                                "field": "value"
                              },
                              "type": "object"
                            },
                            "payload": {
                              "additionalProperties": true,
                              "description": "Event payload containing detailed information about the event",
                              "example": {
                                "field": "value"
                              },
                              "type": "object"
                            }
                          },
                          "required": [
                            "code"
                          ],
                          "type": "object"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the response was generated",
                          "example": 1690000000,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "event",
                        "timestamp"
                      ],
                      "title": "Reply Envelope",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "data": {
                          "additionalProperties": false,
                          "description": "Simple success response for operations that do not return data",
                          "properties": {
                            "success": {
                              "description": "Boolean flag indicating the operation completed successfully",
                              "example": true,
                              "type": "boolean",
                              "enum": [true]
                            }
                          },
                          "required": [
                            "success"
                          ],
                          "title": "Success Response",
                          "type": "object"
                        },
                        "event": {
                          "properties": {
                            "code": {
                              "enum": [
                                "api_key.deleted"
                              ]
                            }
                          },
                          "type": "object"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Default Response",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "description": "Validation error response with detailed field-level errors",
                      "properties": {
                        "code": {
                          "description": "Fixed error code for validation errors",
                          "enum": [
                            "validation.error"
                          ]
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Validation-specific metadata containing detailed error information",
                          "properties": {
                            "validation_errors": {
                              "description": "Array of field-level validation errors",
                              "items": {
                                "additionalProperties": false,
                                "description": "Individual field validation error",
                                "properties": {
                                  "code": {
                                    "description": "Specific validation error code for this field",
                                    "example": "required",
                                    "type": "string"
                                  },
                                  "params": {
                                    "additionalProperties": true,
                                    "description": "Validation parameters providing context for the error",
                                    "example": {
                                      "expectedType": "string",
                                      "receivedType": "number"
                                    },
                                    "type": "object"
                                  },
                                  "path": {
                                    "description": "JSON path to the field that failed validation",
                                    "example": "/username",
                                    "pattern": "^/",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "code",
                                  "path",
                                  "params"
                                ],
                                "type": "object"
                              },
                              "minItems": 1,
                              "type": "array"
                            }
                          },
                          "required": [
                            "validation_errors"
                          ],
                          "type": "object"
                        },
                        "status": {
                          "description": "HTTP status code for validation errors",
                          "enum": [400]
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "description": "Validation error response extending the base error response",
                  "title": "Validation Error"
                }
              }
            }
          },
          "401": {
            "description": "Default Response",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "code": {
                          "enum": [
                            "api_key.authentication.failed"
                          ]
                        },
                        "status": {
                          "enum": [401]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Default Response",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "code": {
                          "enum": [
                            "api_key.not.found"
                          ]
                        },
                        "status": {
                          "enum": [404]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Default Response",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "code": {
                          "enum": [
                            "api_key.delete.failed"
                          ]
                        },
                        "status": {
                          "enum": [500]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/keys/list": {
      "post": {
        "tags": [
          "apiKeys"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "additionalProperties": false,
                "description": "Request body for listing API keys with filtering and pagination",
                "properties": {
                  "date": {
                    "additionalProperties": false,
                    "description": "Date range filter for API key creation",
                    "properties": {
                      "end": {
                        "anyOf": [
                          {
                            "type": "string"
                          },
                          {
                            "type": "number"
                          }
                        ],
                        "description": "End date for filtering (ISO string, timestamp, or Date)"
                      },
                      "start": {
                        "anyOf": [
                          {
                            "type": "string"
                          },
                          {
                            "type": "number"
                          }
                        ],
                        "description": "Start date for filtering (ISO string, timestamp, or Date)"
                      }
                    },
                    "type": "object"
                  },
                  "limit": {
                    "description": "Maximum number of API keys to return",
                    "example": 10,
                    "minimum": 1,
                    "type": "integer"
                  },
                  "order": {
                    "description": "Sort order for the results",
                    "enum": [
                      "asc",
                      "desc"
                    ],
                    "example": "desc",
                    "type": "string"
                  },
                  "page": {
                    "description": "Page number for pagination (1-based)",
                    "example": 1,
                    "minimum": 1,
                    "type": "integer"
                  }
                },
                "required": [],
                "title": "List API Keys Body",
                "type": "object"
              }
            }
          },
          "description": "Request body for listing API keys with filtering and pagination"
        },
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard response envelope containing event information and data payload",
                      "properties": {
                        "data": {
                          "description": "Response data payload containing the actual response content",
                          "type": "object"
                        },
                        "event": {
                          "additionalProperties": false,
                          "description": "Event information describing the operation performed",
                          "properties": {
                            "code": {
                              "description": "Event code identifying the specific operation that occurred",
                              "pattern": "^[a-z]+\\.[a-z_]+$",
                              "type": "string"
                            },
                            "correlationId": {
                              "description": "Unique correlation ID linking this event to the original request for tracing",
                              "example": "123e4567-e89b-12d3-a456-426614174000",
                              "format": "uuid",
                              "type": "string"
                            },
                            "metadata": {
                              "additionalProperties": true,
                              "description": "Event-specific metadata providing additional context",
                              "example": {
                                "field": "value"
                              },
                              "type": "object"
                            },
                            "payload": {
                              "additionalProperties": true,
                              "description": "Event payload containing detailed information about the event",
                              "example": {
                                "field": "value"
                              },
                              "type": "object"
                            }
                          },
                          "required": [
                            "code"
                          ],
                          "type": "object"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the response was generated",
                          "example": 1690000000,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "event",
                        "timestamp"
                      ],
                      "title": "Reply Envelope",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "data": {
                          "additionalProperties": false,
                          "properties": {
                            "apiKeys": {
                              "items": {
                                "additionalProperties": false,
                                "description": "API Key entity",
                                "properties": {
                                  "assistants": {
                                    "description": "Assistant-level access granted to the API key",
                                    "items": {
                                      "additionalProperties": false,
                                      "properties": {
                                        "id": {
                                          "format": "uuid",
                                          "type": "string"
                                        },
                                        "scopes": {
                                          "items": {
                                            "enum": [
                                              "files",
                                              "messages"
                                            ],
                                            "type": "string"
                                          },
                                          "type": "array"
                                        }
                                      },
                                      "required": [
                                        "id",
                                        "scopes"
                                      ],
                                      "type": "object"
                                    },
                                    "type": "array"
                                  },
                                  "createdAt": {
                                    "description": "UNIX timestamp when the API key was created",
                                    "example": 1726282800000,
                                    "format": "int64",
                                    "minimum": 0,
                                    "type": "number"
                                  },
                                  "createdBy": {
                                    "description": "UUID of the user who created this API key",
                                    "format": "uuid",
                                    "type": "string"
                                  },
                                  "id": {
                                    "description": "Unique identifier for the API key",
                                    "example": "123e4567-e89b-12d3-a456-426614174000",
                                    "format": "uuid",
                                    "type": "string"
                                  },
                                  "name": {
                                    "description": "Display name of the API key",
                                    "example": "Production API Key",
                                    "type": "string"
                                  },
                                  "object": {
                                    "description": "Object type identifier for this entity",
                                    "example": "apiKey",
                                    "type": "string",
                                    "enum": [
                                      "apiKey"
                                    ]
                                  },
                                  "organization": {
                                    "description": "UUID of the organization this API key is associated with",
                                    "format": "uuid",
                                    "type": "string"
                                  },
                                  "scopes": {
                                    "description": "Array of global scopes granted to this API key",
                                    "items": {
                                      "enum": [
                                        "assistants",
                                        "logs"
                                      ],
                                      "type": "string"
                                    },
                                    "type": "array"
                                  }
                                },
                                "required": [
                                  "id",
                                  "name",
                                  "object",
                                  "organization",
                                  "createdAt",
                                  "createdBy"
                                ],
                                "title": "API Key",
                                "type": "object"
                              },
                              "type": "array"
                            }
                          },
                          "required": [
                            "apiKeys"
                          ],
                          "type": "object"
                        },
                        "event": {
                          "properties": {
                            "code": {
                              "enum": [
                                "api_key.listed"
                              ]
                            }
                          },
                          "type": "object"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Default Response",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "description": "Validation error response with detailed field-level errors",
                      "properties": {
                        "code": {
                          "description": "Fixed error code for validation errors",
                          "enum": [
                            "validation.error"
                          ]
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Validation-specific metadata containing detailed error information",
                          "properties": {
                            "validation_errors": {
                              "description": "Array of field-level validation errors",
                              "items": {
                                "additionalProperties": false,
                                "description": "Individual field validation error",
                                "properties": {
                                  "code": {
                                    "description": "Specific validation error code for this field",
                                    "example": "required",
                                    "type": "string"
                                  },
                                  "params": {
                                    "additionalProperties": true,
                                    "description": "Validation parameters providing context for the error",
                                    "example": {
                                      "expectedType": "string",
                                      "receivedType": "number"
                                    },
                                    "type": "object"
                                  },
                                  "path": {
                                    "description": "JSON path to the field that failed validation",
                                    "example": "/username",
                                    "pattern": "^/",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "code",
                                  "path",
                                  "params"
                                ],
                                "type": "object"
                              },
                              "minItems": 1,
                              "type": "array"
                            }
                          },
                          "required": [
                            "validation_errors"
                          ],
                          "type": "object"
                        },
                        "status": {
                          "description": "HTTP status code for validation errors",
                          "enum": [400]
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "description": "Validation error response extending the base error response",
                  "title": "Validation Error"
                }
              }
            }
          },
          "401": {
            "description": "Default Response",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "code": {
                          "enum": [
                            "api_key.authentication.failed"
                          ]
                        },
                        "status": {
                          "enum": [401]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Default Response",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "code": {
                          "enum": [
                            "api_key.not.found"
                          ]
                        },
                        "status": {
                          "enum": [404]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Default Response",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "code": {
                          "enum": [
                            "api_key.list.failed"
                          ]
                        },
                        "status": {
                          "enum": [500]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/organizations/new": {
      "post": {
        "tags": [
          "organizations"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "additionalProperties": false,
                "description": "Request body for creating a new organization",
                "properties": {
                  "name": {
                    "description": "Name of the organization",
                    "example": "Acme Corporation",
                    "maxLength": 100,
                    "minLength": 1,
                    "type": "string"
                  }
                },
                "required": [
                  "name"
                ],
                "title": "Create Organization Body",
                "type": "object"
              }
            }
          },
          "required": true,
          "description": "Request body for creating a new organization"
        },
        "responses": {
          "200": {
            "description": "Organization Created Successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard response envelope containing event information and data payload",
                      "properties": {
                        "data": {
                          "description": "Response data payload containing the actual response content",
                          "type": "object"
                        },
                        "event": {
                          "additionalProperties": false,
                          "description": "Event information describing the operation performed",
                          "properties": {
                            "code": {
                              "description": "Event code identifying the specific operation that occurred",
                              "pattern": "^[a-z]+\\.[a-z_]+$",
                              "type": "string"
                            },
                            "correlationId": {
                              "description": "Unique correlation ID linking this event to the original request for tracing",
                              "example": "123e4567-e89b-12d3-a456-426614174000",
                              "format": "uuid",
                              "type": "string"
                            },
                            "metadata": {
                              "additionalProperties": true,
                              "description": "Event-specific metadata providing additional context",
                              "example": {
                                "field": "value"
                              },
                              "type": "object"
                            },
                            "payload": {
                              "additionalProperties": true,
                              "description": "Event payload containing detailed information about the event",
                              "example": {
                                "field": "value"
                              },
                              "type": "object"
                            }
                          },
                          "required": [
                            "code"
                          ],
                          "type": "object"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the response was generated",
                          "example": 1690000000,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "event",
                        "timestamp"
                      ],
                      "title": "Reply Envelope",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "data": {
                          "properties": {
                            "organization": {
                              "additionalProperties": false,
                              "description": "Organization entity representing a business or group account",
                              "properties": {
                                "archived": {
                                  "description": "Whether the organization has been archived (soft deleted)",
                                  "example": false,
                                  "type": "boolean"
                                },
                                "archivedAt": {
                                  "description": "Timestamp when organization was archived, or null if not archived",
                                  "example": 1726282800,
                                  "format": "int64",
                                  "minimum": 0,
                                  "nullable": true,
                                  "type": "number"
                                },
                                "archivedBy": {
                                  "description": "ID of user who archived the organization, or null if not archived",
                                  "example": "123e4567-e89b-12d3-a456-426614174000",
                                  "format": "uuid",
                                  "nullable": true,
                                  "type": "string"
                                },
                                "createdAt": {
                                  "description": "UNIX timestamp when the organization was created",
                                  "example": 1726282800,
                                  "format": "int64",
                                  "minimum": 0,
                                  "type": "number"
                                },
                                "createdBy": {
                                  "description": "UUID of the user who created this organization",
                                  "example": "123e4567-e89b-12d3-a456-426614174000",
                                  "format": "uuid",
                                  "type": "string"
                                },
                                "id": {
                                  "description": "Unique identifier for the organization",
                                  "example": "550e8400-e29b-41d4-a716-446655440000",
                                  "format": "uuid",
                                  "type": "string"
                                },
                                "limits": {
                                  "description": "Usage limits configured for this organization",
                                  "properties": {
                                    "apiKeys": {
                                      "description": "Maximum number of API keys allowed",
                                      "example": 10,
                                      "minimum": 0,
                                      "type": "number"
                                    },
                                    "assistants": {
                                      "description": "Maximum number of assistants allowed",
                                      "example": 5,
                                      "minimum": 0,
                                      "type": "number"
                                    },
                                    "files": {
                                      "description": "Maximum number of files allowed",
                                      "example": 1000,
                                      "minimum": 0,
                                      "type": "number"
                                    },
                                    "members": {
                                      "description": "Maximum number of members allowed",
                                      "example": 50,
                                      "minimum": 0,
                                      "type": "number"
                                    },
                                    "messages": {
                                      "description": "Maximum number of messages allowed per month",
                                      "example": 10000,
                                      "minimum": 0,
                                      "type": "number"
                                    },
                                    "tokens": {
                                      "description": "Maximum number of tokens allowed per month",
                                      "example": 1000000,
                                      "minimum": 0,
                                      "type": "number"
                                    }
                                  },
                                  "type": "object"
                                },
                                "name": {
                                  "description": "Display name of the organization",
                                  "example": "Acme Corporation",
                                  "type": "string"
                                },
                                "object": {
                                  "description": "Object type identifier for this entity",
                                  "example": "organization",
                                  "type": "string",
                                  "enum": [
                                    "organization"
                                  ]
                                },
                                "overage": {
                                  "default": false,
                                  "description": "Whether the organization can exceed usage limits",
                                  "example": false,
                                  "type": "boolean"
                                },
                                "sso": {
                                  "description": "Single Sign-On configuration for the organization",
                                  "properties": {
                                    "enabled": {
                                      "description": "Whether SSO is enabled for this organization",
                                      "example": false,
                                      "type": "boolean"
                                    }
                                  },
                                  "type": "object"
                                }
                              },
                              "required": [
                                "id",
                                "name",
                                "createdAt",
                                "createdBy",
                                "object",
                                "archived",
                                "sso",
                                "limits",
                                "overage"
                              ],
                              "title": "Organization",
                              "type": "object"
                            }
                          },
                          "type": "object"
                        },
                        "event": {
                          "properties": {
                            "code": {
                              "enum": [
                                "organization.created"
                              ]
                            }
                          },
                          "type": "object"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Validation Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "description": "Validation error response with detailed field-level errors",
                      "properties": {
                        "code": {
                          "description": "Fixed error code for validation errors",
                          "enum": [
                            "validation.error"
                          ]
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Validation-specific metadata containing detailed error information",
                          "properties": {
                            "validation_errors": {
                              "description": "Array of field-level validation errors",
                              "items": {
                                "additionalProperties": false,
                                "description": "Individual field validation error",
                                "properties": {
                                  "code": {
                                    "description": "Specific validation error code for this field",
                                    "example": "required",
                                    "type": "string"
                                  },
                                  "params": {
                                    "additionalProperties": true,
                                    "description": "Validation parameters providing context for the error",
                                    "example": {
                                      "expectedType": "string",
                                      "receivedType": "number"
                                    },
                                    "type": "object"
                                  },
                                  "path": {
                                    "description": "JSON path to the field that failed validation",
                                    "example": "/username",
                                    "pattern": "^/",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "code",
                                  "path",
                                  "params"
                                ],
                                "type": "object"
                              },
                              "minItems": 1,
                              "type": "array"
                            }
                          },
                          "required": [
                            "validation_errors"
                          ],
                          "type": "object"
                        },
                        "status": {
                          "description": "HTTP status code for validation errors",
                          "enum": [400]
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "description": "Validation error response extending the base error response",
                  "title": "Validation Error"
                }
              }
            }
          },
          "401": {
            "description": "Organization Authentication Failed",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "code": {
                          "enum": [
                            "unauthorized"
                          ]
                        },
                        "status": {
                          "enum": [403]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Organization Create Failed",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "code": {
                          "enum": [
                            "organization.create.failed"
                          ]
                        },
                        "status": {
                          "enum": [500]
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/organizations/{id}": {
      "delete": {
        "tags": [
          "organizations"
        ],
        "parameters": [
          {
            "schema": {
              "format": "uuid",
              "type": "string"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Organization Deleted Successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard response envelope containing event information and data payload",
                      "properties": {
                        "data": {
                          "description": "Response data payload containing the actual response content",
                          "type": "object"
                        },
                        "event": {
                          "additionalProperties": false,
                          "description": "Event information describing the operation performed",
                          "properties": {
                            "code": {
                              "description": "Event code identifying the specific operation that occurred",
                              "pattern": "^[a-z]+\\.[a-z_]+$",
                              "type": "string"
                            },
                            "correlationId": {
                              "description": "Unique correlation ID linking this event to the original request for tracing",
                              "example": "123e4567-e89b-12d3-a456-426614174000",
                              "format": "uuid",
                              "type": "string"
                            },
                            "metadata": {
                              "additionalProperties": true,
                              "description": "Event-specific metadata providing additional context",
                              "example": {
                                "field": "value"
                              },
                              "type": "object"
                            },
                            "payload": {
                              "additionalProperties": true,
                              "description": "Event payload containing detailed information about the event",
                              "example": {
                                "field": "value"
                              },
                              "type": "object"
                            }
                          },
                          "required": [
                            "code"
                          ],
                          "type": "object"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the response was generated",
                          "example": 1690000000,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "event",
                        "timestamp"
                      ],
                      "title": "Reply Envelope",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "data": {
                          "additionalProperties": false,
                          "description": "Simple success response for operations that do not return data",
                          "properties": {
                            "success": {
                              "description": "Boolean flag indicating the operation completed successfully",
                              "example": true,
                              "type": "boolean",
                              "enum": [true]
                            }
                          },
                          "required": [
                            "success"
                          ],
                          "title": "Success Response",
                          "type": "object"
                        },
                        "event": {
                          "properties": {
                            "code": {
                              "enum": [
                                "organization.deleted"
                              ]
                            }
                          },
                          "type": "object"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Validation Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "description": "Validation error response with detailed field-level errors",
                      "properties": {
                        "code": {
                          "description": "Fixed error code for validation errors",
                          "enum": [
                            "validation.error"
                          ]
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Validation-specific metadata containing detailed error information",
                          "properties": {
                            "validation_errors": {
                              "description": "Array of field-level validation errors",
                              "items": {
                                "additionalProperties": false,
                                "description": "Individual field validation error",
                                "properties": {
                                  "code": {
                                    "description": "Specific validation error code for this field",
                                    "example": "required",
                                    "type": "string"
                                  },
                                  "params": {
                                    "additionalProperties": true,
                                    "description": "Validation parameters providing context for the error",
                                    "example": {
                                      "expectedType": "string",
                                      "receivedType": "number"
                                    },
                                    "type": "object"
                                  },
                                  "path": {
                                    "description": "JSON path to the field that failed validation",
                                    "example": "/username",
                                    "pattern": "^/",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "code",
                                  "path",
                                  "params"
                                ],
                                "type": "object"
                              },
                              "minItems": 1,
                              "type": "array"
                            }
                          },
                          "required": [
                            "validation_errors"
                          ],
                          "type": "object"
                        },
                        "status": {
                          "description": "HTTP status code for validation errors",
                          "enum": [400]
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "description": "Validation error response extending the base error response",
                  "title": "Validation Error"
                }
              }
            }
          },
          "401": {
            "description": "Organization Authentication Failed",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "code": {
                          "enum": [
                            "unauthorized"
                          ]
                        },
                        "status": {
                          "enum": [403]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Organization Not Found",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "code": {
                          "enum": [
                            "organization.not.found"
                          ]
                        },
                        "status": {
                          "enum": [404]
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Organization Delete Failed",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "code": {
                          "enum": [
                            "organization.delete.failed"
                          ]
                        },
                        "status": {
                          "enum": [500]
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "organizations"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "additionalProperties": false,
                "description": "Request body for updating an existing organization",
                "properties": {
                  "name": {
                    "description": "New name for the organization",
                    "example": "Updated Acme Corporation",
                    "maxLength": 100,
                    "minLength": 1,
                    "type": "string"
                  },
                  "overage": {
                    "description": "Whether the organization is allowed to exceed usage limits",
                    "example": false,
                    "type": "boolean"
                  }
                },
                "required": [],
                "title": "Update Organization Body",
                "type": "object"
              }
            }
          },
          "description": "Request body for updating an existing organization"
        },
        "parameters": [
          {
            "schema": {
              "format": "uuid",
              "type": "string"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Organization Updated Successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard response envelope containing event information and data payload",
                      "properties": {
                        "data": {
                          "description": "Response data payload containing the actual response content",
                          "type": "object"
                        },
                        "event": {
                          "additionalProperties": false,
                          "description": "Event information describing the operation performed",
                          "properties": {
                            "code": {
                              "description": "Event code identifying the specific operation that occurred",
                              "pattern": "^[a-z]+\\.[a-z_]+$",
                              "type": "string"
                            },
                            "correlationId": {
                              "description": "Unique correlation ID linking this event to the original request for tracing",
                              "example": "123e4567-e89b-12d3-a456-426614174000",
                              "format": "uuid",
                              "type": "string"
                            },
                            "metadata": {
                              "additionalProperties": true,
                              "description": "Event-specific metadata providing additional context",
                              "example": {
                                "field": "value"
                              },
                              "type": "object"
                            },
                            "payload": {
                              "additionalProperties": true,
                              "description": "Event payload containing detailed information about the event",
                              "example": {
                                "field": "value"
                              },
                              "type": "object"
                            }
                          },
                          "required": [
                            "code"
                          ],
                          "type": "object"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the response was generated",
                          "example": 1690000000,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "event",
                        "timestamp"
                      ],
                      "title": "Reply Envelope",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "data": {
                          "additionalProperties": false,
                          "description": "Simple success response for operations that do not return data",
                          "properties": {
                            "success": {
                              "description": "Boolean flag indicating the operation completed successfully",
                              "example": true,
                              "type": "boolean",
                              "enum": [true]
                            }
                          },
                          "required": [
                            "success"
                          ],
                          "title": "Success Response",
                          "type": "object"
                        },
                        "event": {
                          "properties": {
                            "code": {
                              "enum": [
                                "organization.updated"
                              ]
                            }
                          },
                          "type": "object"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Validation Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "description": "Validation error response with detailed field-level errors",
                      "properties": {
                        "code": {
                          "description": "Fixed error code for validation errors",
                          "enum": [
                            "validation.error"
                          ]
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Validation-specific metadata containing detailed error information",
                          "properties": {
                            "validation_errors": {
                              "description": "Array of field-level validation errors",
                              "items": {
                                "additionalProperties": false,
                                "description": "Individual field validation error",
                                "properties": {
                                  "code": {
                                    "description": "Specific validation error code for this field",
                                    "example": "required",
                                    "type": "string"
                                  },
                                  "params": {
                                    "additionalProperties": true,
                                    "description": "Validation parameters providing context for the error",
                                    "example": {
                                      "expectedType": "string",
                                      "receivedType": "number"
                                    },
                                    "type": "object"
                                  },
                                  "path": {
                                    "description": "JSON path to the field that failed validation",
                                    "example": "/username",
                                    "pattern": "^/",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "code",
                                  "path",
                                  "params"
                                ],
                                "type": "object"
                              },
                              "minItems": 1,
                              "type": "array"
                            }
                          },
                          "required": [
                            "validation_errors"
                          ],
                          "type": "object"
                        },
                        "status": {
                          "description": "HTTP status code for validation errors",
                          "enum": [400]
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "description": "Validation error response extending the base error response",
                  "title": "Validation Error"
                }
              }
            }
          },
          "401": {
            "description": "Organization Authentication Failed",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "code": {
                          "enum": [
                            "unauthorized"
                          ]
                        },
                        "status": {
                          "enum": [403]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Organization Not Found",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "code": {
                          "enum": [
                            "organization.not.found"
                          ]
                        },
                        "status": {
                          "enum": [404]
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Organization Update Failed",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "code": {
                          "enum": [
                            "organization.update.failed"
                          ]
                        },
                        "status": {
                          "enum": [500]
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "organizations"
        ],
        "parameters": [
          {
            "schema": {
              "format": "uuid",
              "type": "string"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Organization Retrieved Successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard response envelope containing event information and data payload",
                      "properties": {
                        "data": {
                          "description": "Response data payload containing the actual response content",
                          "type": "object"
                        },
                        "event": {
                          "additionalProperties": false,
                          "description": "Event information describing the operation performed",
                          "properties": {
                            "code": {
                              "description": "Event code identifying the specific operation that occurred",
                              "pattern": "^[a-z]+\\.[a-z_]+$",
                              "type": "string"
                            },
                            "correlationId": {
                              "description": "Unique correlation ID linking this event to the original request for tracing",
                              "example": "123e4567-e89b-12d3-a456-426614174000",
                              "format": "uuid",
                              "type": "string"
                            },
                            "metadata": {
                              "additionalProperties": true,
                              "description": "Event-specific metadata providing additional context",
                              "example": {
                                "field": "value"
                              },
                              "type": "object"
                            },
                            "payload": {
                              "additionalProperties": true,
                              "description": "Event payload containing detailed information about the event",
                              "example": {
                                "field": "value"
                              },
                              "type": "object"
                            }
                          },
                          "required": [
                            "code"
                          ],
                          "type": "object"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the response was generated",
                          "example": 1690000000,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "event",
                        "timestamp"
                      ],
                      "title": "Reply Envelope",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "data": {
                          "additionalProperties": false,
                          "properties": {
                            "organization": {
                              "additionalProperties": false,
                              "description": "Organization entity representing a business or group account",
                              "properties": {
                                "archived": {
                                  "description": "Whether the organization has been archived (soft deleted)",
                                  "example": false,
                                  "type": "boolean"
                                },
                                "archivedAt": {
                                  "description": "Timestamp when organization was archived, or null if not archived",
                                  "example": 1726282800,
                                  "format": "int64",
                                  "minimum": 0,
                                  "nullable": true,
                                  "type": "number"
                                },
                                "archivedBy": {
                                  "description": "ID of user who archived the organization, or null if not archived",
                                  "example": "123e4567-e89b-12d3-a456-426614174000",
                                  "format": "uuid",
                                  "nullable": true,
                                  "type": "string"
                                },
                                "createdAt": {
                                  "description": "UNIX timestamp when the organization was created",
                                  "example": 1726282800,
                                  "format": "int64",
                                  "minimum": 0,
                                  "type": "number"
                                },
                                "createdBy": {
                                  "description": "UUID of the user who created this organization",
                                  "example": "123e4567-e89b-12d3-a456-426614174000",
                                  "format": "uuid",
                                  "type": "string"
                                },
                                "id": {
                                  "description": "Unique identifier for the organization",
                                  "example": "550e8400-e29b-41d4-a716-446655440000",
                                  "format": "uuid",
                                  "type": "string"
                                },
                                "limits": {
                                  "description": "Usage limits configured for this organization",
                                  "properties": {
                                    "apiKeys": {
                                      "description": "Maximum number of API keys allowed",
                                      "example": 10,
                                      "minimum": 0,
                                      "type": "number"
                                    },
                                    "assistants": {
                                      "description": "Maximum number of assistants allowed",
                                      "example": 5,
                                      "minimum": 0,
                                      "type": "number"
                                    },
                                    "files": {
                                      "description": "Maximum number of files allowed",
                                      "example": 1000,
                                      "minimum": 0,
                                      "type": "number"
                                    },
                                    "members": {
                                      "description": "Maximum number of members allowed",
                                      "example": 50,
                                      "minimum": 0,
                                      "type": "number"
                                    },
                                    "messages": {
                                      "description": "Maximum number of messages allowed per month",
                                      "example": 10000,
                                      "minimum": 0,
                                      "type": "number"
                                    },
                                    "tokens": {
                                      "description": "Maximum number of tokens allowed per month",
                                      "example": 1000000,
                                      "minimum": 0,
                                      "type": "number"
                                    }
                                  },
                                  "type": "object"
                                },
                                "name": {
                                  "description": "Display name of the organization",
                                  "example": "Acme Corporation",
                                  "type": "string"
                                },
                                "object": {
                                  "description": "Object type identifier for this entity",
                                  "example": "organization",
                                  "type": "string",
                                  "enum": [
                                    "organization"
                                  ]
                                },
                                "overage": {
                                  "default": false,
                                  "description": "Whether the organization can exceed usage limits",
                                  "example": false,
                                  "type": "boolean"
                                },
                                "sso": {
                                  "description": "Single Sign-On configuration for the organization",
                                  "properties": {
                                    "enabled": {
                                      "description": "Whether SSO is enabled for this organization",
                                      "example": false,
                                      "type": "boolean"
                                    }
                                  },
                                  "type": "object"
                                }
                              },
                              "required": [
                                "id",
                                "name",
                                "createdAt",
                                "createdBy",
                                "object",
                                "archived",
                                "sso",
                                "limits",
                                "overage"
                              ],
                              "title": "Organization",
                              "type": "object"
                            }
                          },
                          "required": [
                            "organization"
                          ],
                          "type": "object"
                        },
                        "event": {
                          "properties": {
                            "code": {
                              "enum": [
                                "organization.retrieved"
                              ]
                            }
                          },
                          "type": "object"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Validation Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "description": "Validation error response with detailed field-level errors",
                      "properties": {
                        "code": {
                          "description": "Fixed error code for validation errors",
                          "enum": [
                            "validation.error"
                          ]
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Validation-specific metadata containing detailed error information",
                          "properties": {
                            "validation_errors": {
                              "description": "Array of field-level validation errors",
                              "items": {
                                "additionalProperties": false,
                                "description": "Individual field validation error",
                                "properties": {
                                  "code": {
                                    "description": "Specific validation error code for this field",
                                    "example": "required",
                                    "type": "string"
                                  },
                                  "params": {
                                    "additionalProperties": true,
                                    "description": "Validation parameters providing context for the error",
                                    "example": {
                                      "expectedType": "string",
                                      "receivedType": "number"
                                    },
                                    "type": "object"
                                  },
                                  "path": {
                                    "description": "JSON path to the field that failed validation",
                                    "example": "/username",
                                    "pattern": "^/",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "code",
                                  "path",
                                  "params"
                                ],
                                "type": "object"
                              },
                              "minItems": 1,
                              "type": "array"
                            }
                          },
                          "required": [
                            "validation_errors"
                          ],
                          "type": "object"
                        },
                        "status": {
                          "description": "HTTP status code for validation errors",
                          "enum": [400]
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "description": "Validation error response extending the base error response",
                  "title": "Validation Error"
                }
              }
            }
          },
          "401": {
            "description": "Organization Authentication Failed",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "code": {
                          "enum": [
                            "unauthorized"
                          ]
                        },
                        "status": {
                          "enum": [403]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Organization Not Found",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "code": {
                          "enum": [
                            "organization.not.found"
                          ]
                        },
                        "status": {
                          "enum": [404]
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Organization Retrieve Failed",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "code": {
                          "enum": [
                            "organization.retrieve.failed"
                          ]
                        },
                        "status": {
                          "enum": [500]
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/organizations/{id}/members/{userId}/remove": {
      "delete": {
        "tags": [
          "organizations"
        ],
        "parameters": [
          {
            "schema": {
              "format": "uuid",
              "type": "string"
            },
            "in": "path",
            "name": "id",
            "required": true
          },
          {
            "schema": {
              "format": "uuid",
              "type": "string"
            },
            "in": "path",
            "name": "userId",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Member Removed Successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard response envelope containing event information and data payload",
                      "properties": {
                        "data": {
                          "description": "Response data payload containing the actual response content",
                          "type": "object"
                        },
                        "event": {
                          "additionalProperties": false,
                          "description": "Event information describing the operation performed",
                          "properties": {
                            "code": {
                              "description": "Event code identifying the specific operation that occurred",
                              "pattern": "^[a-z]+\\.[a-z_]+$",
                              "type": "string"
                            },
                            "correlationId": {
                              "description": "Unique correlation ID linking this event to the original request for tracing",
                              "example": "123e4567-e89b-12d3-a456-426614174000",
                              "format": "uuid",
                              "type": "string"
                            },
                            "metadata": {
                              "additionalProperties": true,
                              "description": "Event-specific metadata providing additional context",
                              "example": {
                                "field": "value"
                              },
                              "type": "object"
                            },
                            "payload": {
                              "additionalProperties": true,
                              "description": "Event payload containing detailed information about the event",
                              "example": {
                                "field": "value"
                              },
                              "type": "object"
                            }
                          },
                          "required": [
                            "code"
                          ],
                          "type": "object"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the response was generated",
                          "example": 1690000000,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "event",
                        "timestamp"
                      ],
                      "title": "Reply Envelope",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "data": {
                          "additionalProperties": false,
                          "description": "Simple success response for operations that do not return data",
                          "properties": {
                            "success": {
                              "description": "Boolean flag indicating the operation completed successfully",
                              "example": true,
                              "type": "boolean",
                              "enum": [true]
                            }
                          },
                          "required": [
                            "success"
                          ],
                          "title": "Success Response",
                          "type": "object"
                        },
                        "event": {
                          "properties": {
                            "code": {
                              "enum": [
                                "organization.member.removed"
                              ]
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Validation Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "description": "Validation error response with detailed field-level errors",
                      "properties": {
                        "code": {
                          "description": "Fixed error code for validation errors",
                          "enum": [
                            "validation.error"
                          ]
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Validation-specific metadata containing detailed error information",
                          "properties": {
                            "validation_errors": {
                              "description": "Array of field-level validation errors",
                              "items": {
                                "additionalProperties": false,
                                "description": "Individual field validation error",
                                "properties": {
                                  "code": {
                                    "description": "Specific validation error code for this field",
                                    "example": "required",
                                    "type": "string"
                                  },
                                  "params": {
                                    "additionalProperties": true,
                                    "description": "Validation parameters providing context for the error",
                                    "example": {
                                      "expectedType": "string",
                                      "receivedType": "number"
                                    },
                                    "type": "object"
                                  },
                                  "path": {
                                    "description": "JSON path to the field that failed validation",
                                    "example": "/username",
                                    "pattern": "^/",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "code",
                                  "path",
                                  "params"
                                ],
                                "type": "object"
                              },
                              "minItems": 1,
                              "type": "array"
                            }
                          },
                          "required": [
                            "validation_errors"
                          ],
                          "type": "object"
                        },
                        "status": {
                          "description": "HTTP status code for validation errors",
                          "enum": [400]
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "description": "Validation error response extending the base error response",
                  "title": "Validation Error"
                }
              }
            }
          },
          "401": {
            "description": "Organization Authentication Failed",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "code": {
                          "enum": [
                            "unauthorized"
                          ]
                        },
                        "status": {
                          "enum": [403]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Organization Not Found",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "code": {
                          "enum": [
                            "organization.not.found"
                          ]
                        },
                        "status": {
                          "enum": [404]
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Member Remove Failed",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "code": {
                          "enum": [
                            "organization.member.remove.failed"
                          ]
                        },
                        "status": {
                          "enum": [500]
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/logs/{id}": {
      "get": {
        "tags": [
          "logs"
        ],
        "parameters": [
          {
            "schema": {
              "format": "uuid",
              "type": "string"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Log Retrieved Successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard response envelope containing event information and data payload",
                      "properties": {
                        "data": {
                          "description": "Response data payload containing the actual response content",
                          "type": "object"
                        },
                        "event": {
                          "additionalProperties": false,
                          "description": "Event information describing the operation performed",
                          "properties": {
                            "code": {
                              "description": "Event code identifying the specific operation that occurred",
                              "pattern": "^[a-z]+\\.[a-z_]+$",
                              "type": "string"
                            },
                            "correlationId": {
                              "description": "Unique correlation ID linking this event to the original request for tracing",
                              "example": "123e4567-e89b-12d3-a456-426614174000",
                              "format": "uuid",
                              "type": "string"
                            },
                            "metadata": {
                              "additionalProperties": true,
                              "description": "Event-specific metadata providing additional context",
                              "example": {
                                "field": "value"
                              },
                              "type": "object"
                            },
                            "payload": {
                              "additionalProperties": true,
                              "description": "Event payload containing detailed information about the event",
                              "example": {
                                "field": "value"
                              },
                              "type": "object"
                            }
                          },
                          "required": [
                            "code"
                          ],
                          "type": "object"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the response was generated",
                          "example": 1690000000,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "event",
                        "timestamp"
                      ],
                      "title": "Reply Envelope",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "data": {
                          "additionalProperties": false,
                          "properties": {
                            "log": {
                              "additionalProperties": false,
                              "description": "Log entry representing an event or action that occurred in the system",
                              "properties": {
                                "createdAt": {
                                  "description": "UNIX timestamp when the log entry was created",
                                  "example": 1726282800,
                                  "format": "int64",
                                  "minimum": 0,
                                  "type": "number"
                                },
                                "createdBy": {
                                  "description": "UUID of the user or entity that triggered this log event",
                                  "example": "123e4567-e89b-12d3-a456-426614174000",
                                  "format": "uuid",
                                  "type": "string"
                                },
                                "event": {
                                  "description": "Name of the event that occurred",
                                  "example": "user.login",
                                  "type": "string"
                                },
                                "id": {
                                  "description": "Unique identifier for the log entry",
                                  "example": "789a0123-b456-78c9-d012-345678901234",
                                  "format": "uuid",
                                  "type": "string"
                                },
                                "metadata": {
                                  "default": {

                                  },
                                  "description": "Additional metadata about the logged event",
                                  "example": {
                                    "duration": 150,
                                    "userId": "123e4567-e89b-12d3-a456-426614174000"
                                  },
                                  "properties": {
                                    "assistantId": {
                                      "description": "UUID of the assistant involved in the event",
                                      "format": "uuid",
                                      "type": "string"
                                    },
                                    "duration": {
                                      "description": "Duration of the operation in milliseconds",
                                      "minimum": 0,
                                      "type": "number"
                                    },
                                    "errorCode": {
                                      "description": "Error code if the event represents an error",
                                      "type": "string"
                                    },
                                    "fileId": {
                                      "description": "UUID of the file involved in the event",
                                      "format": "uuid",
                                      "type": "string"
                                    },
                                    "folderId": {
                                      "description": "UUID of the folder involved in the event",
                                      "format": "uuid",
                                      "type": "string"
                                    },
                                    "invitationId": {
                                      "description": "UUID of the invitation involved in the event",
                                      "format": "uuid",
                                      "type": "string"
                                    },
                                    "messageId": {
                                      "description": "UUID of the message involved in the event",
                                      "format": "uuid",
                                      "type": "string"
                                    },
                                    "organizationId": {
                                      "description": "UUID of the organization involved in the event",
                                      "format": "uuid",
                                      "type": "string"
                                    },
                                    "roleId": {
                                      "description": "UUID of the role involved in the event",
                                      "format": "uuid",
                                      "type": "string"
                                    },
                                    "threadId": {
                                      "description": "UUID of the thread involved in the event",
                                      "format": "uuid",
                                      "type": "string"
                                    },
                                    "userId": {
                                      "description": "UUID of the user involved in the event",
                                      "format": "uuid",
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                },
                                "object": {
                                  "description": "Object type identifier for this entity",
                                  "example": "log",
                                  "type": "string",
                                  "enum": [
                                    "log"
                                  ]
                                },
                                "organization": {
                                  "description": "UUID of the organization this log entry belongs to",
                                  "example": "550e8400-e29b-41d4-a716-446655440000",
                                  "format": "uuid",
                                  "type": "string"
                                },
                                "type": {
                                  "description": "Type of entity that triggered this log event",
                                  "enum": [
                                    "user",
                                    "apiKey",
                                    "system"
                                  ],
                                  "example": "user",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "id",
                                "createdBy",
                                "event",
                                "type",
                                "createdAt",
                                "organization",
                                "object"
                              ],
                              "title": "Log",
                              "type": "object"
                            }
                          },
                          "required": [
                            "log"
                          ],
                          "type": "object"
                        },
                        "event": {
                          "properties": {
                            "code": {
                              "enum": [
                                "log.retrieved"
                              ]
                            }
                          },
                          "type": "object"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Validation Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "description": "Validation error response with detailed field-level errors",
                      "properties": {
                        "code": {
                          "description": "Fixed error code for validation errors",
                          "enum": [
                            "validation.error"
                          ]
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Validation-specific metadata containing detailed error information",
                          "properties": {
                            "validation_errors": {
                              "description": "Array of field-level validation errors",
                              "items": {
                                "additionalProperties": false,
                                "description": "Individual field validation error",
                                "properties": {
                                  "code": {
                                    "description": "Specific validation error code for this field",
                                    "example": "required",
                                    "type": "string"
                                  },
                                  "params": {
                                    "additionalProperties": true,
                                    "description": "Validation parameters providing context for the error",
                                    "example": {
                                      "expectedType": "string",
                                      "receivedType": "number"
                                    },
                                    "type": "object"
                                  },
                                  "path": {
                                    "description": "JSON path to the field that failed validation",
                                    "example": "/username",
                                    "pattern": "^/",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "code",
                                  "path",
                                  "params"
                                ],
                                "type": "object"
                              },
                              "minItems": 1,
                              "type": "array"
                            }
                          },
                          "required": [
                            "validation_errors"
                          ],
                          "type": "object"
                        },
                        "status": {
                          "description": "HTTP status code for validation errors",
                          "enum": [400]
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "description": "Validation error response extending the base error response",
                  "title": "Validation Error"
                }
              }
            }
          },
          "401": {
            "description": "Log Authentication Failed",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "code": {
                          "enum": [
                            "unauthorized"
                          ]
                        },
                        "status": {
                          "enum": [403]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Log Not Found",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "code": {
                          "enum": [
                            "log.not.found"
                          ]
                        },
                        "status": {
                          "enum": [404]
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Log Retrieve Failed",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "code": {
                          "enum": [
                            "log.retrieve.failed"
                          ]
                        },
                        "status": {
                          "enum": [500]
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/logs/list": {
      "post": {
        "tags": [
          "logs"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "additionalProperties": false,
                "description": "Request body for listing logs with filtering and pagination",
                "properties": {
                  "date": {
                    "additionalProperties": false,
                    "description": "Date range filter for log creation",
                    "properties": {
                      "end": {
                        "anyOf": [
                          {
                            "type": "string"
                          },
                          {
                            "type": "number"
                          }
                        ],
                        "description": "End date for filtering (ISO string, timestamp, or Date)"
                      },
                      "start": {
                        "anyOf": [
                          {
                            "type": "string"
                          },
                          {
                            "type": "number"
                          }
                        ],
                        "description": "Start date for filtering (ISO string, timestamp, or Date)"
                      }
                    },
                    "type": "object"
                  },
                  "limit": {
                    "default": 10,
                    "description": "Maximum number of logs to return per page",
                    "example": 20,
                    "maximum": 100,
                    "minimum": 1,
                    "type": "integer"
                  },
                  "order": {
                    "default": "desc",
                    "description": "Sort order for the results",
                    "enum": [
                      "asc",
                      "desc"
                    ],
                    "example": "desc",
                    "type": "string"
                  },
                  "page": {
                    "default": 1,
                    "description": "Page number for pagination (1-based)",
                    "example": 1,
                    "minimum": 1,
                    "type": "integer"
                  }
                },
                "required": [],
                "title": "List Logs Body",
                "type": "object"
              }
            }
          },
          "description": "Request body for listing logs with filtering and pagination"
        },
        "responses": {
          "200": {
            "description": "Logs Listed Successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard response envelope containing event information and data payload",
                      "properties": {
                        "data": {
                          "description": "Response data payload containing the actual response content",
                          "type": "object"
                        },
                        "event": {
                          "additionalProperties": false,
                          "description": "Event information describing the operation performed",
                          "properties": {
                            "code": {
                              "description": "Event code identifying the specific operation that occurred",
                              "pattern": "^[a-z]+\\.[a-z_]+$",
                              "type": "string"
                            },
                            "correlationId": {
                              "description": "Unique correlation ID linking this event to the original request for tracing",
                              "example": "123e4567-e89b-12d3-a456-426614174000",
                              "format": "uuid",
                              "type": "string"
                            },
                            "metadata": {
                              "additionalProperties": true,
                              "description": "Event-specific metadata providing additional context",
                              "example": {
                                "field": "value"
                              },
                              "type": "object"
                            },
                            "payload": {
                              "additionalProperties": true,
                              "description": "Event payload containing detailed information about the event",
                              "example": {
                                "field": "value"
                              },
                              "type": "object"
                            }
                          },
                          "required": [
                            "code"
                          ],
                          "type": "object"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the response was generated",
                          "example": 1690000000,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "event",
                        "timestamp"
                      ],
                      "title": "Reply Envelope",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "data": {
                          "additionalProperties": false,
                          "properties": {
                            "logs": {
                              "items": {
                                "additionalProperties": false,
                                "description": "Log entry representing an event or action that occurred in the system",
                                "properties": {
                                  "createdAt": {
                                    "description": "UNIX timestamp when the log entry was created",
                                    "example": 1726282800,
                                    "format": "int64",
                                    "minimum": 0,
                                    "type": "number"
                                  },
                                  "createdBy": {
                                    "description": "UUID of the user or entity that triggered this log event",
                                    "example": "123e4567-e89b-12d3-a456-426614174000",
                                    "format": "uuid",
                                    "type": "string"
                                  },
                                  "event": {
                                    "description": "Name of the event that occurred",
                                    "example": "user.login",
                                    "type": "string"
                                  },
                                  "id": {
                                    "description": "Unique identifier for the log entry",
                                    "example": "789a0123-b456-78c9-d012-345678901234",
                                    "format": "uuid",
                                    "type": "string"
                                  },
                                  "metadata": {
                                    "default": {

                                    },
                                    "description": "Additional metadata about the logged event",
                                    "example": {
                                      "duration": 150,
                                      "userId": "123e4567-e89b-12d3-a456-426614174000"
                                    },
                                    "properties": {
                                      "assistantId": {
                                        "description": "UUID of the assistant involved in the event",
                                        "format": "uuid",
                                        "type": "string"
                                      },
                                      "duration": {
                                        "description": "Duration of the operation in milliseconds",
                                        "minimum": 0,
                                        "type": "number"
                                      },
                                      "errorCode": {
                                        "description": "Error code if the event represents an error",
                                        "type": "string"
                                      },
                                      "fileId": {
                                        "description": "UUID of the file involved in the event",
                                        "format": "uuid",
                                        "type": "string"
                                      },
                                      "folderId": {
                                        "description": "UUID of the folder involved in the event",
                                        "format": "uuid",
                                        "type": "string"
                                      },
                                      "invitationId": {
                                        "description": "UUID of the invitation involved in the event",
                                        "format": "uuid",
                                        "type": "string"
                                      },
                                      "messageId": {
                                        "description": "UUID of the message involved in the event",
                                        "format": "uuid",
                                        "type": "string"
                                      },
                                      "organizationId": {
                                        "description": "UUID of the organization involved in the event",
                                        "format": "uuid",
                                        "type": "string"
                                      },
                                      "roleId": {
                                        "description": "UUID of the role involved in the event",
                                        "format": "uuid",
                                        "type": "string"
                                      },
                                      "threadId": {
                                        "description": "UUID of the thread involved in the event",
                                        "format": "uuid",
                                        "type": "string"
                                      },
                                      "userId": {
                                        "description": "UUID of the user involved in the event",
                                        "format": "uuid",
                                        "type": "string"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "object": {
                                    "description": "Object type identifier for this entity",
                                    "example": "log",
                                    "type": "string",
                                    "enum": [
                                      "log"
                                    ]
                                  },
                                  "organization": {
                                    "description": "UUID of the organization this log entry belongs to",
                                    "example": "550e8400-e29b-41d4-a716-446655440000",
                                    "format": "uuid",
                                    "type": "string"
                                  },
                                  "type": {
                                    "description": "Type of entity that triggered this log event",
                                    "enum": [
                                      "user",
                                      "apiKey",
                                      "system"
                                    ],
                                    "example": "user",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "id",
                                  "createdBy",
                                  "event",
                                  "type",
                                  "createdAt",
                                  "organization",
                                  "object"
                                ],
                                "title": "Log",
                                "type": "object"
                              },
                              "type": "array"
                            }
                          },
                          "required": [
                            "logs"
                          ],
                          "type": "object"
                        },
                        "event": {
                          "properties": {
                            "code": {
                              "enum": [
                                "logs.listed"
                              ]
                            }
                          },
                          "type": "object"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Validation Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "description": "Validation error response with detailed field-level errors",
                      "properties": {
                        "code": {
                          "description": "Fixed error code for validation errors",
                          "enum": [
                            "validation.error"
                          ]
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Validation-specific metadata containing detailed error information",
                          "properties": {
                            "validation_errors": {
                              "description": "Array of field-level validation errors",
                              "items": {
                                "additionalProperties": false,
                                "description": "Individual field validation error",
                                "properties": {
                                  "code": {
                                    "description": "Specific validation error code for this field",
                                    "example": "required",
                                    "type": "string"
                                  },
                                  "params": {
                                    "additionalProperties": true,
                                    "description": "Validation parameters providing context for the error",
                                    "example": {
                                      "expectedType": "string",
                                      "receivedType": "number"
                                    },
                                    "type": "object"
                                  },
                                  "path": {
                                    "description": "JSON path to the field that failed validation",
                                    "example": "/username",
                                    "pattern": "^/",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "code",
                                  "path",
                                  "params"
                                ],
                                "type": "object"
                              },
                              "minItems": 1,
                              "type": "array"
                            }
                          },
                          "required": [
                            "validation_errors"
                          ],
                          "type": "object"
                        },
                        "status": {
                          "description": "HTTP status code for validation errors",
                          "enum": [400]
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "description": "Validation error response extending the base error response",
                  "title": "Validation Error"
                }
              }
            }
          },
          "401": {
            "description": "Log Authentication Failed",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "code": {
                          "enum": [
                            "unauthorized"
                          ]
                        },
                        "status": {
                          "enum": [403]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Log List Failed",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "code": {
                          "enum": [
                            "log.list.failed"
                          ]
                        },
                        "status": {
                          "enum": [500]
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/roles/new": {
      "post": {
        "tags": [
          "roles"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "additionalProperties": false,
                "description": "Request body for creating a role",
                "properties": {
                  "assistants": {
                    "description": "Assistant-specific permissions to grant",
                    "items": {
                      "additionalProperties": false,
                      "properties": {
                        "id": {
                          "format": "uuid",
                          "type": "string"
                        },
                        "scopes": {
                          "items": {
                            "enum": [
                              "files",
                              "messages"
                            ],
                            "type": "string"
                          },
                          "type": "array"
                        }
                      },
                      "required": [
                        "id",
                        "scopes"
                      ],
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "name": {
                    "description": "Name of the role",
                    "example": "Content Manager",
                    "minLength": 1,
                    "type": "string"
                  },
                  "scopes": {
                    "items": {
                      "enum": [
                        "owner",
                        "organization",
                        "assistants",
                        "roles",
                        "members",
                        "logs",
                        "apiKeys",
                        "invitations"
                      ],
                      "type": "string"
                    },
                    "type": "array"
                  }
                },
                "required": [
                  "name"
                ],
                "title": "Create Role Body",
                "type": "object"
              }
            }
          },
          "required": true,
          "description": "Request body for creating a role"
        },
        "responses": {
          "200": {
            "description": "Role Created Successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard response envelope containing event information and data payload",
                      "properties": {
                        "data": {
                          "description": "Response data payload containing the actual response content",
                          "type": "object"
                        },
                        "event": {
                          "additionalProperties": false,
                          "description": "Event information describing the operation performed",
                          "properties": {
                            "code": {
                              "description": "Event code identifying the specific operation that occurred",
                              "pattern": "^[a-z]+\\.[a-z_]+$",
                              "type": "string"
                            },
                            "correlationId": {
                              "description": "Unique correlation ID linking this event to the original request for tracing",
                              "example": "123e4567-e89b-12d3-a456-426614174000",
                              "format": "uuid",
                              "type": "string"
                            },
                            "metadata": {
                              "additionalProperties": true,
                              "description": "Event-specific metadata providing additional context",
                              "example": {
                                "field": "value"
                              },
                              "type": "object"
                            },
                            "payload": {
                              "additionalProperties": true,
                              "description": "Event payload containing detailed information about the event",
                              "example": {
                                "field": "value"
                              },
                              "type": "object"
                            }
                          },
                          "required": [
                            "code"
                          ],
                          "type": "object"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the response was generated",
                          "example": 1690000000,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "event",
                        "timestamp"
                      ],
                      "title": "Reply Envelope",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "data": {
                          "additionalProperties": false,
                          "properties": {
                            "role": {
                              "additionalProperties": false,
                              "description": "Role entity defining workspace permissions",
                              "properties": {
                                "assistants": {
                                  "description": "Assistant-specific permissions associated with the role",
                                  "items": {
                                    "additionalProperties": false,
                                    "properties": {
                                      "id": {
                                        "format": "uuid",
                                        "type": "string"
                                      },
                                      "scopes": {
                                        "items": {
                                          "enum": [
                                            "files",
                                            "messages"
                                          ],
                                          "type": "string"
                                        },
                                        "type": "array"
                                      }
                                    },
                                    "required": [
                                      "id",
                                      "scopes"
                                    ],
                                    "type": "object"
                                  },
                                  "type": "array"
                                },
                                "createdAt": {
                                  "description": "UNIX timestamp (ms) when the role was created",
                                  "example": 1726282800000,
                                  "format": "int64",
                                  "minimum": 0,
                                  "type": "number"
                                },
                                "createdBy": {
                                  "description": "UUID of the user or key that created the role",
                                  "format": "uuid",
                                  "type": "string"
                                },
                                "id": {
                                  "description": "Unique identifier for the role",
                                  "example": "550e8400-e29b-41d4-a716-446655440000",
                                  "format": "uuid",
                                  "type": "string"
                                },
                                "name": {
                                  "description": "Display name for the role",
                                  "example": "Content Manager",
                                  "type": "string"
                                },
                                "object": {
                                  "description": "Object type identifier",
                                  "type": "string",
                                  "enum": [
                                    "role"
                                  ]
                                },
                                "organization": {
                                  "description": "UUID of the organization that owns the role",
                                  "format": "uuid",
                                  "type": "string"
                                },
                                "scopes": {
                                  "description": "Global scopes granted by the role",
                                  "items": {
                                    "enum": [
                                      "owner",
                                      "organization",
                                      "assistants",
                                      "roles",
                                      "members",
                                      "logs",
                                      "apiKeys",
                                      "invitations"
                                    ],
                                    "type": "string"
                                  },
                                  "type": "array"
                                }
                              },
                              "required": [
                                "id",
                                "name",
                                "object",
                                "organization",
                                "createdAt",
                                "createdBy"
                              ],
                              "title": "Role",
                              "type": "object"
                            }
                          },
                          "required": [
                            "role"
                          ],
                          "type": "object"
                        },
                        "event": {
                          "properties": {
                            "code": {
                              "enum": [
                                "role.created"
                              ]
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Validation Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "description": "Validation error response with detailed field-level errors",
                      "properties": {
                        "code": {
                          "description": "Fixed error code for validation errors",
                          "enum": [
                            "validation.error"
                          ]
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Validation-specific metadata containing detailed error information",
                          "properties": {
                            "validation_errors": {
                              "description": "Array of field-level validation errors",
                              "items": {
                                "additionalProperties": false,
                                "description": "Individual field validation error",
                                "properties": {
                                  "code": {
                                    "description": "Specific validation error code for this field",
                                    "example": "required",
                                    "type": "string"
                                  },
                                  "params": {
                                    "additionalProperties": true,
                                    "description": "Validation parameters providing context for the error",
                                    "example": {
                                      "expectedType": "string",
                                      "receivedType": "number"
                                    },
                                    "type": "object"
                                  },
                                  "path": {
                                    "description": "JSON path to the field that failed validation",
                                    "example": "/username",
                                    "pattern": "^/",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "code",
                                  "path",
                                  "params"
                                ],
                                "type": "object"
                              },
                              "minItems": 1,
                              "type": "array"
                            }
                          },
                          "required": [
                            "validation_errors"
                          ],
                          "type": "object"
                        },
                        "status": {
                          "description": "HTTP status code for validation errors",
                          "enum": [400]
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "description": "Validation error response extending the base error response",
                  "title": "Validation Error"
                }
              }
            }
          },
          "401": {
            "description": "Role Authentication Failed",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "code": {
                          "enum": [
                            "unauthorized"
                          ]
                        },
                        "status": {
                          "enum": [403]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Role Create Failed",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "code": {
                          "enum": [
                            "role.create.failed"
                          ]
                        },
                        "status": {
                          "enum": [500]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/roles/{id}": {
      "delete": {
        "tags": [
          "roles"
        ],
        "parameters": [
          {
            "schema": {
              "format": "uuid",
              "type": "string"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Role Deleted Successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard response envelope containing event information and data payload",
                      "properties": {
                        "data": {
                          "description": "Response data payload containing the actual response content",
                          "type": "object"
                        },
                        "event": {
                          "additionalProperties": false,
                          "description": "Event information describing the operation performed",
                          "properties": {
                            "code": {
                              "description": "Event code identifying the specific operation that occurred",
                              "pattern": "^[a-z]+\\.[a-z_]+$",
                              "type": "string"
                            },
                            "correlationId": {
                              "description": "Unique correlation ID linking this event to the original request for tracing",
                              "example": "123e4567-e89b-12d3-a456-426614174000",
                              "format": "uuid",
                              "type": "string"
                            },
                            "metadata": {
                              "additionalProperties": true,
                              "description": "Event-specific metadata providing additional context",
                              "example": {
                                "field": "value"
                              },
                              "type": "object"
                            },
                            "payload": {
                              "additionalProperties": true,
                              "description": "Event payload containing detailed information about the event",
                              "example": {
                                "field": "value"
                              },
                              "type": "object"
                            }
                          },
                          "required": [
                            "code"
                          ],
                          "type": "object"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the response was generated",
                          "example": 1690000000,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "event",
                        "timestamp"
                      ],
                      "title": "Reply Envelope",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "data": {
                          "additionalProperties": false,
                          "description": "Simple success response for operations that do not return data",
                          "properties": {
                            "success": {
                              "description": "Boolean flag indicating the operation completed successfully",
                              "example": true,
                              "type": "boolean",
                              "enum": [true]
                            }
                          },
                          "required": [
                            "success"
                          ],
                          "title": "Success Response",
                          "type": "object"
                        },
                        "event": {
                          "properties": {
                            "code": {
                              "enum": [
                                "role.deleted"
                              ]
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Validation Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "description": "Validation error response with detailed field-level errors",
                      "properties": {
                        "code": {
                          "description": "Fixed error code for validation errors",
                          "enum": [
                            "validation.error"
                          ]
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Validation-specific metadata containing detailed error information",
                          "properties": {
                            "validation_errors": {
                              "description": "Array of field-level validation errors",
                              "items": {
                                "additionalProperties": false,
                                "description": "Individual field validation error",
                                "properties": {
                                  "code": {
                                    "description": "Specific validation error code for this field",
                                    "example": "required",
                                    "type": "string"
                                  },
                                  "params": {
                                    "additionalProperties": true,
                                    "description": "Validation parameters providing context for the error",
                                    "example": {
                                      "expectedType": "string",
                                      "receivedType": "number"
                                    },
                                    "type": "object"
                                  },
                                  "path": {
                                    "description": "JSON path to the field that failed validation",
                                    "example": "/username",
                                    "pattern": "^/",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "code",
                                  "path",
                                  "params"
                                ],
                                "type": "object"
                              },
                              "minItems": 1,
                              "type": "array"
                            }
                          },
                          "required": [
                            "validation_errors"
                          ],
                          "type": "object"
                        },
                        "status": {
                          "description": "HTTP status code for validation errors",
                          "enum": [400]
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "description": "Validation error response extending the base error response",
                  "title": "Validation Error"
                }
              }
            }
          },
          "401": {
            "description": "Role Authentication Failed",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "code": {
                          "enum": [
                            "unauthorized"
                          ]
                        },
                        "status": {
                          "enum": [403]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Role Not Found",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "code": {
                          "enum": [
                            "role.not.found"
                          ]
                        },
                        "status": {
                          "enum": [404]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Role Delete Failed",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "code": {
                          "enum": [
                            "role.delete.failed"
                          ]
                        },
                        "status": {
                          "enum": [500]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "roles"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "additionalProperties": false,
                "description": "Request body for updating an existing role",
                "properties": {
                  "assistants": {
                    "description": "Assistant-specific permissions",
                    "items": {
                      "additionalProperties": false,
                      "properties": {
                        "id": {
                          "format": "uuid",
                          "type": "string"
                        },
                        "scopes": {
                          "items": {
                            "enum": [
                              "files",
                              "messages"
                            ],
                            "type": "string"
                          },
                          "type": "array"
                        }
                      },
                      "required": [
                        "id",
                        "scopes"
                      ],
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "name": {
                    "description": "Updated role name",
                    "minLength": 1,
                    "type": "string"
                  },
                  "scopes": {
                    "items": {
                      "enum": [
                        "owner",
                        "organization",
                        "assistants",
                        "roles",
                        "members",
                        "logs",
                        "apiKeys",
                        "invitations"
                      ],
                      "type": "string"
                    },
                    "type": "array"
                  }
                },
                "title": "Update Role Body",
                "type": "object"
              }
            }
          },
          "description": "Request body for updating an existing role"
        },
        "parameters": [
          {
            "schema": {
              "format": "uuid",
              "type": "string"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Role Updated Successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard response envelope containing event information and data payload",
                      "properties": {
                        "data": {
                          "description": "Response data payload containing the actual response content",
                          "type": "object"
                        },
                        "event": {
                          "additionalProperties": false,
                          "description": "Event information describing the operation performed",
                          "properties": {
                            "code": {
                              "description": "Event code identifying the specific operation that occurred",
                              "pattern": "^[a-z]+\\.[a-z_]+$",
                              "type": "string"
                            },
                            "correlationId": {
                              "description": "Unique correlation ID linking this event to the original request for tracing",
                              "example": "123e4567-e89b-12d3-a456-426614174000",
                              "format": "uuid",
                              "type": "string"
                            },
                            "metadata": {
                              "additionalProperties": true,
                              "description": "Event-specific metadata providing additional context",
                              "example": {
                                "field": "value"
                              },
                              "type": "object"
                            },
                            "payload": {
                              "additionalProperties": true,
                              "description": "Event payload containing detailed information about the event",
                              "example": {
                                "field": "value"
                              },
                              "type": "object"
                            }
                          },
                          "required": [
                            "code"
                          ],
                          "type": "object"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the response was generated",
                          "example": 1690000000,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "event",
                        "timestamp"
                      ],
                      "title": "Reply Envelope",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "data": {
                          "additionalProperties": false,
                          "description": "Simple success response for operations that do not return data",
                          "properties": {
                            "success": {
                              "description": "Boolean flag indicating the operation completed successfully",
                              "example": true,
                              "type": "boolean",
                              "enum": [true]
                            }
                          },
                          "required": [
                            "success"
                          ],
                          "title": "Success Response",
                          "type": "object"
                        },
                        "event": {
                          "properties": {
                            "code": {
                              "enum": [
                                "role.updated"
                              ]
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Validation Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "description": "Validation error response with detailed field-level errors",
                      "properties": {
                        "code": {
                          "description": "Fixed error code for validation errors",
                          "enum": [
                            "validation.error"
                          ]
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Validation-specific metadata containing detailed error information",
                          "properties": {
                            "validation_errors": {
                              "description": "Array of field-level validation errors",
                              "items": {
                                "additionalProperties": false,
                                "description": "Individual field validation error",
                                "properties": {
                                  "code": {
                                    "description": "Specific validation error code for this field",
                                    "example": "required",
                                    "type": "string"
                                  },
                                  "params": {
                                    "additionalProperties": true,
                                    "description": "Validation parameters providing context for the error",
                                    "example": {
                                      "expectedType": "string",
                                      "receivedType": "number"
                                    },
                                    "type": "object"
                                  },
                                  "path": {
                                    "description": "JSON path to the field that failed validation",
                                    "example": "/username",
                                    "pattern": "^/",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "code",
                                  "path",
                                  "params"
                                ],
                                "type": "object"
                              },
                              "minItems": 1,
                              "type": "array"
                            }
                          },
                          "required": [
                            "validation_errors"
                          ],
                          "type": "object"
                        },
                        "status": {
                          "description": "HTTP status code for validation errors",
                          "enum": [400]
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "description": "Validation error response extending the base error response",
                  "title": "Validation Error"
                }
              }
            }
          },
          "401": {
            "description": "Role Authentication Failed",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "code": {
                          "enum": [
                            "unauthorized"
                          ]
                        },
                        "status": {
                          "enum": [403]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Role Not Found",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "code": {
                          "enum": [
                            "role.not.found"
                          ]
                        },
                        "status": {
                          "enum": [404]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Role Update Failed",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "code": {
                          "enum": [
                            "role.update.failed"
                          ]
                        },
                        "status": {
                          "enum": [500]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "roles"
        ],
        "parameters": [
          {
            "schema": {
              "format": "uuid",
              "type": "string"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Role Retrieved Successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard response envelope containing event information and data payload",
                      "properties": {
                        "data": {
                          "description": "Response data payload containing the actual response content",
                          "type": "object"
                        },
                        "event": {
                          "additionalProperties": false,
                          "description": "Event information describing the operation performed",
                          "properties": {
                            "code": {
                              "description": "Event code identifying the specific operation that occurred",
                              "pattern": "^[a-z]+\\.[a-z_]+$",
                              "type": "string"
                            },
                            "correlationId": {
                              "description": "Unique correlation ID linking this event to the original request for tracing",
                              "example": "123e4567-e89b-12d3-a456-426614174000",
                              "format": "uuid",
                              "type": "string"
                            },
                            "metadata": {
                              "additionalProperties": true,
                              "description": "Event-specific metadata providing additional context",
                              "example": {
                                "field": "value"
                              },
                              "type": "object"
                            },
                            "payload": {
                              "additionalProperties": true,
                              "description": "Event payload containing detailed information about the event",
                              "example": {
                                "field": "value"
                              },
                              "type": "object"
                            }
                          },
                          "required": [
                            "code"
                          ],
                          "type": "object"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the response was generated",
                          "example": 1690000000,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "event",
                        "timestamp"
                      ],
                      "title": "Reply Envelope",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "data": {
                          "additionalProperties": false,
                          "properties": {
                            "role": {
                              "additionalProperties": false,
                              "description": "Role entity defining workspace permissions",
                              "properties": {
                                "assistants": {
                                  "description": "Assistant-specific permissions associated with the role",
                                  "items": {
                                    "additionalProperties": false,
                                    "properties": {
                                      "id": {
                                        "format": "uuid",
                                        "type": "string"
                                      },
                                      "scopes": {
                                        "items": {
                                          "enum": [
                                            "files",
                                            "messages"
                                          ],
                                          "type": "string"
                                        },
                                        "type": "array"
                                      }
                                    },
                                    "required": [
                                      "id",
                                      "scopes"
                                    ],
                                    "type": "object"
                                  },
                                  "type": "array"
                                },
                                "createdAt": {
                                  "description": "UNIX timestamp (ms) when the role was created",
                                  "example": 1726282800000,
                                  "format": "int64",
                                  "minimum": 0,
                                  "type": "number"
                                },
                                "createdBy": {
                                  "description": "UUID of the user or key that created the role",
                                  "format": "uuid",
                                  "type": "string"
                                },
                                "id": {
                                  "description": "Unique identifier for the role",
                                  "example": "550e8400-e29b-41d4-a716-446655440000",
                                  "format": "uuid",
                                  "type": "string"
                                },
                                "name": {
                                  "description": "Display name for the role",
                                  "example": "Content Manager",
                                  "type": "string"
                                },
                                "object": {
                                  "description": "Object type identifier",
                                  "type": "string",
                                  "enum": [
                                    "role"
                                  ]
                                },
                                "organization": {
                                  "description": "UUID of the organization that owns the role",
                                  "format": "uuid",
                                  "type": "string"
                                },
                                "scopes": {
                                  "description": "Global scopes granted by the role",
                                  "items": {
                                    "enum": [
                                      "owner",
                                      "organization",
                                      "assistants",
                                      "roles",
                                      "members",
                                      "logs",
                                      "apiKeys",
                                      "invitations"
                                    ],
                                    "type": "string"
                                  },
                                  "type": "array"
                                }
                              },
                              "required": [
                                "id",
                                "name",
                                "object",
                                "organization",
                                "createdAt",
                                "createdBy"
                              ],
                              "title": "Role",
                              "type": "object"
                            }
                          },
                          "required": [
                            "role"
                          ],
                          "type": "object"
                        },
                        "event": {
                          "properties": {
                            "code": {
                              "enum": [
                                "role.retrieved"
                              ]
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Validation Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "description": "Validation error response with detailed field-level errors",
                      "properties": {
                        "code": {
                          "description": "Fixed error code for validation errors",
                          "enum": [
                            "validation.error"
                          ]
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Validation-specific metadata containing detailed error information",
                          "properties": {
                            "validation_errors": {
                              "description": "Array of field-level validation errors",
                              "items": {
                                "additionalProperties": false,
                                "description": "Individual field validation error",
                                "properties": {
                                  "code": {
                                    "description": "Specific validation error code for this field",
                                    "example": "required",
                                    "type": "string"
                                  },
                                  "params": {
                                    "additionalProperties": true,
                                    "description": "Validation parameters providing context for the error",
                                    "example": {
                                      "expectedType": "string",
                                      "receivedType": "number"
                                    },
                                    "type": "object"
                                  },
                                  "path": {
                                    "description": "JSON path to the field that failed validation",
                                    "example": "/username",
                                    "pattern": "^/",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "code",
                                  "path",
                                  "params"
                                ],
                                "type": "object"
                              },
                              "minItems": 1,
                              "type": "array"
                            }
                          },
                          "required": [
                            "validation_errors"
                          ],
                          "type": "object"
                        },
                        "status": {
                          "description": "HTTP status code for validation errors",
                          "enum": [400]
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "description": "Validation error response extending the base error response",
                  "title": "Validation Error"
                }
              }
            }
          },
          "401": {
            "description": "Role Authentication Failed",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "code": {
                          "enum": [
                            "unauthorized"
                          ]
                        },
                        "status": {
                          "enum": [403]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Role Not Found",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "code": {
                          "enum": [
                            "role.not.found"
                          ]
                        },
                        "status": {
                          "enum": [404]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Role Retrieve Failed",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "code": {
                          "enum": [
                            "role.retrieve.failed"
                          ]
                        },
                        "status": {
                          "enum": [500]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/roles/list": {
      "post": {
        "tags": [
          "roles"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "additionalProperties": false,
                "description": "Request body for listing roles with pagination",
                "properties": {
                  "limit": {
                    "description": "Maximum number of roles to return",
                    "example": 10,
                    "minimum": 1,
                    "type": "integer"
                  },
                  "order": {
                    "description": "Sort order for the results",
                    "enum": [
                      "asc",
                      "desc"
                    ],
                    "example": "asc",
                    "type": "string"
                  },
                  "page": {
                    "description": "Page number for pagination (1-based)",
                    "example": 1,
                    "minimum": 1,
                    "type": "integer"
                  },
                  "userId": {
                    "description": "Filter roles created by a specific user",
                    "format": "uuid",
                    "type": "string"
                  }
                },
                "title": "List Roles Body",
                "type": "object"
              }
            }
          },
          "description": "Request body for listing roles with pagination"
        },
        "responses": {
          "200": {
            "description": "Roles Listed Successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard response envelope containing event information and data payload",
                      "properties": {
                        "data": {
                          "description": "Response data payload containing the actual response content",
                          "type": "object"
                        },
                        "event": {
                          "additionalProperties": false,
                          "description": "Event information describing the operation performed",
                          "properties": {
                            "code": {
                              "description": "Event code identifying the specific operation that occurred",
                              "pattern": "^[a-z]+\\.[a-z_]+$",
                              "type": "string"
                            },
                            "correlationId": {
                              "description": "Unique correlation ID linking this event to the original request for tracing",
                              "example": "123e4567-e89b-12d3-a456-426614174000",
                              "format": "uuid",
                              "type": "string"
                            },
                            "metadata": {
                              "additionalProperties": true,
                              "description": "Event-specific metadata providing additional context",
                              "example": {
                                "field": "value"
                              },
                              "type": "object"
                            },
                            "payload": {
                              "additionalProperties": true,
                              "description": "Event payload containing detailed information about the event",
                              "example": {
                                "field": "value"
                              },
                              "type": "object"
                            }
                          },
                          "required": [
                            "code"
                          ],
                          "type": "object"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the response was generated",
                          "example": 1690000000,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "event",
                        "timestamp"
                      ],
                      "title": "Reply Envelope",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "data": {
                          "additionalProperties": false,
                          "properties": {
                            "roles": {
                              "items": {
                                "additionalProperties": false,
                                "description": "Role entity defining workspace permissions",
                                "properties": {
                                  "assistants": {
                                    "description": "Assistant-specific permissions associated with the role",
                                    "items": {
                                      "additionalProperties": false,
                                      "properties": {
                                        "id": {
                                          "format": "uuid",
                                          "type": "string"
                                        },
                                        "scopes": {
                                          "items": {
                                            "enum": [
                                              "files",
                                              "messages"
                                            ],
                                            "type": "string"
                                          },
                                          "type": "array"
                                        }
                                      },
                                      "required": [
                                        "id",
                                        "scopes"
                                      ],
                                      "type": "object"
                                    },
                                    "type": "array"
                                  },
                                  "createdAt": {
                                    "description": "UNIX timestamp (ms) when the role was created",
                                    "example": 1726282800000,
                                    "format": "int64",
                                    "minimum": 0,
                                    "type": "number"
                                  },
                                  "createdBy": {
                                    "description": "UUID of the user or key that created the role",
                                    "format": "uuid",
                                    "type": "string"
                                  },
                                  "id": {
                                    "description": "Unique identifier for the role",
                                    "example": "550e8400-e29b-41d4-a716-446655440000",
                                    "format": "uuid",
                                    "type": "string"
                                  },
                                  "name": {
                                    "description": "Display name for the role",
                                    "example": "Content Manager",
                                    "type": "string"
                                  },
                                  "object": {
                                    "description": "Object type identifier",
                                    "type": "string",
                                    "enum": [
                                      "role"
                                    ]
                                  },
                                  "organization": {
                                    "description": "UUID of the organization that owns the role",
                                    "format": "uuid",
                                    "type": "string"
                                  },
                                  "scopes": {
                                    "description": "Global scopes granted by the role",
                                    "items": {
                                      "enum": [
                                        "owner",
                                        "organization",
                                        "assistants",
                                        "roles",
                                        "members",
                                        "logs",
                                        "apiKeys",
                                        "invitations"
                                      ],
                                      "type": "string"
                                    },
                                    "type": "array"
                                  }
                                },
                                "required": [
                                  "id",
                                  "name",
                                  "object",
                                  "organization",
                                  "createdAt",
                                  "createdBy"
                                ],
                                "title": "Role",
                                "type": "object"
                              },
                              "type": "array"
                            }
                          },
                          "required": [
                            "roles"
                          ],
                          "type": "object"
                        },
                        "event": {
                          "properties": {
                            "code": {
                              "enum": [
                                "roles.listed"
                              ]
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Validation Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "description": "Validation error response with detailed field-level errors",
                      "properties": {
                        "code": {
                          "description": "Fixed error code for validation errors",
                          "enum": [
                            "validation.error"
                          ]
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Validation-specific metadata containing detailed error information",
                          "properties": {
                            "validation_errors": {
                              "description": "Array of field-level validation errors",
                              "items": {
                                "additionalProperties": false,
                                "description": "Individual field validation error",
                                "properties": {
                                  "code": {
                                    "description": "Specific validation error code for this field",
                                    "example": "required",
                                    "type": "string"
                                  },
                                  "params": {
                                    "additionalProperties": true,
                                    "description": "Validation parameters providing context for the error",
                                    "example": {
                                      "expectedType": "string",
                                      "receivedType": "number"
                                    },
                                    "type": "object"
                                  },
                                  "path": {
                                    "description": "JSON path to the field that failed validation",
                                    "example": "/username",
                                    "pattern": "^/",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "code",
                                  "path",
                                  "params"
                                ],
                                "type": "object"
                              },
                              "minItems": 1,
                              "type": "array"
                            }
                          },
                          "required": [
                            "validation_errors"
                          ],
                          "type": "object"
                        },
                        "status": {
                          "description": "HTTP status code for validation errors",
                          "enum": [400]
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "description": "Validation error response extending the base error response",
                  "title": "Validation Error"
                }
              }
            }
          },
          "401": {
            "description": "Role Authentication Failed",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "code": {
                          "enum": [
                            "unauthorized"
                          ]
                        },
                        "status": {
                          "enum": [403]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Role List Failed",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "code": {
                          "enum": [
                            "role.list.failed"
                          ]
                        },
                        "status": {
                          "enum": [500]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/invitations/new": {
      "post": {
        "tags": [
          "invitations"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "additionalProperties": false,
                "description": "Request body for creating a new invitation",
                "properties": {
                  "expiresIn": {
                    "description": "Expiration time in seconds from creation (optional)",
                    "example": 86400,
                    "minimum": 1,
                    "type": "number"
                  },
                  "maxUsage": {
                    "description": "Maximum number of times this invitation can be used (optional)",
                    "example": 1,
                    "minimum": 1,
                    "type": "number"
                  },
                  "roles": {
                    "description": "Array of role IDs to assign to the invited user",
                    "example": [
                      "550e8400-e29b-41d4-a716-446655440000"
                    ],
                    "items": {
                      "format": "uuid",
                      "type": "string"
                    },
                    "type": "array"
                  }
                },
                "required": [],
                "title": "Create Invitation Body",
                "type": "object"
              }
            }
          },
          "description": "Request body for creating a new invitation"
        },
        "responses": {
          "200": {
            "description": "Invitation Created Successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard response envelope containing event information and data payload",
                      "properties": {
                        "data": {
                          "description": "Response data payload containing the actual response content",
                          "type": "object"
                        },
                        "event": {
                          "additionalProperties": false,
                          "description": "Event information describing the operation performed",
                          "properties": {
                            "code": {
                              "description": "Event code identifying the specific operation that occurred",
                              "pattern": "^[a-z]+\\.[a-z_]+$",
                              "type": "string"
                            },
                            "correlationId": {
                              "description": "Unique correlation ID linking this event to the original request for tracing",
                              "example": "123e4567-e89b-12d3-a456-426614174000",
                              "format": "uuid",
                              "type": "string"
                            },
                            "metadata": {
                              "additionalProperties": true,
                              "description": "Event-specific metadata providing additional context",
                              "example": {
                                "field": "value"
                              },
                              "type": "object"
                            },
                            "payload": {
                              "additionalProperties": true,
                              "description": "Event payload containing detailed information about the event",
                              "example": {
                                "field": "value"
                              },
                              "type": "object"
                            }
                          },
                          "required": [
                            "code"
                          ],
                          "type": "object"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the response was generated",
                          "example": 1690000000,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "event",
                        "timestamp"
                      ],
                      "title": "Reply Envelope",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "data": {
                          "additionalProperties": false,
                          "properties": {
                            "invitation": {
                              "additionalProperties": false,
                              "description": "Invitation entity for inviting users to join an organization",
                              "properties": {
                                "createdAt": {
                                  "description": "UNIX timestamp when the invitation was created",
                                  "example": 1726282800,
                                  "format": "int64",
                                  "minimum": 0,
                                  "type": "number"
                                },
                                "createdBy": {
                                  "description": "UUID of the user who created this invitation",
                                  "example": "123e4567-e89b-12d3-a456-426614174000",
                                  "format": "uuid",
                                  "type": "string"
                                },
                                "expiresAt": {
                                  "description": "Expiration timestamp, or null if no expiration",
                                  "example": 1726369200,
                                  "format": "int64",
                                  "minimum": 0,
                                  "nullable": true,
                                  "type": "number"
                                },
                                "id": {
                                  "description": "Unique identifier for the invitation",
                                  "example": "456f7890-f01e-23g4-b567-537725285111",
                                  "format": "uuid",
                                  "type": "string"
                                },
                                "maxUsage": {
                                  "default": 1,
                                  "description": "Maximum number of times this invitation can be used",
                                  "example": 1,
                                  "maximum": 100,
                                  "minimum": 1,
                                  "type": "integer"
                                },
                                "object": {
                                  "description": "Object type identifier for this entity",
                                  "example": "invitation",
                                  "type": "string",
                                  "enum": [
                                    "invitation"
                                  ]
                                },
                                "roles": {
                                  "description": "Array of role IDs that will be assigned to the invited user",
                                  "example": [
                                    "user-role-uuid",
                                    "viewer-role-uuid"
                                  ],
                                  "items": {
                                    "description": "UUID of a role to be assigned",
                                    "format": "uuid",
                                    "type": "string"
                                  },
                                  "type": "array"
                                },
                                "status": {
                                  "description": "Current status of the invitation",
                                  "enum": [
                                    "pending",
                                    "accepted",
                                    "rejected",
                                    "expired",
                                    "cancelled"
                                  ],
                                  "example": "pending",
                                  "type": "string"
                                },
                                "usageCount": {
                                  "default": 0,
                                  "description": "Number of times this invitation has been used",
                                  "example": 0,
                                  "minimum": 0,
                                  "type": "integer"
                                },
                                "usedBy": {
                                  "default": [],
                                  "description": "Array of user IDs who have used this invitation",
                                  "example": [],
                                  "items": {
                                    "description": "UUID of a user who used this invitation",
                                    "format": "uuid",
                                    "type": "string"
                                  },
                                  "type": "array"
                                }
                              },
                              "required": [
                                "id",
                                "object",
                                "organization",
                                "maxUsage",
                                "roles",
                                "status",
                                "usageCount",
                                "usedBy",
                                "createdAt",
                                "createdBy"
                              ],
                              "title": "Invitation",
                              "type": "object"
                            }
                          },
                          "required": [
                            "invitation"
                          ],
                          "type": "object"
                        },
                        "event": {
                          "properties": {
                            "code": {
                              "enum": [
                                "invitation.created"
                              ]
                            }
                          },
                          "type": "object"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Validation Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "description": "Validation error response with detailed field-level errors",
                      "properties": {
                        "code": {
                          "description": "Fixed error code for validation errors",
                          "enum": [
                            "validation.error"
                          ]
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Validation-specific metadata containing detailed error information",
                          "properties": {
                            "validation_errors": {
                              "description": "Array of field-level validation errors",
                              "items": {
                                "additionalProperties": false,
                                "description": "Individual field validation error",
                                "properties": {
                                  "code": {
                                    "description": "Specific validation error code for this field",
                                    "example": "required",
                                    "type": "string"
                                  },
                                  "params": {
                                    "additionalProperties": true,
                                    "description": "Validation parameters providing context for the error",
                                    "example": {
                                      "expectedType": "string",
                                      "receivedType": "number"
                                    },
                                    "type": "object"
                                  },
                                  "path": {
                                    "description": "JSON path to the field that failed validation",
                                    "example": "/username",
                                    "pattern": "^/",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "code",
                                  "path",
                                  "params"
                                ],
                                "type": "object"
                              },
                              "minItems": 1,
                              "type": "array"
                            }
                          },
                          "required": [
                            "validation_errors"
                          ],
                          "type": "object"
                        },
                        "status": {
                          "description": "HTTP status code for validation errors",
                          "enum": [400]
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "description": "Validation error response extending the base error response",
                  "title": "Validation Error"
                }
              }
            }
          },
          "401": {
            "description": "Invitation Authentication Failed",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "code": {
                          "enum": [
                            "unauthorized"
                          ]
                        },
                        "status": {
                          "enum": [403]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Invitation Create Failed",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "code": {
                          "enum": [
                            "invitation.create.failed"
                          ]
                        },
                        "status": {
                          "enum": [500]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/invitations/{id}": {
      "delete": {
        "tags": [
          "invitations"
        ],
        "parameters": [
          {
            "schema": {
              "format": "uuid",
              "type": "string"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Invitation Deleted Successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard response envelope containing event information and data payload",
                      "properties": {
                        "data": {
                          "description": "Response data payload containing the actual response content",
                          "type": "object"
                        },
                        "event": {
                          "additionalProperties": false,
                          "description": "Event information describing the operation performed",
                          "properties": {
                            "code": {
                              "description": "Event code identifying the specific operation that occurred",
                              "pattern": "^[a-z]+\\.[a-z_]+$",
                              "type": "string"
                            },
                            "correlationId": {
                              "description": "Unique correlation ID linking this event to the original request for tracing",
                              "example": "123e4567-e89b-12d3-a456-426614174000",
                              "format": "uuid",
                              "type": "string"
                            },
                            "metadata": {
                              "additionalProperties": true,
                              "description": "Event-specific metadata providing additional context",
                              "example": {
                                "field": "value"
                              },
                              "type": "object"
                            },
                            "payload": {
                              "additionalProperties": true,
                              "description": "Event payload containing detailed information about the event",
                              "example": {
                                "field": "value"
                              },
                              "type": "object"
                            }
                          },
                          "required": [
                            "code"
                          ],
                          "type": "object"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the response was generated",
                          "example": 1690000000,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "event",
                        "timestamp"
                      ],
                      "title": "Reply Envelope",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "data": {
                          "additionalProperties": false,
                          "description": "Simple success response for operations that do not return data",
                          "properties": {
                            "success": {
                              "description": "Boolean flag indicating the operation completed successfully",
                              "example": true,
                              "type": "boolean",
                              "enum": [true]
                            }
                          },
                          "required": [
                            "success"
                          ],
                          "title": "Success Response",
                          "type": "object"
                        },
                        "event": {
                          "properties": {
                            "code": {
                              "enum": [
                                "invitation.deleted"
                              ]
                            }
                          },
                          "type": "object"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Validation Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "description": "Validation error response with detailed field-level errors",
                      "properties": {
                        "code": {
                          "description": "Fixed error code for validation errors",
                          "enum": [
                            "validation.error"
                          ]
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Validation-specific metadata containing detailed error information",
                          "properties": {
                            "validation_errors": {
                              "description": "Array of field-level validation errors",
                              "items": {
                                "additionalProperties": false,
                                "description": "Individual field validation error",
                                "properties": {
                                  "code": {
                                    "description": "Specific validation error code for this field",
                                    "example": "required",
                                    "type": "string"
                                  },
                                  "params": {
                                    "additionalProperties": true,
                                    "description": "Validation parameters providing context for the error",
                                    "example": {
                                      "expectedType": "string",
                                      "receivedType": "number"
                                    },
                                    "type": "object"
                                  },
                                  "path": {
                                    "description": "JSON path to the field that failed validation",
                                    "example": "/username",
                                    "pattern": "^/",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "code",
                                  "path",
                                  "params"
                                ],
                                "type": "object"
                              },
                              "minItems": 1,
                              "type": "array"
                            }
                          },
                          "required": [
                            "validation_errors"
                          ],
                          "type": "object"
                        },
                        "status": {
                          "description": "HTTP status code for validation errors",
                          "enum": [400]
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "description": "Validation error response extending the base error response",
                  "title": "Validation Error"
                }
              }
            }
          },
          "401": {
            "description": "Invitation Authentication Failed",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "code": {
                          "enum": [
                            "unauthorized"
                          ]
                        },
                        "status": {
                          "enum": [403]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Invitation Not Found",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "code": {
                          "enum": [
                            "invitation.not.found"
                          ]
                        },
                        "status": {
                          "enum": [404]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Invitation Delete Failed",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "code": {
                          "enum": [
                            "invitation.delete.failed"
                          ]
                        },
                        "status": {
                          "enum": [500]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "invitations"
        ],
        "parameters": [
          {
            "schema": {
              "format": "uuid",
              "type": "string"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Invitation Retrieved Successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard response envelope containing event information and data payload",
                      "properties": {
                        "data": {
                          "description": "Response data payload containing the actual response content",
                          "type": "object"
                        },
                        "event": {
                          "additionalProperties": false,
                          "description": "Event information describing the operation performed",
                          "properties": {
                            "code": {
                              "description": "Event code identifying the specific operation that occurred",
                              "pattern": "^[a-z]+\\.[a-z_]+$",
                              "type": "string"
                            },
                            "correlationId": {
                              "description": "Unique correlation ID linking this event to the original request for tracing",
                              "example": "123e4567-e89b-12d3-a456-426614174000",
                              "format": "uuid",
                              "type": "string"
                            },
                            "metadata": {
                              "additionalProperties": true,
                              "description": "Event-specific metadata providing additional context",
                              "example": {
                                "field": "value"
                              },
                              "type": "object"
                            },
                            "payload": {
                              "additionalProperties": true,
                              "description": "Event payload containing detailed information about the event",
                              "example": {
                                "field": "value"
                              },
                              "type": "object"
                            }
                          },
                          "required": [
                            "code"
                          ],
                          "type": "object"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the response was generated",
                          "example": 1690000000,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "event",
                        "timestamp"
                      ],
                      "title": "Reply Envelope",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "data": {
                          "additionalProperties": false,
                          "properties": {
                            "invitation": {
                              "additionalProperties": false,
                              "description": "Invitation entity for inviting users to join an organization",
                              "properties": {
                                "createdAt": {
                                  "description": "UNIX timestamp when the invitation was created",
                                  "example": 1726282800,
                                  "format": "int64",
                                  "minimum": 0,
                                  "type": "number"
                                },
                                "createdBy": {
                                  "description": "UUID of the user who created this invitation",
                                  "example": "123e4567-e89b-12d3-a456-426614174000",
                                  "format": "uuid",
                                  "type": "string"
                                },
                                "expiresAt": {
                                  "description": "Expiration timestamp, or null if no expiration",
                                  "example": 1726369200,
                                  "format": "int64",
                                  "minimum": 0,
                                  "nullable": true,
                                  "type": "number"
                                },
                                "id": {
                                  "description": "Unique identifier for the invitation",
                                  "example": "456f7890-f01e-23g4-b567-537725285111",
                                  "format": "uuid",
                                  "type": "string"
                                },
                                "maxUsage": {
                                  "default": 1,
                                  "description": "Maximum number of times this invitation can be used",
                                  "example": 1,
                                  "maximum": 100,
                                  "minimum": 1,
                                  "type": "integer"
                                },
                                "object": {
                                  "description": "Object type identifier for this entity",
                                  "example": "invitation",
                                  "type": "string",
                                  "enum": [
                                    "invitation"
                                  ]
                                },
                                "roles": {
                                  "description": "Array of role IDs that will be assigned to the invited user",
                                  "example": [
                                    "user-role-uuid",
                                    "viewer-role-uuid"
                                  ],
                                  "items": {
                                    "description": "UUID of a role to be assigned",
                                    "format": "uuid",
                                    "type": "string"
                                  },
                                  "type": "array"
                                },
                                "status": {
                                  "description": "Current status of the invitation",
                                  "enum": [
                                    "pending",
                                    "accepted",
                                    "rejected",
                                    "expired",
                                    "cancelled"
                                  ],
                                  "example": "pending",
                                  "type": "string"
                                },
                                "usageCount": {
                                  "default": 0,
                                  "description": "Number of times this invitation has been used",
                                  "example": 0,
                                  "minimum": 0,
                                  "type": "integer"
                                },
                                "usedBy": {
                                  "default": [],
                                  "description": "Array of user IDs who have used this invitation",
                                  "example": [],
                                  "items": {
                                    "description": "UUID of a user who used this invitation",
                                    "format": "uuid",
                                    "type": "string"
                                  },
                                  "type": "array"
                                }
                              },
                              "required": [
                                "id",
                                "object",
                                "organization",
                                "maxUsage",
                                "roles",
                                "status",
                                "usageCount",
                                "usedBy",
                                "createdAt",
                                "createdBy"
                              ],
                              "title": "Invitation",
                              "type": "object"
                            }
                          },
                          "required": [
                            "invitation"
                          ],
                          "type": "object"
                        },
                        "event": {
                          "properties": {
                            "code": {
                              "enum": [
                                "invitation.retrieved"
                              ]
                            }
                          },
                          "type": "object"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Validation Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "description": "Validation error response with detailed field-level errors",
                      "properties": {
                        "code": {
                          "description": "Fixed error code for validation errors",
                          "enum": [
                            "validation.error"
                          ]
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Validation-specific metadata containing detailed error information",
                          "properties": {
                            "validation_errors": {
                              "description": "Array of field-level validation errors",
                              "items": {
                                "additionalProperties": false,
                                "description": "Individual field validation error",
                                "properties": {
                                  "code": {
                                    "description": "Specific validation error code for this field",
                                    "example": "required",
                                    "type": "string"
                                  },
                                  "params": {
                                    "additionalProperties": true,
                                    "description": "Validation parameters providing context for the error",
                                    "example": {
                                      "expectedType": "string",
                                      "receivedType": "number"
                                    },
                                    "type": "object"
                                  },
                                  "path": {
                                    "description": "JSON path to the field that failed validation",
                                    "example": "/username",
                                    "pattern": "^/",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "code",
                                  "path",
                                  "params"
                                ],
                                "type": "object"
                              },
                              "minItems": 1,
                              "type": "array"
                            }
                          },
                          "required": [
                            "validation_errors"
                          ],
                          "type": "object"
                        },
                        "status": {
                          "description": "HTTP status code for validation errors",
                          "enum": [400]
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "description": "Validation error response extending the base error response",
                  "title": "Validation Error"
                }
              }
            }
          },
          "401": {
            "description": "Invitation Authentication Failed",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "code": {
                          "enum": [
                            "unauthorized"
                          ]
                        },
                        "status": {
                          "enum": [403]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Invitation Not Found",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "code": {
                          "enum": [
                            "invitation.not.found"
                          ]
                        },
                        "status": {
                          "enum": [404]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Invitation Retrieve Failed",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "code": {
                          "enum": [
                            "invitation.retrieve.failed"
                          ]
                        },
                        "status": {
                          "enum": [500]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/invitations/list": {
      "post": {
        "tags": [
          "invitations"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "additionalProperties": false,
                "description": "Request body for listing invitations with filtering and pagination",
                "properties": {
                  "date": {
                    "additionalProperties": false,
                    "description": "Date range filter for invitation creation",
                    "properties": {
                      "end": {
                        "anyOf": [
                          {
                            "type": "string"
                          },
                          {
                            "type": "number"
                          }
                        ],
                        "description": "End date for filtering (ISO string, timestamp, or Date)"
                      },
                      "start": {
                        "anyOf": [
                          {
                            "type": "string"
                          },
                          {
                            "type": "number"
                          }
                        ],
                        "description": "Start date for filtering (ISO string, timestamp, or Date)"
                      }
                    },
                    "type": "object"
                  },
                  "limit": {
                    "default": 10,
                    "description": "Maximum number of invitations to return per page",
                    "example": 20,
                    "maximum": 100,
                    "minimum": 1,
                    "type": "integer"
                  },
                  "order": {
                    "default": "desc",
                    "description": "Sort order for the results",
                    "enum": [
                      "asc",
                      "desc"
                    ],
                    "example": "desc",
                    "type": "string"
                  },
                  "organizationId": {
                    "description": "UUID of the organization to list invitations for",
                    "example": "789e0123-e45b-67c8-d901-234567890abc",
                    "format": "uuid",
                    "type": "string"
                  },
                  "page": {
                    "default": 1,
                    "description": "Page number for pagination (1-based)",
                    "example": 1,
                    "minimum": 1,
                    "type": "integer"
                  },
                  "userId": {
                    "description": "UUID of the user to filter invitations by (optional)",
                    "example": "123e4567-e89b-12d3-a456-426614174000",
                    "format": "uuid",
                    "type": "string"
                  }
                },
                "required": [],
                "title": "List Invitations Body",
                "type": "object"
              }
            }
          },
          "description": "Request body for listing invitations with filtering and pagination"
        },
        "responses": {
          "200": {
            "description": "Invitations Listed Successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard response envelope containing event information and data payload",
                      "properties": {
                        "data": {
                          "description": "Response data payload containing the actual response content",
                          "type": "object"
                        },
                        "event": {
                          "additionalProperties": false,
                          "description": "Event information describing the operation performed",
                          "properties": {
                            "code": {
                              "description": "Event code identifying the specific operation that occurred",
                              "pattern": "^[a-z]+\\.[a-z_]+$",
                              "type": "string"
                            },
                            "correlationId": {
                              "description": "Unique correlation ID linking this event to the original request for tracing",
                              "example": "123e4567-e89b-12d3-a456-426614174000",
                              "format": "uuid",
                              "type": "string"
                            },
                            "metadata": {
                              "additionalProperties": true,
                              "description": "Event-specific metadata providing additional context",
                              "example": {
                                "field": "value"
                              },
                              "type": "object"
                            },
                            "payload": {
                              "additionalProperties": true,
                              "description": "Event payload containing detailed information about the event",
                              "example": {
                                "field": "value"
                              },
                              "type": "object"
                            }
                          },
                          "required": [
                            "code"
                          ],
                          "type": "object"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the response was generated",
                          "example": 1690000000,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "event",
                        "timestamp"
                      ],
                      "title": "Reply Envelope",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "data": {
                          "additionalProperties": false,
                          "properties": {
                            "invitations": {
                              "items": {
                                "additionalProperties": false,
                                "description": "Invitation entity for inviting users to join an organization",
                                "properties": {
                                  "createdAt": {
                                    "description": "UNIX timestamp when the invitation was created",
                                    "example": 1726282800,
                                    "format": "int64",
                                    "minimum": 0,
                                    "type": "number"
                                  },
                                  "createdBy": {
                                    "description": "UUID of the user who created this invitation",
                                    "example": "123e4567-e89b-12d3-a456-426614174000",
                                    "format": "uuid",
                                    "type": "string"
                                  },
                                  "expiresAt": {
                                    "description": "Expiration timestamp, or null if no expiration",
                                    "example": 1726369200,
                                    "format": "int64",
                                    "minimum": 0,
                                    "nullable": true,
                                    "type": "number"
                                  },
                                  "id": {
                                    "description": "Unique identifier for the invitation",
                                    "example": "456f7890-f01e-23g4-b567-537725285111",
                                    "format": "uuid",
                                    "type": "string"
                                  },
                                  "maxUsage": {
                                    "default": 1,
                                    "description": "Maximum number of times this invitation can be used",
                                    "example": 1,
                                    "maximum": 100,
                                    "minimum": 1,
                                    "type": "integer"
                                  },
                                  "object": {
                                    "description": "Object type identifier for this entity",
                                    "example": "invitation",
                                    "type": "string",
                                    "enum": [
                                      "invitation"
                                    ]
                                  },
                                  "roles": {
                                    "description": "Array of role IDs that will be assigned to the invited user",
                                    "example": [
                                      "user-role-uuid",
                                      "viewer-role-uuid"
                                    ],
                                    "items": {
                                      "description": "UUID of a role to be assigned",
                                      "format": "uuid",
                                      "type": "string"
                                    },
                                    "type": "array"
                                  },
                                  "status": {
                                    "description": "Current status of the invitation",
                                    "enum": [
                                      "pending",
                                      "accepted",
                                      "rejected",
                                      "expired",
                                      "cancelled"
                                    ],
                                    "example": "pending",
                                    "type": "string"
                                  },
                                  "usageCount": {
                                    "default": 0,
                                    "description": "Number of times this invitation has been used",
                                    "example": 0,
                                    "minimum": 0,
                                    "type": "integer"
                                  },
                                  "usedBy": {
                                    "default": [],
                                    "description": "Array of user IDs who have used this invitation",
                                    "example": [],
                                    "items": {
                                      "description": "UUID of a user who used this invitation",
                                      "format": "uuid",
                                      "type": "string"
                                    },
                                    "type": "array"
                                  }
                                },
                                "required": [
                                  "id",
                                  "object",
                                  "organization",
                                  "maxUsage",
                                  "roles",
                                  "status",
                                  "usageCount",
                                  "usedBy",
                                  "createdAt",
                                  "createdBy"
                                ],
                                "title": "Invitation",
                                "type": "object"
                              },
                              "type": "array"
                            }
                          },
                          "required": [
                            "invitations"
                          ],
                          "type": "object"
                        },
                        "event": {
                          "properties": {
                            "code": {
                              "enum": [
                                "invitations.listed"
                              ]
                            }
                          },
                          "type": "object"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Validation Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "description": "Validation error response with detailed field-level errors",
                      "properties": {
                        "code": {
                          "description": "Fixed error code for validation errors",
                          "enum": [
                            "validation.error"
                          ]
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Validation-specific metadata containing detailed error information",
                          "properties": {
                            "validation_errors": {
                              "description": "Array of field-level validation errors",
                              "items": {
                                "additionalProperties": false,
                                "description": "Individual field validation error",
                                "properties": {
                                  "code": {
                                    "description": "Specific validation error code for this field",
                                    "example": "required",
                                    "type": "string"
                                  },
                                  "params": {
                                    "additionalProperties": true,
                                    "description": "Validation parameters providing context for the error",
                                    "example": {
                                      "expectedType": "string",
                                      "receivedType": "number"
                                    },
                                    "type": "object"
                                  },
                                  "path": {
                                    "description": "JSON path to the field that failed validation",
                                    "example": "/username",
                                    "pattern": "^/",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "code",
                                  "path",
                                  "params"
                                ],
                                "type": "object"
                              },
                              "minItems": 1,
                              "type": "array"
                            }
                          },
                          "required": [
                            "validation_errors"
                          ],
                          "type": "object"
                        },
                        "status": {
                          "description": "HTTP status code for validation errors",
                          "enum": [400]
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "description": "Validation error response extending the base error response",
                  "title": "Validation Error"
                }
              }
            }
          },
          "401": {
            "description": "Invitation Authentication Failed",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "code": {
                          "enum": [
                            "unauthorized"
                          ]
                        },
                        "status": {
                          "enum": [403]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Invitation List Failed",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "code": {
                          "enum": [
                            "invitation.list.failed"
                          ]
                        },
                        "status": {
                          "enum": [500]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/invitations/accept/{id}": {
      "get": {
        "tags": [
          "invitations"
        ],
        "parameters": [
          {
            "schema": {
              "format": "uuid",
              "type": "string"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Invitation Accepted Successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard response envelope containing event information and data payload",
                      "properties": {
                        "data": {
                          "description": "Response data payload containing the actual response content",
                          "type": "object"
                        },
                        "event": {
                          "additionalProperties": false,
                          "description": "Event information describing the operation performed",
                          "properties": {
                            "code": {
                              "description": "Event code identifying the specific operation that occurred",
                              "pattern": "^[a-z]+\\.[a-z_]+$",
                              "type": "string"
                            },
                            "correlationId": {
                              "description": "Unique correlation ID linking this event to the original request for tracing",
                              "example": "123e4567-e89b-12d3-a456-426614174000",
                              "format": "uuid",
                              "type": "string"
                            },
                            "metadata": {
                              "additionalProperties": true,
                              "description": "Event-specific metadata providing additional context",
                              "example": {
                                "field": "value"
                              },
                              "type": "object"
                            },
                            "payload": {
                              "additionalProperties": true,
                              "description": "Event payload containing detailed information about the event",
                              "example": {
                                "field": "value"
                              },
                              "type": "object"
                            }
                          },
                          "required": [
                            "code"
                          ],
                          "type": "object"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the response was generated",
                          "example": 1690000000,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "event",
                        "timestamp"
                      ],
                      "title": "Reply Envelope",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "data": {
                          "additionalProperties": false,
                          "description": "Simple success response for operations that do not return data",
                          "properties": {
                            "success": {
                              "description": "Boolean flag indicating the operation completed successfully",
                              "example": true,
                              "type": "boolean",
                              "enum": [true]
                            }
                          },
                          "required": [
                            "success"
                          ],
                          "title": "Success Response",
                          "type": "object"
                        },
                        "event": {
                          "properties": {
                            "code": {
                              "enum": [
                                "invitation.accepted"
                              ]
                            }
                          },
                          "type": "object"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Validation Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "description": "Validation error response with detailed field-level errors",
                      "properties": {
                        "code": {
                          "description": "Fixed error code for validation errors",
                          "enum": [
                            "validation.error"
                          ]
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Validation-specific metadata containing detailed error information",
                          "properties": {
                            "validation_errors": {
                              "description": "Array of field-level validation errors",
                              "items": {
                                "additionalProperties": false,
                                "description": "Individual field validation error",
                                "properties": {
                                  "code": {
                                    "description": "Specific validation error code for this field",
                                    "example": "required",
                                    "type": "string"
                                  },
                                  "params": {
                                    "additionalProperties": true,
                                    "description": "Validation parameters providing context for the error",
                                    "example": {
                                      "expectedType": "string",
                                      "receivedType": "number"
                                    },
                                    "type": "object"
                                  },
                                  "path": {
                                    "description": "JSON path to the field that failed validation",
                                    "example": "/username",
                                    "pattern": "^/",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "code",
                                  "path",
                                  "params"
                                ],
                                "type": "object"
                              },
                              "minItems": 1,
                              "type": "array"
                            }
                          },
                          "required": [
                            "validation_errors"
                          ],
                          "type": "object"
                        },
                        "status": {
                          "description": "HTTP status code for validation errors",
                          "enum": [400]
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "description": "Validation error response extending the base error response",
                  "title": "Validation Error"
                }
              }
            }
          },
          "401": {
            "description": "Invitation Authentication Failed",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "code": {
                          "enum": [
                            "unauthorized"
                          ]
                        },
                        "status": {
                          "enum": [403]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Invitation Not Found",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "code": {
                          "enum": [
                            "invitation.not.found"
                          ]
                        },
                        "status": {
                          "enum": [404]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Invitation Accept Failed",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "code": {
                          "enum": [
                            "invitation.accept.failed"
                          ]
                        },
                        "status": {
                          "enum": [500]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/uploads/text": {
      "post": {
        "tags": [
          "uploads"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "additionalProperties": false,
                "description": "Request body for uploading text content",
                "properties": {
                  "text": {
                    "description": "Text content to process",
                    "example": "This is the body of the document...",
                    "minLength": 1,
                    "type": "string"
                  }
                },
                "required": [
                  "text"
                ],
                "title": "Upload Text Body",
                "type": "object"
              }
            }
          },
          "required": true,
          "description": "Request body for uploading text content"
        },
        "responses": {
          "200": {
            "description": "Text uploaded successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard response envelope containing event information and data payload",
                      "properties": {
                        "data": {
                          "description": "Response data payload containing the actual response content",
                          "type": "object"
                        },
                        "event": {
                          "additionalProperties": false,
                          "description": "Event information describing the operation performed",
                          "properties": {
                            "code": {
                              "description": "Event code identifying the specific operation that occurred",
                              "pattern": "^[a-z]+\\.[a-z_]+$",
                              "type": "string"
                            },
                            "correlationId": {
                              "description": "Unique correlation ID linking this event to the original request for tracing",
                              "example": "123e4567-e89b-12d3-a456-426614174000",
                              "format": "uuid",
                              "type": "string"
                            },
                            "metadata": {
                              "additionalProperties": true,
                              "description": "Event-specific metadata providing additional context",
                              "example": {
                                "field": "value"
                              },
                              "type": "object"
                            },
                            "payload": {
                              "additionalProperties": true,
                              "description": "Event payload containing detailed information about the event",
                              "example": {
                                "field": "value"
                              },
                              "type": "object"
                            }
                          },
                          "required": [
                            "code"
                          ],
                          "type": "object"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the response was generated",
                          "example": 1690000000,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "event",
                        "timestamp"
                      ],
                      "title": "Reply Envelope",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "data": {
                          "additionalProperties": false,
                          "properties": {
                            "success": {
                              "type": "boolean",
                              "enum": [true]
                            }
                          },
                          "required": [
                            "success"
                          ],
                          "type": "object"
                        },
                        "event": {
                          "properties": {
                            "code": {
                              "enum": [
                                "uploads.text.uploaded"
                              ]
                            }
                          },
                          "type": "object"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Validation Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "description": "Validation error response with detailed field-level errors",
                      "properties": {
                        "code": {
                          "description": "Fixed error code for validation errors",
                          "enum": [
                            "validation.error"
                          ]
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Validation-specific metadata containing detailed error information",
                          "properties": {
                            "validation_errors": {
                              "description": "Array of field-level validation errors",
                              "items": {
                                "additionalProperties": false,
                                "description": "Individual field validation error",
                                "properties": {
                                  "code": {
                                    "description": "Specific validation error code for this field",
                                    "example": "required",
                                    "type": "string"
                                  },
                                  "params": {
                                    "additionalProperties": true,
                                    "description": "Validation parameters providing context for the error",
                                    "example": {
                                      "expectedType": "string",
                                      "receivedType": "number"
                                    },
                                    "type": "object"
                                  },
                                  "path": {
                                    "description": "JSON path to the field that failed validation",
                                    "example": "/username",
                                    "pattern": "^/",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "code",
                                  "path",
                                  "params"
                                ],
                                "type": "object"
                              },
                              "minItems": 1,
                              "type": "array"
                            }
                          },
                          "required": [
                            "validation_errors"
                          ],
                          "type": "object"
                        },
                        "status": {
                          "description": "HTTP status code for validation errors",
                          "enum": [400]
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "description": "Validation error response extending the base error response",
                  "title": "Validation Error"
                }
              }
            }
          },
          "401": {
            "description": "Upload Authentication Failed",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "code": {
                          "enum": [
                            "unauthorized"
                          ]
                        },
                        "status": {
                          "enum": [403]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Text Upload Failed",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "code": {
                          "enum": [
                            "upload.failed"
                          ]
                        },
                        "status": {
                          "enum": [500]
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/uploads/documents/{assistantId}": {
      "post": {
        "tags": [
          "uploads"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "additionalProperties": false,
                "description": "Request body for uploading document files via multipart/form-data",
                "properties": {
                  "files": {
                    "anyOf": [
                      {
                        "additionalProperties": false,
                        "description": "Single file object from multipart upload",
                        "properties": {
                          "encoding": {
                            "description": "File encoding type",
                            "example": "7bit",
                            "type": "string"
                          },
                          "fieldname": {
                            "description": "Form field name for the file",
                            "example": "files",
                            "type": "string"
                          },
                          "filename": {
                            "description": "Original filename of the uploaded file",
                            "example": "document.pdf",
                            "type": "string"
                          },
                          "mimetype": {
                            "description": "MIME type of the uploaded file",
                            "enum": [
                              "application/msword",
                              "application/vnd.openxmlformats-officedocument.wordprocessingml.document",
                              "application/vnd.ms-excel",
                              "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
                              "application/vnd.ms-powerpoint",
                              "application/vnd.openxmlformats-officedocument.presentationml.presentation",
                              "application/vnd.oasis.opendocument.text",
                              "text/plain",
                              "text/csv",
                              "text/markdown",
                              "application/pdf"
                            ],
                            "example": "application/pdf",
                            "type": "string"
                          }
                        },
                        "required": [
                          "fieldname",
                          "filename",
                          "mimetype",
                          "encoding"
                        ],
                        "type": "object"
                      },
                      {
                        "description": "Array of file objects from multipart upload",
                        "items": {
                          "additionalProperties": false,
                          "description": "Individual file object from multipart upload",
                          "properties": {
                            "encoding": {
                              "description": "File encoding type",
                              "example": "7bit",
                              "type": "string"
                            },
                            "fieldname": {
                              "description": "Form field name for the file",
                              "example": "files",
                              "type": "string"
                            },
                            "filename": {
                              "description": "Original filename of the uploaded file",
                              "example": "document.pdf",
                              "type": "string"
                            },
                            "mimetype": {
                              "description": "MIME type of the uploaded file",
                              "enum": [
                                "application/msword",
                                "application/vnd.openxmlformats-officedocument.wordprocessingml.document",
                                "application/vnd.ms-excel",
                                "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
                                "application/vnd.ms-powerpoint",
                                "application/vnd.openxmlformats-officedocument.presentationml.presentation",
                                "application/vnd.oasis.opendocument.text",
                                "text/plain",
                                "text/csv",
                                "text/markdown",
                                "application/pdf"
                              ],
                              "example": "application/pdf",
                              "type": "string"
                            }
                          },
                          "required": [
                            "fieldname",
                            "filename",
                            "mimetype",
                            "encoding"
                          ],
                          "type": "object"
                        },
                        "minItems": 1,
                        "type": "array"
                      }
                    ]
                  }
                },
                "required": [
                  "files"
                ],
                "title": "Upload Documents Body",
                "type": "object"
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "example": "550e8400-e29b-41d4-a716-446655440000",
              "format": "uuid",
              "type": "string"
            },
            "in": "path",
            "name": "assistantId",
            "required": true,
            "description": "UUID of the assistant to associate uploaded documents with"
          }
        ],
        "responses": {
          "200": {
            "description": "Documents uploaded successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard response envelope containing event information and data payload",
                      "properties": {
                        "data": {
                          "description": "Response data payload containing the actual response content",
                          "type": "object"
                        },
                        "event": {
                          "additionalProperties": false,
                          "description": "Event information describing the operation performed",
                          "properties": {
                            "code": {
                              "description": "Event code identifying the specific operation that occurred",
                              "pattern": "^[a-z]+\\.[a-z_]+$",
                              "type": "string"
                            },
                            "correlationId": {
                              "description": "Unique correlation ID linking this event to the original request for tracing",
                              "example": "123e4567-e89b-12d3-a456-426614174000",
                              "format": "uuid",
                              "type": "string"
                            },
                            "metadata": {
                              "additionalProperties": true,
                              "description": "Event-specific metadata providing additional context",
                              "example": {
                                "field": "value"
                              },
                              "type": "object"
                            },
                            "payload": {
                              "additionalProperties": true,
                              "description": "Event payload containing detailed information about the event",
                              "example": {
                                "field": "value"
                              },
                              "type": "object"
                            }
                          },
                          "required": [
                            "code"
                          ],
                          "type": "object"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the response was generated",
                          "example": 1690000000,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "event",
                        "timestamp"
                      ],
                      "title": "Reply Envelope",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "data": {
                          "additionalProperties": false,
                          "properties": {
                            "success": {
                              "type": "boolean",
                              "enum": [true]
                            }
                          },
                          "required": [
                            "success"
                          ],
                          "type": "object"
                        },
                        "event": {
                          "properties": {
                            "code": {
                              "enum": [
                                "uploads.documents.uploaded"
                              ]
                            }
                          },
                          "type": "object"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Validation Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "description": "Validation error response with detailed field-level errors",
                      "properties": {
                        "code": {
                          "description": "Fixed error code for validation errors",
                          "enum": [
                            "validation.error"
                          ]
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Validation-specific metadata containing detailed error information",
                          "properties": {
                            "validation_errors": {
                              "description": "Array of field-level validation errors",
                              "items": {
                                "additionalProperties": false,
                                "description": "Individual field validation error",
                                "properties": {
                                  "code": {
                                    "description": "Specific validation error code for this field",
                                    "example": "required",
                                    "type": "string"
                                  },
                                  "params": {
                                    "additionalProperties": true,
                                    "description": "Validation parameters providing context for the error",
                                    "example": {
                                      "expectedType": "string",
                                      "receivedType": "number"
                                    },
                                    "type": "object"
                                  },
                                  "path": {
                                    "description": "JSON path to the field that failed validation",
                                    "example": "/username",
                                    "pattern": "^/",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "code",
                                  "path",
                                  "params"
                                ],
                                "type": "object"
                              },
                              "minItems": 1,
                              "type": "array"
                            }
                          },
                          "required": [
                            "validation_errors"
                          ],
                          "type": "object"
                        },
                        "status": {
                          "description": "HTTP status code for validation errors",
                          "enum": [400]
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "description": "Validation error response extending the base error response",
                  "title": "Validation Error"
                }
              }
            }
          },
          "401": {
            "description": "Upload Authentication Failed",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "code": {
                          "enum": [
                            "unauthorized"
                          ]
                        },
                        "status": {
                          "enum": [403]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            }
          },
          "422": {
            "description": "Invalid File Type",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "code": {
                          "enum": [
                            "invalid.file"
                          ]
                        },
                        "status": {
                          "enum": [400]
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "File Upload Failed",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "code": {
                          "enum": [
                            "upload.failed"
                          ]
                        },
                        "status": {
                          "enum": [500]
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/uploads/pfp/assistant/{assistantId}": {
      "post": {
        "tags": [
          "uploads"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "additionalProperties": false,
                "description": "Request body for uploading profile picture via multipart/form-data",
                "properties": {
                  "file": {
                    "additionalProperties": true,
                    "description": "Profile picture file object from multipart upload",
                    "properties": {
                      "encoding": {
                        "description": "File encoding type",
                        "example": "7bit",
                        "type": "string"
                      },
                      "fieldname": {
                        "description": "Form field name for the file",
                        "example": "file",
                        "type": "string"
                      },
                      "filename": {
                        "description": "Original filename of the uploaded image",
                        "example": "profile.jpg",
                        "type": "string"
                      },
                      "mimetype": {
                        "description": "MIME type of the uploaded image file",
                        "enum": [
                          "image/jpeg",
                          "image/jpg",
                          "image/png",
                          "image/webp"
                        ],
                        "example": "image/jpeg",
                        "type": "string"
                      }
                    },
                    "required": [
                      "fieldname",
                      "filename",
                      "mimetype",
                      "encoding"
                    ],
                    "type": "object"
                  }
                },
                "required": [
                  "file"
                ],
                "title": "Upload Profile Picture Body",
                "type": "object"
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "format": "uuid",
              "type": "string"
            },
            "in": "path",
            "name": "assistantId",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Assistant Profile Picture Uploaded Successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard response envelope containing event information and data payload",
                      "properties": {
                        "data": {
                          "description": "Response data payload containing the actual response content",
                          "type": "object"
                        },
                        "event": {
                          "additionalProperties": false,
                          "description": "Event information describing the operation performed",
                          "properties": {
                            "code": {
                              "description": "Event code identifying the specific operation that occurred",
                              "pattern": "^[a-z]+\\.[a-z_]+$",
                              "type": "string"
                            },
                            "correlationId": {
                              "description": "Unique correlation ID linking this event to the original request for tracing",
                              "example": "123e4567-e89b-12d3-a456-426614174000",
                              "format": "uuid",
                              "type": "string"
                            },
                            "metadata": {
                              "additionalProperties": true,
                              "description": "Event-specific metadata providing additional context",
                              "example": {
                                "field": "value"
                              },
                              "type": "object"
                            },
                            "payload": {
                              "additionalProperties": true,
                              "description": "Event payload containing detailed information about the event",
                              "example": {
                                "field": "value"
                              },
                              "type": "object"
                            }
                          },
                          "required": [
                            "code"
                          ],
                          "type": "object"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the response was generated",
                          "example": 1690000000,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "event",
                        "timestamp"
                      ],
                      "title": "Reply Envelope",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "data": {
                          "additionalProperties": false,
                          "description": "Simple success response for operations that do not return data",
                          "properties": {
                            "success": {
                              "description": "Boolean flag indicating the operation completed successfully",
                              "example": true,
                              "type": "boolean",
                              "enum": [true]
                            }
                          },
                          "required": [
                            "success"
                          ],
                          "title": "Success Response",
                          "type": "object"
                        },
                        "event": {
                          "properties": {
                            "code": {
                              "oneOf": [
                                {
                                  "enum": [
                                    "uploads.user.profile.picture.uploaded"
                                  ]
                                },
                                {
                                  "enum": [
                                    "uploads.organization.profile.picture.uploaded"
                                  ]
                                },
                                {
                                  "enum": [
                                    "uploads.assistant.profile.picture.uploaded"
                                  ]
                                }
                              ]
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Validation Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "description": "Validation error response with detailed field-level errors",
                      "properties": {
                        "code": {
                          "description": "Fixed error code for validation errors",
                          "enum": [
                            "validation.error"
                          ]
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Validation-specific metadata containing detailed error information",
                          "properties": {
                            "validation_errors": {
                              "description": "Array of field-level validation errors",
                              "items": {
                                "additionalProperties": false,
                                "description": "Individual field validation error",
                                "properties": {
                                  "code": {
                                    "description": "Specific validation error code for this field",
                                    "example": "required",
                                    "type": "string"
                                  },
                                  "params": {
                                    "additionalProperties": true,
                                    "description": "Validation parameters providing context for the error",
                                    "example": {
                                      "expectedType": "string",
                                      "receivedType": "number"
                                    },
                                    "type": "object"
                                  },
                                  "path": {
                                    "description": "JSON path to the field that failed validation",
                                    "example": "/username",
                                    "pattern": "^/",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "code",
                                  "path",
                                  "params"
                                ],
                                "type": "object"
                              },
                              "minItems": 1,
                              "type": "array"
                            }
                          },
                          "required": [
                            "validation_errors"
                          ],
                          "type": "object"
                        },
                        "status": {
                          "description": "HTTP status code for validation errors",
                          "enum": [400]
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "description": "Validation error response extending the base error response",
                  "title": "Validation Error"
                }
              }
            }
          },
          "401": {
            "description": "Upload Authentication Failed",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "code": {
                          "enum": [
                            "unauthorized"
                          ]
                        },
                        "status": {
                          "enum": [403]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            }
          },
          "422": {
            "description": "Invalid File Type",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "code": {
                          "enum": [
                            "invalid.file"
                          ]
                        },
                        "status": {
                          "enum": [400]
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Assistant Profile Picture Upload Failed",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "code": {
                          "enum": [
                            "upload.failed"
                          ]
                        },
                        "status": {
                          "enum": [500]
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/uploads/pfp/user/{userId}": {
      "post": {
        "tags": [
          "uploads"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "additionalProperties": false,
                "description": "Request body for uploading profile picture via multipart/form-data",
                "properties": {
                  "file": {
                    "additionalProperties": true,
                    "description": "Profile picture file object from multipart upload",
                    "properties": {
                      "encoding": {
                        "description": "File encoding type",
                        "example": "7bit",
                        "type": "string"
                      },
                      "fieldname": {
                        "description": "Form field name for the file",
                        "example": "file",
                        "type": "string"
                      },
                      "filename": {
                        "description": "Original filename of the uploaded image",
                        "example": "profile.jpg",
                        "type": "string"
                      },
                      "mimetype": {
                        "description": "MIME type of the uploaded image file",
                        "enum": [
                          "image/jpeg",
                          "image/jpg",
                          "image/png",
                          "image/webp"
                        ],
                        "example": "image/jpeg",
                        "type": "string"
                      }
                    },
                    "required": [
                      "fieldname",
                      "filename",
                      "mimetype",
                      "encoding"
                    ],
                    "type": "object"
                  }
                },
                "required": [
                  "file"
                ],
                "title": "Upload Profile Picture Body",
                "type": "object"
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "format": "uuid",
              "type": "string"
            },
            "in": "path",
            "name": "userId",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "User Profile Picture Uploaded Successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard response envelope containing event information and data payload",
                      "properties": {
                        "data": {
                          "description": "Response data payload containing the actual response content",
                          "type": "object"
                        },
                        "event": {
                          "additionalProperties": false,
                          "description": "Event information describing the operation performed",
                          "properties": {
                            "code": {
                              "description": "Event code identifying the specific operation that occurred",
                              "pattern": "^[a-z]+\\.[a-z_]+$",
                              "type": "string"
                            },
                            "correlationId": {
                              "description": "Unique correlation ID linking this event to the original request for tracing",
                              "example": "123e4567-e89b-12d3-a456-426614174000",
                              "format": "uuid",
                              "type": "string"
                            },
                            "metadata": {
                              "additionalProperties": true,
                              "description": "Event-specific metadata providing additional context",
                              "example": {
                                "field": "value"
                              },
                              "type": "object"
                            },
                            "payload": {
                              "additionalProperties": true,
                              "description": "Event payload containing detailed information about the event",
                              "example": {
                                "field": "value"
                              },
                              "type": "object"
                            }
                          },
                          "required": [
                            "code"
                          ],
                          "type": "object"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the response was generated",
                          "example": 1690000000,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "event",
                        "timestamp"
                      ],
                      "title": "Reply Envelope",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "data": {
                          "additionalProperties": false,
                          "description": "Simple success response for operations that do not return data",
                          "properties": {
                            "success": {
                              "description": "Boolean flag indicating the operation completed successfully",
                              "example": true,
                              "type": "boolean",
                              "enum": [true]
                            }
                          },
                          "required": [
                            "success"
                          ],
                          "title": "Success Response",
                          "type": "object"
                        },
                        "event": {
                          "properties": {
                            "code": {
                              "oneOf": [
                                {
                                  "enum": [
                                    "uploads.user.profile.picture.uploaded"
                                  ]
                                },
                                {
                                  "enum": [
                                    "uploads.organization.profile.picture.uploaded"
                                  ]
                                },
                                {
                                  "enum": [
                                    "uploads.assistant.profile.picture.uploaded"
                                  ]
                                }
                              ]
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Validation Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "description": "Validation error response with detailed field-level errors",
                      "properties": {
                        "code": {
                          "description": "Fixed error code for validation errors",
                          "enum": [
                            "validation.error"
                          ]
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Validation-specific metadata containing detailed error information",
                          "properties": {
                            "validation_errors": {
                              "description": "Array of field-level validation errors",
                              "items": {
                                "additionalProperties": false,
                                "description": "Individual field validation error",
                                "properties": {
                                  "code": {
                                    "description": "Specific validation error code for this field",
                                    "example": "required",
                                    "type": "string"
                                  },
                                  "params": {
                                    "additionalProperties": true,
                                    "description": "Validation parameters providing context for the error",
                                    "example": {
                                      "expectedType": "string",
                                      "receivedType": "number"
                                    },
                                    "type": "object"
                                  },
                                  "path": {
                                    "description": "JSON path to the field that failed validation",
                                    "example": "/username",
                                    "pattern": "^/",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "code",
                                  "path",
                                  "params"
                                ],
                                "type": "object"
                              },
                              "minItems": 1,
                              "type": "array"
                            }
                          },
                          "required": [
                            "validation_errors"
                          ],
                          "type": "object"
                        },
                        "status": {
                          "description": "HTTP status code for validation errors",
                          "enum": [400]
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "description": "Validation error response extending the base error response",
                  "title": "Validation Error"
                }
              }
            }
          },
          "401": {
            "description": "Upload Authentication Failed",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "code": {
                          "enum": [
                            "unauthorized"
                          ]
                        },
                        "status": {
                          "enum": [403]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            }
          },
          "422": {
            "description": "Invalid File Type",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "code": {
                          "enum": [
                            "invalid.file"
                          ]
                        },
                        "status": {
                          "enum": [400]
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Profile Picture Upload Failed",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "code": {
                          "enum": [
                            "upload.failed"
                          ]
                        },
                        "status": {
                          "enum": [500]
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/uploads/pfp/organization/{organizationId}": {
      "post": {
        "tags": [
          "uploads"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "additionalProperties": false,
                "description": "Request body for uploading profile picture via multipart/form-data",
                "properties": {
                  "file": {
                    "additionalProperties": true,
                    "description": "Profile picture file object from multipart upload",
                    "properties": {
                      "encoding": {
                        "description": "File encoding type",
                        "example": "7bit",
                        "type": "string"
                      },
                      "fieldname": {
                        "description": "Form field name for the file",
                        "example": "file",
                        "type": "string"
                      },
                      "filename": {
                        "description": "Original filename of the uploaded image",
                        "example": "profile.jpg",
                        "type": "string"
                      },
                      "mimetype": {
                        "description": "MIME type of the uploaded image file",
                        "enum": [
                          "image/jpeg",
                          "image/jpg",
                          "image/png",
                          "image/webp"
                        ],
                        "example": "image/jpeg",
                        "type": "string"
                      }
                    },
                    "required": [
                      "fieldname",
                      "filename",
                      "mimetype",
                      "encoding"
                    ],
                    "type": "object"
                  }
                },
                "required": [
                  "file"
                ],
                "title": "Upload Profile Picture Body",
                "type": "object"
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "format": "uuid",
              "type": "string"
            },
            "in": "path",
            "name": "organizationId",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Organization Profile Picture Uploaded Successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard response envelope containing event information and data payload",
                      "properties": {
                        "data": {
                          "description": "Response data payload containing the actual response content",
                          "type": "object"
                        },
                        "event": {
                          "additionalProperties": false,
                          "description": "Event information describing the operation performed",
                          "properties": {
                            "code": {
                              "description": "Event code identifying the specific operation that occurred",
                              "pattern": "^[a-z]+\\.[a-z_]+$",
                              "type": "string"
                            },
                            "correlationId": {
                              "description": "Unique correlation ID linking this event to the original request for tracing",
                              "example": "123e4567-e89b-12d3-a456-426614174000",
                              "format": "uuid",
                              "type": "string"
                            },
                            "metadata": {
                              "additionalProperties": true,
                              "description": "Event-specific metadata providing additional context",
                              "example": {
                                "field": "value"
                              },
                              "type": "object"
                            },
                            "payload": {
                              "additionalProperties": true,
                              "description": "Event payload containing detailed information about the event",
                              "example": {
                                "field": "value"
                              },
                              "type": "object"
                            }
                          },
                          "required": [
                            "code"
                          ],
                          "type": "object"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the response was generated",
                          "example": 1690000000,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "event",
                        "timestamp"
                      ],
                      "title": "Reply Envelope",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "data": {
                          "additionalProperties": false,
                          "description": "Simple success response for operations that do not return data",
                          "properties": {
                            "success": {
                              "description": "Boolean flag indicating the operation completed successfully",
                              "example": true,
                              "type": "boolean",
                              "enum": [true]
                            }
                          },
                          "required": [
                            "success"
                          ],
                          "title": "Success Response",
                          "type": "object"
                        },
                        "event": {
                          "properties": {
                            "code": {
                              "oneOf": [
                                {
                                  "enum": [
                                    "uploads.user.profile.picture.uploaded"
                                  ]
                                },
                                {
                                  "enum": [
                                    "uploads.organization.profile.picture.uploaded"
                                  ]
                                },
                                {
                                  "enum": [
                                    "uploads.assistant.profile.picture.uploaded"
                                  ]
                                }
                              ]
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Validation Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "description": "Validation error response with detailed field-level errors",
                      "properties": {
                        "code": {
                          "description": "Fixed error code for validation errors",
                          "enum": [
                            "validation.error"
                          ]
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Validation-specific metadata containing detailed error information",
                          "properties": {
                            "validation_errors": {
                              "description": "Array of field-level validation errors",
                              "items": {
                                "additionalProperties": false,
                                "description": "Individual field validation error",
                                "properties": {
                                  "code": {
                                    "description": "Specific validation error code for this field",
                                    "example": "required",
                                    "type": "string"
                                  },
                                  "params": {
                                    "additionalProperties": true,
                                    "description": "Validation parameters providing context for the error",
                                    "example": {
                                      "expectedType": "string",
                                      "receivedType": "number"
                                    },
                                    "type": "object"
                                  },
                                  "path": {
                                    "description": "JSON path to the field that failed validation",
                                    "example": "/username",
                                    "pattern": "^/",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "code",
                                  "path",
                                  "params"
                                ],
                                "type": "object"
                              },
                              "minItems": 1,
                              "type": "array"
                            }
                          },
                          "required": [
                            "validation_errors"
                          ],
                          "type": "object"
                        },
                        "status": {
                          "description": "HTTP status code for validation errors",
                          "enum": [400]
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "description": "Validation error response extending the base error response",
                  "title": "Validation Error"
                }
              }
            }
          },
          "401": {
            "description": "Upload Authentication Failed",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "code": {
                          "enum": [
                            "unauthorized"
                          ]
                        },
                        "status": {
                          "enum": [403]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            }
          },
          "422": {
            "description": "Invalid File Type",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "code": {
                          "enum": [
                            "invalid.file"
                          ]
                        },
                        "status": {
                          "enum": [400]
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Organization Profile Picture Upload Failed",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "code": {
                          "enum": [
                            "upload.failed"
                          ]
                        },
                        "status": {
                          "enum": [500]
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/chat/send": {
      "post": {
        "tags": [
          "chat"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "additionalProperties": false,
                "description": "Request body for sending a message to an AI assistant",
                "properties": {
                  "limits": {
                    "additionalProperties": false,
                    "description": "Processing limits and constraints",
                    "properties": {
                      "chunks": {
                        "description": "Maximum number of document chunks to process",
                        "example": 10,
                        "maximum": 50,
                        "minimum": 1,
                        "type": "number"
                      },
                      "pages": {
                        "description": "Maximum number of document pages to process",
                        "example": 5,
                        "maximum": 20,
                        "minimum": 1,
                        "type": "number"
                      },
                      "results": {
                        "description": "Maximum number of final results to use for AI context",
                        "example": 3,
                        "maximum": 20,
                        "minimum": 1,
                        "type": "number"
                      }
                    },
                    "type": "object"
                  },
                  "scope": {
                    "additionalProperties": false,
                    "description": "Scope and filtering parameters",
                    "properties": {
                      "archived": {
                        "description": "Whether to include archived content",
                        "example": false,
                        "type": "boolean"
                      },
                      "files": {
                        "description": "Array of specific file IDs to include in the context",
                        "example": [
                          "123e4567-e89b-12d3-a456-426614174000"
                        ],
                        "items": {
                          "description": "File UUID",
                          "format": "uuid",
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "folders": {
                        "description": "Array of folder IDs to include files from in the context",
                        "example": [
                          "770g9600-g40d-63f6-c938-668877662222"
                        ],
                        "items": {
                          "description": "Folder UUID",
                          "format": "uuid",
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "types": {
                        "description": "Array of content types to include",
                        "example": [
                          "text",
                          "table"
                        ],
                        "items": {
                          "enum": [
                            "entity",
                            "figure_caption",
                            "image",
                            "table",
                            "table_caption",
                            "text"
                          ],
                          "type": "string"
                        },
                        "type": "array"
                      }
                    },
                    "type": "object"
                  },
                  "search": {
                    "additionalProperties": false,
                    "description": "Search configuration parameters",
                    "properties": {
                      "candidates": {
                        "description": "Number of search candidates to retrieve",
                        "example": 50,
                        "maximum": 200,
                        "minimum": 1,
                        "type": "number"
                      },
                      "entities": {
                        "description": "Whether to enable entity-based search enhancement",
                        "example": true,
                        "type": "boolean"
                      },
                      "fusion": {
                        "description": "Strategy for combining different search results",
                        "enum": [
                          "rrf",
                          "simple",
                          "max",
                          "min"
                        ],
                        "example": "rrf",
                        "type": "string"
                      },
                      "images": {
                        "description": "Whether to include image search",
                        "example": true,
                        "type": "boolean"
                      },
                      "limit": {
                        "description": "Maximum number of search results to return",
                        "example": 20,
                        "maximum": 100,
                        "minimum": 1,
                        "type": "number"
                      },
                      "mode": {
                        "description": "Strategy for generating embeddings for semantic search",
                        "enum": [
                          "dense",
                          "hybrid",
                          "image",
                          "sparse"
                        ],
                        "example": "hybrid",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "stream": {
                    "description": "Whether to stream the response in real-time",
                    "example": true,
                    "type": "boolean"
                  },
                  "text": {
                    "description": "The message content to send to the assistant",
                    "example": "What are the key findings in the uploaded documents?",
                    "maxLength": 10000,
                    "minLength": 1,
                    "type": "string"
                  },
                  "thread": {
                    "description": "UUID of the conversation thread",
                    "example": "880h0700-h51e-74g7-d049-779988773333",
                    "format": "uuid",
                    "type": "string"
                  }
                },
                "required": [
                  "text",
                  "thread"
                ],
                "title": "Send Message Body",
                "type": "object"
              }
            }
          },
          "required": true,
          "description": "Request body for sending a message to an AI assistant"
        },
        "responses": {
          "200": {
            "description": "Message Sent Successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard response envelope containing event information and data payload",
                      "properties": {
                        "data": {
                          "description": "Response data payload containing the actual response content",
                          "type": "object"
                        },
                        "event": {
                          "additionalProperties": false,
                          "description": "Event information describing the operation performed",
                          "properties": {
                            "code": {
                              "description": "Event code identifying the specific operation that occurred",
                              "pattern": "^[a-z]+\\.[a-z_]+$",
                              "type": "string"
                            },
                            "correlationId": {
                              "description": "Unique correlation ID linking this event to the original request for tracing",
                              "example": "123e4567-e89b-12d3-a456-426614174000",
                              "format": "uuid",
                              "type": "string"
                            },
                            "metadata": {
                              "additionalProperties": true,
                              "description": "Event-specific metadata providing additional context",
                              "example": {
                                "field": "value"
                              },
                              "type": "object"
                            },
                            "payload": {
                              "additionalProperties": true,
                              "description": "Event payload containing detailed information about the event",
                              "example": {
                                "field": "value"
                              },
                              "type": "object"
                            }
                          },
                          "required": [
                            "code"
                          ],
                          "type": "object"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the response was generated",
                          "example": 1690000000,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "event",
                        "timestamp"
                      ],
                      "title": "Reply Envelope",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "data": {
                          "additionalProperties": false,
                          "properties": {
                            "message": {
                              "description": "AI generated response message",
                              "type": "string"
                            }
                          },
                          "required": [
                            "message"
                          ],
                          "type": "object"
                        },
                        "event": {
                          "properties": {
                            "code": {
                              "enum": [
                                "chat.message.sent"
                              ]
                            }
                          },
                          "type": "object"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Validation Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "description": "Validation error response with detailed field-level errors",
                      "properties": {
                        "code": {
                          "description": "Fixed error code for validation errors",
                          "enum": [
                            "validation.error"
                          ]
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Validation-specific metadata containing detailed error information",
                          "properties": {
                            "validation_errors": {
                              "description": "Array of field-level validation errors",
                              "items": {
                                "additionalProperties": false,
                                "description": "Individual field validation error",
                                "properties": {
                                  "code": {
                                    "description": "Specific validation error code for this field",
                                    "example": "required",
                                    "type": "string"
                                  },
                                  "params": {
                                    "additionalProperties": true,
                                    "description": "Validation parameters providing context for the error",
                                    "example": {
                                      "expectedType": "string",
                                      "receivedType": "number"
                                    },
                                    "type": "object"
                                  },
                                  "path": {
                                    "description": "JSON path to the field that failed validation",
                                    "example": "/username",
                                    "pattern": "^/",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "code",
                                  "path",
                                  "params"
                                ],
                                "type": "object"
                              },
                              "minItems": 1,
                              "type": "array"
                            }
                          },
                          "required": [
                            "validation_errors"
                          ],
                          "type": "object"
                        },
                        "status": {
                          "description": "HTTP status code for validation errors",
                          "enum": [400]
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "description": "Validation error response extending the base error response",
                  "title": "Validation Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "code": {
                          "enum": [
                            "unauthorized"
                          ]
                        },
                        "status": {
                          "enum": [403]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource Not Found",
            "content": {
              "application/problem+json": {
                "schema": {
                  "oneOf": [
                    {
                      "allOf": [
                        {
                          "additionalProperties": false,
                          "description": "Standard error response structure for API errors",
                          "properties": {
                            "code": {
                              "description": "Error code identifying the specific error type",
                              "pattern": "^[a-z]+\\.[a-z_]+$",
                              "type": "string"
                            },
                            "correlationId": {
                              "description": "Unique correlation ID linking this error to the original request for tracing",
                              "example": "123e4567-e89b-12d3-a456-426614174111",
                              "format": "uuid",
                              "type": "string"
                            },
                            "instance": {
                              "description": "Request path where the error occurred",
                              "example": "/api/v1/example/123",
                              "pattern": "^/api/v[0-9]+/",
                              "type": "string"
                            },
                            "message": {
                              "description": "Human readable error message explaining what went wrong",
                              "example": "Something went wrong",
                              "maxLength": 500,
                              "type": "string"
                            },
                            "metadata": {
                              "additionalProperties": true,
                              "description": "Error-specific metadata providing additional context about the error",
                              "example": {
                                "field": "username"
                              },
                              "type": "object"
                            },
                            "stack": {
                              "description": "Error stack trace (only included in development environments)",
                              "example": "Error: Example error\n    at example.js:10:5",
                              "type": "string"
                            },
                            "status": {
                              "description": "HTTP status code indicating the type of error",
                              "maximum": 599,
                              "minimum": 400,
                              "type": "integer"
                            },
                            "timestamp": {
                              "description": "UNIX timestamp when the error occurred",
                              "example": 1690000001,
                              "format": "int64",
                              "minimum": 0,
                              "type": "integer"
                            }
                          },
                          "required": [
                            "code",
                            "status",
                            "timestamp"
                          ],
                          "title": "Error Response",
                          "type": "object"
                        },
                        {
                          "properties": {
                            "code": {
                              "enum": [
                                "thread.not.found"
                              ]
                            },
                            "status": {
                              "enum": [404]
                            }
                          }
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "additionalProperties": false,
                          "description": "Standard error response structure for API errors",
                          "properties": {
                            "code": {
                              "description": "Error code identifying the specific error type",
                              "pattern": "^[a-z]+\\.[a-z_]+$",
                              "type": "string"
                            },
                            "correlationId": {
                              "description": "Unique correlation ID linking this error to the original request for tracing",
                              "example": "123e4567-e89b-12d3-a456-426614174111",
                              "format": "uuid",
                              "type": "string"
                            },
                            "instance": {
                              "description": "Request path where the error occurred",
                              "example": "/api/v1/example/123",
                              "pattern": "^/api/v[0-9]+/",
                              "type": "string"
                            },
                            "message": {
                              "description": "Human readable error message explaining what went wrong",
                              "example": "Something went wrong",
                              "maxLength": 500,
                              "type": "string"
                            },
                            "metadata": {
                              "additionalProperties": true,
                              "description": "Error-specific metadata providing additional context about the error",
                              "example": {
                                "field": "username"
                              },
                              "type": "object"
                            },
                            "stack": {
                              "description": "Error stack trace (only included in development environments)",
                              "example": "Error: Example error\n    at example.js:10:5",
                              "type": "string"
                            },
                            "status": {
                              "description": "HTTP status code indicating the type of error",
                              "maximum": 599,
                              "minimum": 400,
                              "type": "integer"
                            },
                            "timestamp": {
                              "description": "UNIX timestamp when the error occurred",
                              "example": 1690000001,
                              "format": "int64",
                              "minimum": 0,
                              "type": "integer"
                            }
                          },
                          "required": [
                            "code",
                            "status",
                            "timestamp"
                          ],
                          "title": "Error Response",
                          "type": "object"
                        },
                        {
                          "properties": {
                            "code": {
                              "enum": [
                                "assistant.not.found"
                              ]
                            },
                            "status": {
                              "enum": [404]
                            }
                          },
                          "type": "object"
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "additionalProperties": false,
                          "description": "Standard error response structure for API errors",
                          "properties": {
                            "code": {
                              "description": "Error code identifying the specific error type",
                              "pattern": "^[a-z]+\\.[a-z_]+$",
                              "type": "string"
                            },
                            "correlationId": {
                              "description": "Unique correlation ID linking this error to the original request for tracing",
                              "example": "123e4567-e89b-12d3-a456-426614174111",
                              "format": "uuid",
                              "type": "string"
                            },
                            "instance": {
                              "description": "Request path where the error occurred",
                              "example": "/api/v1/example/123",
                              "pattern": "^/api/v[0-9]+/",
                              "type": "string"
                            },
                            "message": {
                              "description": "Human readable error message explaining what went wrong",
                              "example": "Something went wrong",
                              "maxLength": 500,
                              "type": "string"
                            },
                            "metadata": {
                              "additionalProperties": true,
                              "description": "Error-specific metadata providing additional context about the error",
                              "example": {
                                "field": "username"
                              },
                              "type": "object"
                            },
                            "stack": {
                              "description": "Error stack trace (only included in development environments)",
                              "example": "Error: Example error\n    at example.js:10:5",
                              "type": "string"
                            },
                            "status": {
                              "description": "HTTP status code indicating the type of error",
                              "maximum": 599,
                              "minimum": 400,
                              "type": "integer"
                            },
                            "timestamp": {
                              "description": "UNIX timestamp when the error occurred",
                              "example": 1690000001,
                              "format": "int64",
                              "minimum": 0,
                              "type": "integer"
                            }
                          },
                          "required": [
                            "code",
                            "status",
                            "timestamp"
                          ],
                          "title": "Error Response",
                          "type": "object"
                        },
                        {
                          "properties": {
                            "code": {
                              "enum": [
                                "organization.not.found"
                              ]
                            },
                            "status": {
                              "enum": [404]
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Chat Send Failed",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "code": {
                          "enum": [
                            "chat.send.failed"
                          ]
                        },
                        "status": {
                          "enum": [500]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/chat/regenerate/{id}": {
      "post": {
        "tags": [
          "chat"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "additionalProperties": false,
                "description": "Request body for regenerating an AI assistant message response",
                "properties": {
                  "limits": {
                    "additionalProperties": false,
                    "description": "Processing limits and constraints",
                    "properties": {
                      "chunks": {
                        "description": "Maximum number of document chunks to process",
                        "example": 10,
                        "maximum": 50,
                        "minimum": 1,
                        "type": "number"
                      },
                      "pages": {
                        "description": "Maximum number of document pages to process",
                        "example": 5,
                        "maximum": 20,
                        "minimum": 1,
                        "type": "number"
                      },
                      "results": {
                        "description": "Maximum number of final results to use for AI context",
                        "example": 3,
                        "maximum": 20,
                        "minimum": 1,
                        "type": "number"
                      }
                    },
                    "type": "object"
                  },
                  "scope": {
                    "additionalProperties": false,
                    "description": "Scope and filtering parameters",
                    "properties": {
                      "archived": {
                        "description": "Whether to include archived content",
                        "example": false,
                        "type": "boolean"
                      },
                      "files": {
                        "description": "Array of specific file IDs to include in the context",
                        "example": [
                          "123e4567-e89b-12d3-a456-426614174000"
                        ],
                        "items": {
                          "description": "File UUID",
                          "format": "uuid",
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "folders": {
                        "description": "Array of folder IDs to include files from in the context",
                        "example": [
                          "770g9600-g40d-63f6-c938-668877662222"
                        ],
                        "items": {
                          "description": "Folder UUID",
                          "format": "uuid",
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "types": {
                        "description": "Array of content types to include",
                        "example": [
                          "text",
                          "table"
                        ],
                        "items": {
                          "enum": [
                            "entity",
                            "figure_caption",
                            "image",
                            "table",
                            "table_caption",
                            "text"
                          ],
                          "type": "string"
                        },
                        "type": "array"
                      }
                    },
                    "type": "object"
                  },
                  "search": {
                    "additionalProperties": false,
                    "description": "Search configuration parameters",
                    "properties": {
                      "candidates": {
                        "description": "Number of search candidates to retrieve",
                        "example": 50,
                        "maximum": 200,
                        "minimum": 1,
                        "type": "number"
                      },
                      "entities": {
                        "description": "Whether to enable entity-based search enhancement",
                        "example": true,
                        "type": "boolean"
                      },
                      "fusion": {
                        "description": "Strategy for combining different search results",
                        "enum": [
                          "none",
                          "rrf",
                          "weighted"
                        ],
                        "example": "rrf",
                        "type": "string"
                      },
                      "images": {
                        "description": "Whether to include image search",
                        "example": true,
                        "type": "boolean"
                      },
                      "limit": {
                        "description": "Maximum number of search results to return",
                        "example": 20,
                        "maximum": 100,
                        "minimum": 1,
                        "type": "number"
                      },
                      "mode": {
                        "description": "Strategy for generating embeddings for semantic search",
                        "enum": [
                          "dense",
                          "hybrid",
                          "image",
                          "sparse"
                        ],
                        "example": "hybrid",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "stream": {
                    "description": "Whether to stream the regenerated response in real-time",
                    "example": true,
                    "type": "boolean"
                  }
                },
                "required": [],
                "title": "Regenerate Message Body",
                "type": "object"
              }
            }
          },
          "description": "Request body for regenerating an AI assistant message response"
        },
        "parameters": [
          {
            "schema": {
              "format": "uuid",
              "type": "string"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Message Regenerated Successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard response envelope containing event information and data payload",
                      "properties": {
                        "data": {
                          "description": "Response data payload containing the actual response content",
                          "type": "object"
                        },
                        "event": {
                          "additionalProperties": false,
                          "description": "Event information describing the operation performed",
                          "properties": {
                            "code": {
                              "description": "Event code identifying the specific operation that occurred",
                              "pattern": "^[a-z]+\\.[a-z_]+$",
                              "type": "string"
                            },
                            "correlationId": {
                              "description": "Unique correlation ID linking this event to the original request for tracing",
                              "example": "123e4567-e89b-12d3-a456-426614174000",
                              "format": "uuid",
                              "type": "string"
                            },
                            "metadata": {
                              "additionalProperties": true,
                              "description": "Event-specific metadata providing additional context",
                              "example": {
                                "field": "value"
                              },
                              "type": "object"
                            },
                            "payload": {
                              "additionalProperties": true,
                              "description": "Event payload containing detailed information about the event",
                              "example": {
                                "field": "value"
                              },
                              "type": "object"
                            }
                          },
                          "required": [
                            "code"
                          ],
                          "type": "object"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the response was generated",
                          "example": 1690000000,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "event",
                        "timestamp"
                      ],
                      "title": "Reply Envelope",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "data": {
                          "additionalProperties": false,
                          "properties": {
                            "message": {
                              "description": "Regenerated AI message",
                              "type": "string"
                            }
                          },
                          "required": [
                            "message"
                          ],
                          "type": "object"
                        },
                        "event": {
                          "properties": {
                            "code": {
                              "enum": [
                                "chat.message.regenerated"
                              ]
                            }
                          },
                          "type": "object"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Validation Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "description": "Validation error response with detailed field-level errors",
                      "properties": {
                        "code": {
                          "description": "Fixed error code for validation errors",
                          "enum": [
                            "validation.error"
                          ]
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Validation-specific metadata containing detailed error information",
                          "properties": {
                            "validation_errors": {
                              "description": "Array of field-level validation errors",
                              "items": {
                                "additionalProperties": false,
                                "description": "Individual field validation error",
                                "properties": {
                                  "code": {
                                    "description": "Specific validation error code for this field",
                                    "example": "required",
                                    "type": "string"
                                  },
                                  "params": {
                                    "additionalProperties": true,
                                    "description": "Validation parameters providing context for the error",
                                    "example": {
                                      "expectedType": "string",
                                      "receivedType": "number"
                                    },
                                    "type": "object"
                                  },
                                  "path": {
                                    "description": "JSON path to the field that failed validation",
                                    "example": "/username",
                                    "pattern": "^/",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "code",
                                  "path",
                                  "params"
                                ],
                                "type": "object"
                              },
                              "minItems": 1,
                              "type": "array"
                            }
                          },
                          "required": [
                            "validation_errors"
                          ],
                          "type": "object"
                        },
                        "status": {
                          "description": "HTTP status code for validation errors",
                          "enum": [400]
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "description": "Validation error response extending the base error response",
                  "title": "Validation Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "code": {
                          "enum": [
                            "unauthorized"
                          ]
                        },
                        "status": {
                          "enum": [403]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource Not Found",
            "content": {
              "application/problem+json": {
                "schema": {
                  "oneOf": [
                    {
                      "allOf": [
                        {
                          "additionalProperties": false,
                          "description": "Standard error response structure for API errors",
                          "properties": {
                            "code": {
                              "description": "Error code identifying the specific error type",
                              "pattern": "^[a-z]+\\.[a-z_]+$",
                              "type": "string"
                            },
                            "correlationId": {
                              "description": "Unique correlation ID linking this error to the original request for tracing",
                              "example": "123e4567-e89b-12d3-a456-426614174111",
                              "format": "uuid",
                              "type": "string"
                            },
                            "instance": {
                              "description": "Request path where the error occurred",
                              "example": "/api/v1/example/123",
                              "pattern": "^/api/v[0-9]+/",
                              "type": "string"
                            },
                            "message": {
                              "description": "Human readable error message explaining what went wrong",
                              "example": "Something went wrong",
                              "maxLength": 500,
                              "type": "string"
                            },
                            "metadata": {
                              "additionalProperties": true,
                              "description": "Error-specific metadata providing additional context about the error",
                              "example": {
                                "field": "username"
                              },
                              "type": "object"
                            },
                            "stack": {
                              "description": "Error stack trace (only included in development environments)",
                              "example": "Error: Example error\n    at example.js:10:5",
                              "type": "string"
                            },
                            "status": {
                              "description": "HTTP status code indicating the type of error",
                              "maximum": 599,
                              "minimum": 400,
                              "type": "integer"
                            },
                            "timestamp": {
                              "description": "UNIX timestamp when the error occurred",
                              "example": 1690000001,
                              "format": "int64",
                              "minimum": 0,
                              "type": "integer"
                            }
                          },
                          "required": [
                            "code",
                            "status",
                            "timestamp"
                          ],
                          "title": "Error Response",
                          "type": "object"
                        },
                        {
                          "properties": {
                            "code": {
                              "enum": [
                                "thread.not.found"
                              ]
                            },
                            "status": {
                              "enum": [404]
                            }
                          }
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "additionalProperties": false,
                          "description": "Standard error response structure for API errors",
                          "properties": {
                            "code": {
                              "description": "Error code identifying the specific error type",
                              "pattern": "^[a-z]+\\.[a-z_]+$",
                              "type": "string"
                            },
                            "correlationId": {
                              "description": "Unique correlation ID linking this error to the original request for tracing",
                              "example": "123e4567-e89b-12d3-a456-426614174111",
                              "format": "uuid",
                              "type": "string"
                            },
                            "instance": {
                              "description": "Request path where the error occurred",
                              "example": "/api/v1/example/123",
                              "pattern": "^/api/v[0-9]+/",
                              "type": "string"
                            },
                            "message": {
                              "description": "Human readable error message explaining what went wrong",
                              "example": "Something went wrong",
                              "maxLength": 500,
                              "type": "string"
                            },
                            "metadata": {
                              "additionalProperties": true,
                              "description": "Error-specific metadata providing additional context about the error",
                              "example": {
                                "field": "username"
                              },
                              "type": "object"
                            },
                            "stack": {
                              "description": "Error stack trace (only included in development environments)",
                              "example": "Error: Example error\n    at example.js:10:5",
                              "type": "string"
                            },
                            "status": {
                              "description": "HTTP status code indicating the type of error",
                              "maximum": 599,
                              "minimum": 400,
                              "type": "integer"
                            },
                            "timestamp": {
                              "description": "UNIX timestamp when the error occurred",
                              "example": 1690000001,
                              "format": "int64",
                              "minimum": 0,
                              "type": "integer"
                            }
                          },
                          "required": [
                            "code",
                            "status",
                            "timestamp"
                          ],
                          "title": "Error Response",
                          "type": "object"
                        },
                        {
                          "properties": {
                            "code": {
                              "enum": [
                                "assistant.not.found"
                              ]
                            },
                            "status": {
                              "enum": [404]
                            }
                          },
                          "type": "object"
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "additionalProperties": false,
                          "description": "Standard error response structure for API errors",
                          "properties": {
                            "code": {
                              "description": "Error code identifying the specific error type",
                              "pattern": "^[a-z]+\\.[a-z_]+$",
                              "type": "string"
                            },
                            "correlationId": {
                              "description": "Unique correlation ID linking this error to the original request for tracing",
                              "example": "123e4567-e89b-12d3-a456-426614174111",
                              "format": "uuid",
                              "type": "string"
                            },
                            "instance": {
                              "description": "Request path where the error occurred",
                              "example": "/api/v1/example/123",
                              "pattern": "^/api/v[0-9]+/",
                              "type": "string"
                            },
                            "message": {
                              "description": "Human readable error message explaining what went wrong",
                              "example": "Something went wrong",
                              "maxLength": 500,
                              "type": "string"
                            },
                            "metadata": {
                              "additionalProperties": true,
                              "description": "Error-specific metadata providing additional context about the error",
                              "example": {
                                "field": "username"
                              },
                              "type": "object"
                            },
                            "stack": {
                              "description": "Error stack trace (only included in development environments)",
                              "example": "Error: Example error\n    at example.js:10:5",
                              "type": "string"
                            },
                            "status": {
                              "description": "HTTP status code indicating the type of error",
                              "maximum": 599,
                              "minimum": 400,
                              "type": "integer"
                            },
                            "timestamp": {
                              "description": "UNIX timestamp when the error occurred",
                              "example": 1690000001,
                              "format": "int64",
                              "minimum": 0,
                              "type": "integer"
                            }
                          },
                          "required": [
                            "code",
                            "status",
                            "timestamp"
                          ],
                          "title": "Error Response",
                          "type": "object"
                        },
                        {
                          "properties": {
                            "code": {
                              "enum": [
                                "organization.not.found"
                              ]
                            },
                            "status": {
                              "enum": [404]
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Chat Regenerate Failed",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "code": {
                          "enum": [
                            "chat.regenerate.failed"
                          ]
                        },
                        "status": {
                          "enum": [500]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/folders/new": {
      "post": {
        "tags": [
          "folders"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "additionalProperties": false,
                "description": "Request body for creating a new folder",
                "properties": {
                  "assistantId": {
                    "description": "UUID of the assistant this folder belongs to",
                    "example": "123e4567-e89b-12d3-a456-426614174000",
                    "format": "uuid",
                    "type": "string"
                  },
                  "name": {
                    "description": "Name of the folder",
                    "example": "My Documents",
                    "minLength": 1,
                    "type": "string"
                  },
                  "parentId": {
                    "description": "UUID of the parent folder (optional, omit for root folder)",
                    "example": "def01234-567a-8bcd-9012-3456789abcde",
                    "format": "uuid",
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "assistantId"
                ],
                "title": "Create Folder Body",
                "type": "object"
              }
            }
          },
          "required": true,
          "description": "Request body for creating a new folder"
        },
        "responses": {
          "200": {
            "description": "Folder Created Successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard response envelope containing event information and data payload",
                      "properties": {
                        "data": {
                          "description": "Response data payload containing the actual response content",
                          "type": "object"
                        },
                        "event": {
                          "additionalProperties": false,
                          "description": "Event information describing the operation performed",
                          "properties": {
                            "code": {
                              "description": "Event code identifying the specific operation that occurred",
                              "pattern": "^[a-z]+\\.[a-z_]+$",
                              "type": "string"
                            },
                            "correlationId": {
                              "description": "Unique correlation ID linking this event to the original request for tracing",
                              "example": "123e4567-e89b-12d3-a456-426614174000",
                              "format": "uuid",
                              "type": "string"
                            },
                            "metadata": {
                              "additionalProperties": true,
                              "description": "Event-specific metadata providing additional context",
                              "example": {
                                "field": "value"
                              },
                              "type": "object"
                            },
                            "payload": {
                              "additionalProperties": true,
                              "description": "Event payload containing detailed information about the event",
                              "example": {
                                "field": "value"
                              },
                              "type": "object"
                            }
                          },
                          "required": [
                            "code"
                          ],
                          "type": "object"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the response was generated",
                          "example": 1690000000,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "event",
                        "timestamp"
                      ],
                      "title": "Reply Envelope",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "data": {
                          "additionalProperties": false,
                          "properties": {
                            "folder": {
                              "additionalProperties": false,
                              "description": "Folder entity for organizing files in a hierarchical structure",
                              "properties": {
                                "archived": {
                                  "description": "Whether the folder has been archived (soft deleted)",
                                  "example": false,
                                  "type": "boolean"
                                },
                                "archivedAt": {
                                  "description": "Timestamp when folder was archived, or null if not archived",
                                  "example": 1726282800,
                                  "format": "int64",
                                  "minimum": 0,
                                  "nullable": true,
                                  "type": "number"
                                },
                                "archivedBy": {
                                  "description": "ID of user who archived the folder, or null if not archived",
                                  "example": "123e4567-e89b-12d3-a456-426614174000",
                                  "format": "uuid",
                                  "nullable": true,
                                  "type": "string"
                                },
                                "assistantId": {
                                  "description": "UUID of the assistant this folder is associated with",
                                  "example": "550e8400-e29b-41d4-a716-446655440000",
                                  "format": "uuid",
                                  "type": "string"
                                },
                                "createdAt": {
                                  "description": "UNIX timestamp when the folder was created",
                                  "example": 1726282800,
                                  "format": "int64",
                                  "minimum": 0,
                                  "type": "number"
                                },
                                "createdBy": {
                                  "description": "UUID of the user who created the folder",
                                  "example": "123e4567-e89b-12d3-a456-426614174000",
                                  "format": "uuid",
                                  "type": "string"
                                },
                                "files": {
                                  "description": "Array of file IDs contained in this folder",
                                  "example": [
                                    "111a2222-a11b-22c2-b333-444444444444",
                                    "222b3333-b22c-33d3-c444-555555555555"
                                  ],
                                  "items": {
                                    "description": "UUID of a file in this folder",
                                    "format": "uuid",
                                    "type": "string"
                                  },
                                  "type": "array"
                                },
                                "folder": {
                                  "description": "ID of parent folder, or null if this is a root folder",
                                  "example": "770g9600-g40d-63f6-c938-668877662222",
                                  "format": "uuid",
                                  "nullable": true,
                                  "type": "string"
                                },
                                "id": {
                                  "description": "Unique identifier for the folder",
                                  "example": "770g9600-g40d-63f6-c938-668877662222",
                                  "format": "uuid",
                                  "type": "string"
                                },
                                "name": {
                                  "description": "Display name of the folder",
                                  "example": "Project Documents",
                                  "type": "string"
                                },
                                "organization": {
                                  "description": "UUID of the organization this folder belongs to",
                                  "example": "660f9500-f30c-52e5-b827-557766551111",
                                  "format": "uuid",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "id",
                                "archived",
                                "assistant",
                                "createdAt",
                                "createdBy",
                                "files",
                                "name",
                                "organization"
                              ],
                              "title": "Folder",
                              "type": "object"
                            }
                          },
                          "required": [
                            "folder"
                          ],
                          "type": "object"
                        },
                        "event": {
                          "properties": {
                            "code": {
                              "enum": [
                                "folder.created"
                              ]
                            }
                          },
                          "type": "object"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Validation Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "description": "Validation error response with detailed field-level errors",
                      "properties": {
                        "code": {
                          "description": "Fixed error code for validation errors",
                          "enum": [
                            "validation.error"
                          ]
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Validation-specific metadata containing detailed error information",
                          "properties": {
                            "validation_errors": {
                              "description": "Array of field-level validation errors",
                              "items": {
                                "additionalProperties": false,
                                "description": "Individual field validation error",
                                "properties": {
                                  "code": {
                                    "description": "Specific validation error code for this field",
                                    "example": "required",
                                    "type": "string"
                                  },
                                  "params": {
                                    "additionalProperties": true,
                                    "description": "Validation parameters providing context for the error",
                                    "example": {
                                      "expectedType": "string",
                                      "receivedType": "number"
                                    },
                                    "type": "object"
                                  },
                                  "path": {
                                    "description": "JSON path to the field that failed validation",
                                    "example": "/username",
                                    "pattern": "^/",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "code",
                                  "path",
                                  "params"
                                ],
                                "type": "object"
                              },
                              "minItems": 1,
                              "type": "array"
                            }
                          },
                          "required": [
                            "validation_errors"
                          ],
                          "type": "object"
                        },
                        "status": {
                          "description": "HTTP status code for validation errors",
                          "enum": [400]
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "description": "Validation error response extending the base error response",
                  "title": "Validation Error"
                }
              }
            }
          },
          "401": {
            "description": "Folder Authentication Failed",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "code": {
                          "enum": [
                            "unauthorized"
                          ]
                        },
                        "status": {
                          "enum": [403]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Folder Not Found",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "code": {
                          "enum": [
                            "folder.not.found"
                          ]
                        },
                        "status": {
                          "enum": [404]
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "409": {
            "description": "Folder Already Exists",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "code": {
                          "enum": [
                            "folder.conflict"
                          ]
                        },
                        "status": {
                          "enum": [409]
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Folder Create Failed",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "code": {
                          "enum": [
                            "foldercreate.failed"
                          ]
                        },
                        "status": {
                          "enum": [500]
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/folders/list": {
      "post": {
        "tags": [
          "folders"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "additionalProperties": false,
                "description": "Request body for listing folders with filtering and pagination",
                "properties": {
                  "archived": {
                    "description": "Filter by archived status",
                    "type": "boolean"
                  },
                  "assistantId": {
                    "description": "UUID of the assistant to list folders for",
                    "format": "uuid",
                    "type": "string"
                  },
                  "date": {
                    "additionalProperties": false,
                    "description": "Date range filter for folder creation",
                    "properties": {
                      "end": {
                        "anyOf": [
                          {
                            "type": "string"
                          },
                          {
                            "type": "number"
                          }
                        ],
                        "description": "End date for filtering (ISO string, timestamp, or Date)"
                      },
                      "start": {
                        "anyOf": [
                          {
                            "type": "string"
                          },
                          {
                            "type": "number"
                          }
                        ],
                        "description": "Start date for filtering (ISO string, timestamp, or Date)"
                      }
                    },
                    "type": "object"
                  },
                  "limit": {
                    "description": "Maximum number of folders to return per page",
                    "minimum": 1,
                    "type": "integer"
                  },
                  "order": {
                    "description": "Sort order for the results",
                    "enum": [
                      "asc",
                      "desc"
                    ],
                    "type": "string"
                  },
                  "page": {
                    "description": "Page number for pagination (1-based)",
                    "minimum": 1,
                    "type": "integer"
                  },
                  "parentId": {
                    "description": "UUID of the parent folder to list subfolders for",
                    "format": "uuid",
                    "type": "string"
                  },
                  "root": {
                    "description": "Filter for root-level folders (no parent)",
                    "type": "boolean"
                  }
                },
                "title": "List Folders Body",
                "type": "object"
              }
            }
          },
          "description": "Request body for listing folders with filtering and pagination"
        },
        "responses": {
          "200": {
            "description": "Folders Listed Successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard response envelope containing event information and data payload",
                      "properties": {
                        "data": {
                          "description": "Response data payload containing the actual response content",
                          "type": "object"
                        },
                        "event": {
                          "additionalProperties": false,
                          "description": "Event information describing the operation performed",
                          "properties": {
                            "code": {
                              "description": "Event code identifying the specific operation that occurred",
                              "pattern": "^[a-z]+\\.[a-z_]+$",
                              "type": "string"
                            },
                            "correlationId": {
                              "description": "Unique correlation ID linking this event to the original request for tracing",
                              "example": "123e4567-e89b-12d3-a456-426614174000",
                              "format": "uuid",
                              "type": "string"
                            },
                            "metadata": {
                              "additionalProperties": true,
                              "description": "Event-specific metadata providing additional context",
                              "example": {
                                "field": "value"
                              },
                              "type": "object"
                            },
                            "payload": {
                              "additionalProperties": true,
                              "description": "Event payload containing detailed information about the event",
                              "example": {
                                "field": "value"
                              },
                              "type": "object"
                            }
                          },
                          "required": [
                            "code"
                          ],
                          "type": "object"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the response was generated",
                          "example": 1690000000,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "event",
                        "timestamp"
                      ],
                      "title": "Reply Envelope",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "data": {
                          "additionalProperties": false,
                          "properties": {
                            "folders": {
                              "items": {
                                "additionalProperties": false,
                                "description": "Folder entity for organizing files in a hierarchical structure",
                                "properties": {
                                  "archived": {
                                    "description": "Whether the folder has been archived (soft deleted)",
                                    "example": false,
                                    "type": "boolean"
                                  },
                                  "archivedAt": {
                                    "description": "Timestamp when folder was archived, or null if not archived",
                                    "example": 1726282800,
                                    "format": "int64",
                                    "minimum": 0,
                                    "nullable": true,
                                    "type": "number"
                                  },
                                  "archivedBy": {
                                    "description": "ID of user who archived the folder, or null if not archived",
                                    "example": "123e4567-e89b-12d3-a456-426614174000",
                                    "format": "uuid",
                                    "nullable": true,
                                    "type": "string"
                                  },
                                  "assistantId": {
                                    "description": "UUID of the assistant this folder is associated with",
                                    "example": "550e8400-e29b-41d4-a716-446655440000",
                                    "format": "uuid",
                                    "type": "string"
                                  },
                                  "createdAt": {
                                    "description": "UNIX timestamp when the folder was created",
                                    "example": 1726282800,
                                    "format": "int64",
                                    "minimum": 0,
                                    "type": "number"
                                  },
                                  "createdBy": {
                                    "description": "UUID of the user who created the folder",
                                    "example": "123e4567-e89b-12d3-a456-426614174000",
                                    "format": "uuid",
                                    "type": "string"
                                  },
                                  "files": {
                                    "description": "Array of file IDs contained in this folder",
                                    "example": [
                                      "111a2222-a11b-22c2-b333-444444444444",
                                      "222b3333-b22c-33d3-c444-555555555555"
                                    ],
                                    "items": {
                                      "description": "UUID of a file in this folder",
                                      "format": "uuid",
                                      "type": "string"
                                    },
                                    "type": "array"
                                  },
                                  "folder": {
                                    "description": "ID of parent folder, or null if this is a root folder",
                                    "example": "770g9600-g40d-63f6-c938-668877662222",
                                    "format": "uuid",
                                    "nullable": true,
                                    "type": "string"
                                  },
                                  "id": {
                                    "description": "Unique identifier for the folder",
                                    "example": "770g9600-g40d-63f6-c938-668877662222",
                                    "format": "uuid",
                                    "type": "string"
                                  },
                                  "name": {
                                    "description": "Display name of the folder",
                                    "example": "Project Documents",
                                    "type": "string"
                                  },
                                  "organization": {
                                    "description": "UUID of the organization this folder belongs to",
                                    "example": "660f9500-f30c-52e5-b827-557766551111",
                                    "format": "uuid",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "id",
                                  "archived",
                                  "assistant",
                                  "createdAt",
                                  "createdBy",
                                  "files",
                                  "name",
                                  "organization"
                                ],
                                "title": "Folder",
                                "type": "object"
                              },
                              "type": "array"
                            }
                          },
                          "required": [
                            "folders"
                          ],
                          "type": "object"
                        },
                        "event": {
                          "properties": {
                            "code": {
                              "enum": [
                                "folders.listed"
                              ]
                            }
                          },
                          "type": "object"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Validation Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "description": "Validation error response with detailed field-level errors",
                      "properties": {
                        "code": {
                          "description": "Fixed error code for validation errors",
                          "enum": [
                            "validation.error"
                          ]
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Validation-specific metadata containing detailed error information",
                          "properties": {
                            "validation_errors": {
                              "description": "Array of field-level validation errors",
                              "items": {
                                "additionalProperties": false,
                                "description": "Individual field validation error",
                                "properties": {
                                  "code": {
                                    "description": "Specific validation error code for this field",
                                    "example": "required",
                                    "type": "string"
                                  },
                                  "params": {
                                    "additionalProperties": true,
                                    "description": "Validation parameters providing context for the error",
                                    "example": {
                                      "expectedType": "string",
                                      "receivedType": "number"
                                    },
                                    "type": "object"
                                  },
                                  "path": {
                                    "description": "JSON path to the field that failed validation",
                                    "example": "/username",
                                    "pattern": "^/",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "code",
                                  "path",
                                  "params"
                                ],
                                "type": "object"
                              },
                              "minItems": 1,
                              "type": "array"
                            }
                          },
                          "required": [
                            "validation_errors"
                          ],
                          "type": "object"
                        },
                        "status": {
                          "description": "HTTP status code for validation errors",
                          "enum": [400]
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "description": "Validation error response extending the base error response",
                  "title": "Validation Error"
                }
              }
            }
          },
          "401": {
            "description": "Folder Authentication Failed",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "code": {
                          "enum": [
                            "unauthorized"
                          ]
                        },
                        "status": {
                          "enum": [403]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Folder Not Found",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "code": {
                          "enum": [
                            "folder.not.found"
                          ]
                        },
                        "status": {
                          "enum": [404]
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Folder List Failed",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "code": {
                          "enum": [
                            "folderlist.failed"
                          ]
                        },
                        "status": {
                          "enum": [500]
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/folders/{id}": {
      "get": {
        "tags": [
          "folders"
        ],
        "parameters": [
          {
            "schema": {
              "format": "uuid",
              "type": "string"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Folder Retrieved Successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard response envelope containing event information and data payload",
                      "properties": {
                        "data": {
                          "description": "Response data payload containing the actual response content",
                          "type": "object"
                        },
                        "event": {
                          "additionalProperties": false,
                          "description": "Event information describing the operation performed",
                          "properties": {
                            "code": {
                              "description": "Event code identifying the specific operation that occurred",
                              "pattern": "^[a-z]+\\.[a-z_]+$",
                              "type": "string"
                            },
                            "correlationId": {
                              "description": "Unique correlation ID linking this event to the original request for tracing",
                              "example": "123e4567-e89b-12d3-a456-426614174000",
                              "format": "uuid",
                              "type": "string"
                            },
                            "metadata": {
                              "additionalProperties": true,
                              "description": "Event-specific metadata providing additional context",
                              "example": {
                                "field": "value"
                              },
                              "type": "object"
                            },
                            "payload": {
                              "additionalProperties": true,
                              "description": "Event payload containing detailed information about the event",
                              "example": {
                                "field": "value"
                              },
                              "type": "object"
                            }
                          },
                          "required": [
                            "code"
                          ],
                          "type": "object"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the response was generated",
                          "example": 1690000000,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "event",
                        "timestamp"
                      ],
                      "title": "Reply Envelope",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "data": {
                          "additionalProperties": false,
                          "properties": {
                            "folder": {
                              "additionalProperties": false,
                              "description": "Folder entity for organizing files in a hierarchical structure",
                              "properties": {
                                "archived": {
                                  "description": "Whether the folder has been archived (soft deleted)",
                                  "example": false,
                                  "type": "boolean"
                                },
                                "archivedAt": {
                                  "description": "Timestamp when folder was archived, or null if not archived",
                                  "example": 1726282800,
                                  "format": "int64",
                                  "minimum": 0,
                                  "nullable": true,
                                  "type": "number"
                                },
                                "archivedBy": {
                                  "description": "ID of user who archived the folder, or null if not archived",
                                  "example": "123e4567-e89b-12d3-a456-426614174000",
                                  "format": "uuid",
                                  "nullable": true,
                                  "type": "string"
                                },
                                "assistantId": {
                                  "description": "UUID of the assistant this folder is associated with",
                                  "example": "550e8400-e29b-41d4-a716-446655440000",
                                  "format": "uuid",
                                  "type": "string"
                                },
                                "createdAt": {
                                  "description": "UNIX timestamp when the folder was created",
                                  "example": 1726282800,
                                  "format": "int64",
                                  "minimum": 0,
                                  "type": "number"
                                },
                                "createdBy": {
                                  "description": "UUID of the user who created the folder",
                                  "example": "123e4567-e89b-12d3-a456-426614174000",
                                  "format": "uuid",
                                  "type": "string"
                                },
                                "files": {
                                  "description": "Array of file IDs contained in this folder",
                                  "example": [
                                    "111a2222-a11b-22c2-b333-444444444444",
                                    "222b3333-b22c-33d3-c444-555555555555"
                                  ],
                                  "items": {
                                    "description": "UUID of a file in this folder",
                                    "format": "uuid",
                                    "type": "string"
                                  },
                                  "type": "array"
                                },
                                "folder": {
                                  "description": "ID of parent folder, or null if this is a root folder",
                                  "example": "770g9600-g40d-63f6-c938-668877662222",
                                  "format": "uuid",
                                  "nullable": true,
                                  "type": "string"
                                },
                                "id": {
                                  "description": "Unique identifier for the folder",
                                  "example": "770g9600-g40d-63f6-c938-668877662222",
                                  "format": "uuid",
                                  "type": "string"
                                },
                                "name": {
                                  "description": "Display name of the folder",
                                  "example": "Project Documents",
                                  "type": "string"
                                },
                                "organization": {
                                  "description": "UUID of the organization this folder belongs to",
                                  "example": "660f9500-f30c-52e5-b827-557766551111",
                                  "format": "uuid",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "id",
                                "archived",
                                "assistant",
                                "createdAt",
                                "createdBy",
                                "files",
                                "name",
                                "organization"
                              ],
                              "title": "Folder",
                              "type": "object"
                            }
                          },
                          "required": [
                            "folder"
                          ],
                          "type": "object"
                        },
                        "event": {
                          "properties": {
                            "code": {
                              "enum": [
                                "folder.retrieved"
                              ]
                            }
                          },
                          "type": "object"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Validation Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "description": "Validation error response with detailed field-level errors",
                      "properties": {
                        "code": {
                          "description": "Fixed error code for validation errors",
                          "enum": [
                            "validation.error"
                          ]
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Validation-specific metadata containing detailed error information",
                          "properties": {
                            "validation_errors": {
                              "description": "Array of field-level validation errors",
                              "items": {
                                "additionalProperties": false,
                                "description": "Individual field validation error",
                                "properties": {
                                  "code": {
                                    "description": "Specific validation error code for this field",
                                    "example": "required",
                                    "type": "string"
                                  },
                                  "params": {
                                    "additionalProperties": true,
                                    "description": "Validation parameters providing context for the error",
                                    "example": {
                                      "expectedType": "string",
                                      "receivedType": "number"
                                    },
                                    "type": "object"
                                  },
                                  "path": {
                                    "description": "JSON path to the field that failed validation",
                                    "example": "/username",
                                    "pattern": "^/",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "code",
                                  "path",
                                  "params"
                                ],
                                "type": "object"
                              },
                              "minItems": 1,
                              "type": "array"
                            }
                          },
                          "required": [
                            "validation_errors"
                          ],
                          "type": "object"
                        },
                        "status": {
                          "description": "HTTP status code for validation errors",
                          "enum": [400]
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "description": "Validation error response extending the base error response",
                  "title": "Validation Error"
                }
              }
            }
          },
          "401": {
            "description": "Folder Authentication Failed",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "code": {
                          "enum": [
                            "unauthorized"
                          ]
                        },
                        "status": {
                          "enum": [403]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Folder Not Found",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "code": {
                          "enum": [
                            "folder.not.found"
                          ]
                        },
                        "status": {
                          "enum": [404]
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Folder Retrieve Failed",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "code": {
                          "enum": [
                            "folderretrieve.failed"
                          ]
                        },
                        "status": {
                          "enum": [500]
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "folders"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "additionalProperties": false,
                "description": "Request body for updating an existing folder",
                "properties": {
                  "description": {
                    "description": "Optional description for the folder",
                    "example": "Contains important project documents",
                    "type": "string"
                  },
                  "name": {
                    "description": "New name for the folder",
                    "example": "Updated Folder Name",
                    "minLength": 1,
                    "type": "string"
                  }
                },
                "title": "Update Folder Body",
                "type": "object"
              }
            }
          },
          "description": "Request body for updating an existing folder"
        },
        "parameters": [
          {
            "schema": {
              "format": "uuid",
              "type": "string"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Folder Updated Successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard response envelope containing event information and data payload",
                      "properties": {
                        "data": {
                          "description": "Response data payload containing the actual response content",
                          "type": "object"
                        },
                        "event": {
                          "additionalProperties": false,
                          "description": "Event information describing the operation performed",
                          "properties": {
                            "code": {
                              "description": "Event code identifying the specific operation that occurred",
                              "pattern": "^[a-z]+\\.[a-z_]+$",
                              "type": "string"
                            },
                            "correlationId": {
                              "description": "Unique correlation ID linking this event to the original request for tracing",
                              "example": "123e4567-e89b-12d3-a456-426614174000",
                              "format": "uuid",
                              "type": "string"
                            },
                            "metadata": {
                              "additionalProperties": true,
                              "description": "Event-specific metadata providing additional context",
                              "example": {
                                "field": "value"
                              },
                              "type": "object"
                            },
                            "payload": {
                              "additionalProperties": true,
                              "description": "Event payload containing detailed information about the event",
                              "example": {
                                "field": "value"
                              },
                              "type": "object"
                            }
                          },
                          "required": [
                            "code"
                          ],
                          "type": "object"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the response was generated",
                          "example": 1690000000,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "event",
                        "timestamp"
                      ],
                      "title": "Reply Envelope",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "data": {
                          "additionalProperties": false,
                          "description": "Simple success response for operations that do not return data",
                          "properties": {
                            "success": {
                              "description": "Boolean flag indicating the operation completed successfully",
                              "example": true,
                              "type": "boolean",
                              "enum": [true]
                            }
                          },
                          "required": [
                            "success"
                          ],
                          "title": "Success Response",
                          "type": "object"
                        },
                        "event": {
                          "properties": {
                            "code": {
                              "enum": [
                                "folder.updated"
                              ]
                            }
                          },
                          "type": "object"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Validation Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "description": "Validation error response with detailed field-level errors",
                      "properties": {
                        "code": {
                          "description": "Fixed error code for validation errors",
                          "enum": [
                            "validation.error"
                          ]
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Validation-specific metadata containing detailed error information",
                          "properties": {
                            "validation_errors": {
                              "description": "Array of field-level validation errors",
                              "items": {
                                "additionalProperties": false,
                                "description": "Individual field validation error",
                                "properties": {
                                  "code": {
                                    "description": "Specific validation error code for this field",
                                    "example": "required",
                                    "type": "string"
                                  },
                                  "params": {
                                    "additionalProperties": true,
                                    "description": "Validation parameters providing context for the error",
                                    "example": {
                                      "expectedType": "string",
                                      "receivedType": "number"
                                    },
                                    "type": "object"
                                  },
                                  "path": {
                                    "description": "JSON path to the field that failed validation",
                                    "example": "/username",
                                    "pattern": "^/",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "code",
                                  "path",
                                  "params"
                                ],
                                "type": "object"
                              },
                              "minItems": 1,
                              "type": "array"
                            }
                          },
                          "required": [
                            "validation_errors"
                          ],
                          "type": "object"
                        },
                        "status": {
                          "description": "HTTP status code for validation errors",
                          "enum": [400]
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "description": "Validation error response extending the base error response",
                  "title": "Validation Error"
                }
              }
            }
          },
          "401": {
            "description": "Folder Authentication Failed",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "code": {
                          "enum": [
                            "unauthorized"
                          ]
                        },
                        "status": {
                          "enum": [403]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Folder Not Found",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "code": {
                          "enum": [
                            "folder.not.found"
                          ]
                        },
                        "status": {
                          "enum": [404]
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Folder Update Failed",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "code": {
                          "enum": [
                            "folderupdate.failed"
                          ]
                        },
                        "status": {
                          "enum": [500]
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "folders"
        ],
        "parameters": [
          {
            "schema": {
              "format": "uuid",
              "type": "string"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Folder Deleted Successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard response envelope containing event information and data payload",
                      "properties": {
                        "data": {
                          "description": "Response data payload containing the actual response content",
                          "type": "object"
                        },
                        "event": {
                          "additionalProperties": false,
                          "description": "Event information describing the operation performed",
                          "properties": {
                            "code": {
                              "description": "Event code identifying the specific operation that occurred",
                              "pattern": "^[a-z]+\\.[a-z_]+$",
                              "type": "string"
                            },
                            "correlationId": {
                              "description": "Unique correlation ID linking this event to the original request for tracing",
                              "example": "123e4567-e89b-12d3-a456-426614174000",
                              "format": "uuid",
                              "type": "string"
                            },
                            "metadata": {
                              "additionalProperties": true,
                              "description": "Event-specific metadata providing additional context",
                              "example": {
                                "field": "value"
                              },
                              "type": "object"
                            },
                            "payload": {
                              "additionalProperties": true,
                              "description": "Event payload containing detailed information about the event",
                              "example": {
                                "field": "value"
                              },
                              "type": "object"
                            }
                          },
                          "required": [
                            "code"
                          ],
                          "type": "object"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the response was generated",
                          "example": 1690000000,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "event",
                        "timestamp"
                      ],
                      "title": "Reply Envelope",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "data": {
                          "additionalProperties": false,
                          "description": "Simple success response for operations that do not return data",
                          "properties": {
                            "success": {
                              "description": "Boolean flag indicating the operation completed successfully",
                              "example": true,
                              "type": "boolean",
                              "enum": [true]
                            }
                          },
                          "required": [
                            "success"
                          ],
                          "title": "Success Response",
                          "type": "object"
                        },
                        "event": {
                          "properties": {
                            "code": {
                              "enum": [
                                "folder.deleted"
                              ]
                            }
                          },
                          "type": "object"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Validation Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "description": "Validation error response with detailed field-level errors",
                      "properties": {
                        "code": {
                          "description": "Fixed error code for validation errors",
                          "enum": [
                            "validation.error"
                          ]
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Validation-specific metadata containing detailed error information",
                          "properties": {
                            "validation_errors": {
                              "description": "Array of field-level validation errors",
                              "items": {
                                "additionalProperties": false,
                                "description": "Individual field validation error",
                                "properties": {
                                  "code": {
                                    "description": "Specific validation error code for this field",
                                    "example": "required",
                                    "type": "string"
                                  },
                                  "params": {
                                    "additionalProperties": true,
                                    "description": "Validation parameters providing context for the error",
                                    "example": {
                                      "expectedType": "string",
                                      "receivedType": "number"
                                    },
                                    "type": "object"
                                  },
                                  "path": {
                                    "description": "JSON path to the field that failed validation",
                                    "example": "/username",
                                    "pattern": "^/",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "code",
                                  "path",
                                  "params"
                                ],
                                "type": "object"
                              },
                              "minItems": 1,
                              "type": "array"
                            }
                          },
                          "required": [
                            "validation_errors"
                          ],
                          "type": "object"
                        },
                        "status": {
                          "description": "HTTP status code for validation errors",
                          "enum": [400]
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "description": "Validation error response extending the base error response",
                  "title": "Validation Error"
                }
              }
            }
          },
          "401": {
            "description": "Folder Authentication Failed",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "code": {
                          "enum": [
                            "unauthorized"
                          ]
                        },
                        "status": {
                          "enum": [403]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Folder Not Found",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "code": {
                          "enum": [
                            "folder.not.found"
                          ]
                        },
                        "status": {
                          "enum": [404]
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Folder Delete Failed",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "code": {
                          "enum": [
                            "folderdelete.failed"
                          ]
                        },
                        "status": {
                          "enum": [500]
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/folders/{id}/archive": {
      "post": {
        "tags": [
          "folders"
        ],
        "parameters": [
          {
            "schema": {
              "format": "uuid",
              "type": "string"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Folder Archived Successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard response envelope containing event information and data payload",
                      "properties": {
                        "data": {
                          "description": "Response data payload containing the actual response content",
                          "type": "object"
                        },
                        "event": {
                          "additionalProperties": false,
                          "description": "Event information describing the operation performed",
                          "properties": {
                            "code": {
                              "description": "Event code identifying the specific operation that occurred",
                              "pattern": "^[a-z]+\\.[a-z_]+$",
                              "type": "string"
                            },
                            "correlationId": {
                              "description": "Unique correlation ID linking this event to the original request for tracing",
                              "example": "123e4567-e89b-12d3-a456-426614174000",
                              "format": "uuid",
                              "type": "string"
                            },
                            "metadata": {
                              "additionalProperties": true,
                              "description": "Event-specific metadata providing additional context",
                              "example": {
                                "field": "value"
                              },
                              "type": "object"
                            },
                            "payload": {
                              "additionalProperties": true,
                              "description": "Event payload containing detailed information about the event",
                              "example": {
                                "field": "value"
                              },
                              "type": "object"
                            }
                          },
                          "required": [
                            "code"
                          ],
                          "type": "object"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the response was generated",
                          "example": 1690000000,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "event",
                        "timestamp"
                      ],
                      "title": "Reply Envelope",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "data": {
                          "additionalProperties": false,
                          "properties": {
                            "folder": {
                              "additionalProperties": false,
                              "description": "Folder entity for organizing files in a hierarchical structure",
                              "properties": {
                                "archived": {
                                  "description": "Whether the folder has been archived (soft deleted)",
                                  "example": false,
                                  "type": "boolean"
                                },
                                "archivedAt": {
                                  "description": "Timestamp when folder was archived, or null if not archived",
                                  "example": 1726282800,
                                  "format": "int64",
                                  "minimum": 0,
                                  "nullable": true,
                                  "type": "number"
                                },
                                "archivedBy": {
                                  "description": "ID of user who archived the folder, or null if not archived",
                                  "example": "123e4567-e89b-12d3-a456-426614174000",
                                  "format": "uuid",
                                  "nullable": true,
                                  "type": "string"
                                },
                                "assistantId": {
                                  "description": "UUID of the assistant this folder is associated with",
                                  "example": "550e8400-e29b-41d4-a716-446655440000",
                                  "format": "uuid",
                                  "type": "string"
                                },
                                "createdAt": {
                                  "description": "UNIX timestamp when the folder was created",
                                  "example": 1726282800,
                                  "format": "int64",
                                  "minimum": 0,
                                  "type": "number"
                                },
                                "createdBy": {
                                  "description": "UUID of the user who created the folder",
                                  "example": "123e4567-e89b-12d3-a456-426614174000",
                                  "format": "uuid",
                                  "type": "string"
                                },
                                "files": {
                                  "description": "Array of file IDs contained in this folder",
                                  "example": [
                                    "111a2222-a11b-22c2-b333-444444444444",
                                    "222b3333-b22c-33d3-c444-555555555555"
                                  ],
                                  "items": {
                                    "description": "UUID of a file in this folder",
                                    "format": "uuid",
                                    "type": "string"
                                  },
                                  "type": "array"
                                },
                                "folder": {
                                  "description": "ID of parent folder, or null if this is a root folder",
                                  "example": "770g9600-g40d-63f6-c938-668877662222",
                                  "format": "uuid",
                                  "nullable": true,
                                  "type": "string"
                                },
                                "id": {
                                  "description": "Unique identifier for the folder",
                                  "example": "770g9600-g40d-63f6-c938-668877662222",
                                  "format": "uuid",
                                  "type": "string"
                                },
                                "name": {
                                  "description": "Display name of the folder",
                                  "example": "Project Documents",
                                  "type": "string"
                                },
                                "organization": {
                                  "description": "UUID of the organization this folder belongs to",
                                  "example": "660f9500-f30c-52e5-b827-557766551111",
                                  "format": "uuid",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "id",
                                "archived",
                                "assistant",
                                "createdAt",
                                "createdBy",
                                "files",
                                "name",
                                "organization"
                              ],
                              "title": "Folder",
                              "type": "object"
                            }
                          },
                          "required": [
                            "folder"
                          ],
                          "type": "object"
                        },
                        "event": {
                          "properties": {
                            "code": {
                              "enum": [
                                "folder.archived"
                              ]
                            }
                          },
                          "type": "object"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Validation Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "description": "Validation error response with detailed field-level errors",
                      "properties": {
                        "code": {
                          "description": "Fixed error code for validation errors",
                          "enum": [
                            "validation.error"
                          ]
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Validation-specific metadata containing detailed error information",
                          "properties": {
                            "validation_errors": {
                              "description": "Array of field-level validation errors",
                              "items": {
                                "additionalProperties": false,
                                "description": "Individual field validation error",
                                "properties": {
                                  "code": {
                                    "description": "Specific validation error code for this field",
                                    "example": "required",
                                    "type": "string"
                                  },
                                  "params": {
                                    "additionalProperties": true,
                                    "description": "Validation parameters providing context for the error",
                                    "example": {
                                      "expectedType": "string",
                                      "receivedType": "number"
                                    },
                                    "type": "object"
                                  },
                                  "path": {
                                    "description": "JSON path to the field that failed validation",
                                    "example": "/username",
                                    "pattern": "^/",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "code",
                                  "path",
                                  "params"
                                ],
                                "type": "object"
                              },
                              "minItems": 1,
                              "type": "array"
                            }
                          },
                          "required": [
                            "validation_errors"
                          ],
                          "type": "object"
                        },
                        "status": {
                          "description": "HTTP status code for validation errors",
                          "enum": [400]
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "description": "Validation error response extending the base error response",
                  "title": "Validation Error"
                }
              }
            }
          },
          "401": {
            "description": "Folder Authentication Failed",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "code": {
                          "enum": [
                            "unauthorized"
                          ]
                        },
                        "status": {
                          "enum": [403]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Folder Not Found",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "code": {
                          "enum": [
                            "folder.not.found"
                          ]
                        },
                        "status": {
                          "enum": [404]
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Folder Archive Failed",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "code": {
                          "enum": [
                            "folderarchive.failed"
                          ]
                        },
                        "status": {
                          "enum": [500]
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/folders/{id}/restore": {
      "post": {
        "tags": [
          "folders"
        ],
        "parameters": [
          {
            "schema": {
              "format": "uuid",
              "type": "string"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Folder Restored Successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard response envelope containing event information and data payload",
                      "properties": {
                        "data": {
                          "description": "Response data payload containing the actual response content",
                          "type": "object"
                        },
                        "event": {
                          "additionalProperties": false,
                          "description": "Event information describing the operation performed",
                          "properties": {
                            "code": {
                              "description": "Event code identifying the specific operation that occurred",
                              "pattern": "^[a-z]+\\.[a-z_]+$",
                              "type": "string"
                            },
                            "correlationId": {
                              "description": "Unique correlation ID linking this event to the original request for tracing",
                              "example": "123e4567-e89b-12d3-a456-426614174000",
                              "format": "uuid",
                              "type": "string"
                            },
                            "metadata": {
                              "additionalProperties": true,
                              "description": "Event-specific metadata providing additional context",
                              "example": {
                                "field": "value"
                              },
                              "type": "object"
                            },
                            "payload": {
                              "additionalProperties": true,
                              "description": "Event payload containing detailed information about the event",
                              "example": {
                                "field": "value"
                              },
                              "type": "object"
                            }
                          },
                          "required": [
                            "code"
                          ],
                          "type": "object"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the response was generated",
                          "example": 1690000000,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "event",
                        "timestamp"
                      ],
                      "title": "Reply Envelope",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "data": {
                          "additionalProperties": false,
                          "properties": {
                            "folder": {
                              "additionalProperties": false,
                              "description": "Folder entity for organizing files in a hierarchical structure",
                              "properties": {
                                "archived": {
                                  "description": "Whether the folder has been archived (soft deleted)",
                                  "example": false,
                                  "type": "boolean"
                                },
                                "archivedAt": {
                                  "description": "Timestamp when folder was archived, or null if not archived",
                                  "example": 1726282800,
                                  "format": "int64",
                                  "minimum": 0,
                                  "nullable": true,
                                  "type": "number"
                                },
                                "archivedBy": {
                                  "description": "ID of user who archived the folder, or null if not archived",
                                  "example": "123e4567-e89b-12d3-a456-426614174000",
                                  "format": "uuid",
                                  "nullable": true,
                                  "type": "string"
                                },
                                "assistantId": {
                                  "description": "UUID of the assistant this folder is associated with",
                                  "example": "550e8400-e29b-41d4-a716-446655440000",
                                  "format": "uuid",
                                  "type": "string"
                                },
                                "createdAt": {
                                  "description": "UNIX timestamp when the folder was created",
                                  "example": 1726282800,
                                  "format": "int64",
                                  "minimum": 0,
                                  "type": "number"
                                },
                                "createdBy": {
                                  "description": "UUID of the user who created the folder",
                                  "example": "123e4567-e89b-12d3-a456-426614174000",
                                  "format": "uuid",
                                  "type": "string"
                                },
                                "files": {
                                  "description": "Array of file IDs contained in this folder",
                                  "example": [
                                    "111a2222-a11b-22c2-b333-444444444444",
                                    "222b3333-b22c-33d3-c444-555555555555"
                                  ],
                                  "items": {
                                    "description": "UUID of a file in this folder",
                                    "format": "uuid",
                                    "type": "string"
                                  },
                                  "type": "array"
                                },
                                "folder": {
                                  "description": "ID of parent folder, or null if this is a root folder",
                                  "example": "770g9600-g40d-63f6-c938-668877662222",
                                  "format": "uuid",
                                  "nullable": true,
                                  "type": "string"
                                },
                                "id": {
                                  "description": "Unique identifier for the folder",
                                  "example": "770g9600-g40d-63f6-c938-668877662222",
                                  "format": "uuid",
                                  "type": "string"
                                },
                                "name": {
                                  "description": "Display name of the folder",
                                  "example": "Project Documents",
                                  "type": "string"
                                },
                                "organization": {
                                  "description": "UUID of the organization this folder belongs to",
                                  "example": "660f9500-f30c-52e5-b827-557766551111",
                                  "format": "uuid",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "id",
                                "archived",
                                "assistant",
                                "createdAt",
                                "createdBy",
                                "files",
                                "name",
                                "organization"
                              ],
                              "title": "Folder",
                              "type": "object"
                            }
                          },
                          "required": [
                            "folder"
                          ],
                          "type": "object"
                        },
                        "event": {
                          "properties": {
                            "code": {
                              "enum": [
                                "folder.restored"
                              ]
                            }
                          },
                          "type": "object"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Validation Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "description": "Validation error response with detailed field-level errors",
                      "properties": {
                        "code": {
                          "description": "Fixed error code for validation errors",
                          "enum": [
                            "validation.error"
                          ]
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Validation-specific metadata containing detailed error information",
                          "properties": {
                            "validation_errors": {
                              "description": "Array of field-level validation errors",
                              "items": {
                                "additionalProperties": false,
                                "description": "Individual field validation error",
                                "properties": {
                                  "code": {
                                    "description": "Specific validation error code for this field",
                                    "example": "required",
                                    "type": "string"
                                  },
                                  "params": {
                                    "additionalProperties": true,
                                    "description": "Validation parameters providing context for the error",
                                    "example": {
                                      "expectedType": "string",
                                      "receivedType": "number"
                                    },
                                    "type": "object"
                                  },
                                  "path": {
                                    "description": "JSON path to the field that failed validation",
                                    "example": "/username",
                                    "pattern": "^/",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "code",
                                  "path",
                                  "params"
                                ],
                                "type": "object"
                              },
                              "minItems": 1,
                              "type": "array"
                            }
                          },
                          "required": [
                            "validation_errors"
                          ],
                          "type": "object"
                        },
                        "status": {
                          "description": "HTTP status code for validation errors",
                          "enum": [400]
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "description": "Validation error response extending the base error response",
                  "title": "Validation Error"
                }
              }
            }
          },
          "401": {
            "description": "Folder Authentication Failed",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "code": {
                          "enum": [
                            "unauthorized"
                          ]
                        },
                        "status": {
                          "enum": [403]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Folder Not Found",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "code": {
                          "enum": [
                            "folder.not.found"
                          ]
                        },
                        "status": {
                          "enum": [404]
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Folder Restore Failed",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "code": {
                          "enum": [
                            "folderrestore.failed"
                          ]
                        },
                        "status": {
                          "enum": [500]
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/metrics/list": {
      "post": {
        "tags": [
          "metrics"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "additionalProperties": false,
                "description": "Request body for listing metrics with filtering and pagination",
                "properties": {
                  "archived": {
                    "default": false,
                    "description": "Filter for archived metrics. Defaults to false (non-archived only)",
                    "type": "boolean"
                  },
                  "date": {
                    "additionalProperties": false,
                    "description": "Date range filter for metric timestamps",
                    "properties": {
                      "end": {
                        "anyOf": [
                          {
                            "type": "string"
                          },
                          {
                            "type": "number"
                          }
                        ],
                        "description": "End date for filtering (ISO string, timestamp, or Date)"
                      },
                      "start": {
                        "anyOf": [
                          {
                            "type": "string"
                          },
                          {
                            "type": "number"
                          }
                        ],
                        "description": "Start date for filtering (ISO string, timestamp, or Date)"
                      }
                    },
                    "type": "object"
                  },
                  "limit": {
                    "default": 50,
                    "description": "Maximum number of metrics to return per page",
                    "example": 25,
                    "maximum": 100,
                    "minimum": 1,
                    "type": "integer"
                  },
                  "offset": {
                    "default": 0,
                    "description": "Number of metrics to skip for pagination",
                    "example": 0,
                    "minimum": 0,
                    "type": "integer"
                  },
                  "organizationId": {
                    "description": "UUID of the organization to list metrics for (must match authenticated user/API key organization)",
                    "example": "660f9500-f30c-52e5-b827-557766551111",
                    "format": "uuid",
                    "type": "string"
                  },
                  "resourceId": {
                    "description": "Filter metrics by specific resource ID",
                    "example": "123e4567-e89b-12d3-a456-426614174000",
                    "type": "string"
                  },
                  "resourceType": {
                    "description": "Filter metrics by resource type",
                    "enum": [
                      "apiKey",
                      "assistant",
                      "file",
                      "member",
                      "message",
                      "thread"
                    ],
                    "example": "assistant",
                    "type": "string"
                  },
                  "sort": {
                    "additionalProperties": false,
                    "description": "Sorting configuration for the results",
                    "properties": {
                      "by": {
                        "default": "createdAt",
                        "description": "Field to sort by",
                        "enum": [
                          "createdAt",
                          "timestamp"
                        ],
                        "type": "string"
                      },
                      "order": {
                        "default": "desc",
                        "description": "Sort order",
                        "enum": [
                          "asc",
                          "desc"
                        ],
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "timestamp": {
                    "additionalProperties": false,
                    "description": "Timestamp range filter for metric events",
                    "properties": {
                      "max": {
                        "description": "Maximum timestamp (Unix timestamp in milliseconds)",
                        "example": 1726282800000,
                        "type": "number"
                      },
                      "min": {
                        "description": "Minimum timestamp (Unix timestamp in milliseconds)",
                        "example": 1726196400000,
                        "type": "number"
                      }
                    },
                    "type": "object"
                  }
                },
                "title": "List Metrics Body",
                "type": "object"
              }
            }
          },
          "description": "Request body for listing metrics with filtering and pagination"
        },
        "responses": {
          "200": {
            "description": "Metrics listed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard response envelope containing event information and data payload",
                      "properties": {
                        "data": {
                          "description": "Response data payload containing the actual response content",
                          "type": "object"
                        },
                        "event": {
                          "additionalProperties": false,
                          "description": "Event information describing the operation performed",
                          "properties": {
                            "code": {
                              "description": "Event code identifying the specific operation that occurred",
                              "pattern": "^[a-z]+\\.[a-z_]+$",
                              "type": "string"
                            },
                            "correlationId": {
                              "description": "Unique correlation ID linking this event to the original request for tracing",
                              "example": "123e4567-e89b-12d3-a456-426614174000",
                              "format": "uuid",
                              "type": "string"
                            },
                            "metadata": {
                              "additionalProperties": true,
                              "description": "Event-specific metadata providing additional context",
                              "example": {
                                "field": "value"
                              },
                              "type": "object"
                            },
                            "payload": {
                              "additionalProperties": true,
                              "description": "Event payload containing detailed information about the event",
                              "example": {
                                "field": "value"
                              },
                              "type": "object"
                            }
                          },
                          "required": [
                            "code"
                          ],
                          "type": "object"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the response was generated",
                          "example": 1690000000,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "event",
                        "timestamp"
                      ],
                      "title": "Reply Envelope",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "data": {
                          "additionalProperties": false,
                          "description": "Paginated list of metrics with metadata",
                          "properties": {
                            "limit": {
                              "description": "Maximum number of metrics returned in this page",
                              "example": 50,
                              "type": "integer"
                            },
                            "metrics": {
                              "description": "Array of metric objects",
                              "items": {
                                "additionalProperties": false,
                                "description": "Metric object representing a single measurement or event",
                                "properties": {
                                  "archived": {
                                    "description": "Whether the metric is archived",
                                    "type": "boolean"
                                  },
                                  "archivedAt": {
                                    "description": "UNIX timestamp (ms) when the metric was archived",
                                    "example": 1726282800000,
                                    "type": "number"
                                  },
                                  "archivedBy": {
                                    "description": "ID of the user or API key that archived the metric",
                                    "example": "123e4567-e89b-12d3-a456-426614174000",
                                    "type": "string"
                                  },
                                  "createdAt": {
                                    "description": "UNIX timestamp when the metric was created",
                                    "example": 1726282800,
                                    "type": "number"
                                  },
                                  "id": {
                                    "description": "Unique identifier for the metric",
                                    "example": "123e4567-e89b-12d3-a456-426614174000",
                                    "format": "uuid",
                                    "type": "string"
                                  },
                                  "metadata": {
                                    "description": "Additional metadata associated with the metric",
                                    "example": {
                                      "action": "file_uploaded",
                                      "size": 1024
                                    },
                                    "type": "object"
                                  },
                                  "object": {
                                    "description": "Object type identifier",
                                    "enum": [
                                      "metric"
                                    ],
                                    "type": "string"
                                  },
                                  "organization": {
                                    "description": "ID of the organization this metric belongs to",
                                    "example": "660f9500-f30c-52e5-b827-557766551111",
                                    "format": "uuid",
                                    "type": "string"
                                  },
                                  "resourceId": {
                                    "description": "ID of the resource this metric is associated with",
                                    "example": "789e0123-e45b-67c8-d901-234567890abc",
                                    "format": "uuid",
                                    "type": "string"
                                  },
                                  "resourceType": {
                                    "description": "Type of resource this metric is associated with",
                                    "enum": [
                                      "apiKey",
                                      "assistant",
                                      "file",
                                      "member",
                                      "message",
                                      "thread"
                                    ],
                                    "example": "assistant",
                                    "type": "string"
                                  },
                                  "timestamp": {
                                    "description": "UNIX timestamp (ms) when the metric was recorded",
                                    "example": 1726282800000,
                                    "type": "number"
                                  }
                                },
                                "required": [
                                  "createdAt",
                                  "id",
                                  "metadata",
                                  "object",
                                  "organization",
                                  "resourceId",
                                  "resourceType",
                                  "timestamp"
                                ],
                                "title": "Metric",
                                "type": "object"
                              },
                              "type": "array"
                            },
                            "offset": {
                              "description": "Number of metrics skipped for pagination",
                              "example": 0,
                              "type": "integer"
                            },
                            "total": {
                              "description": "Total number of metrics matching the filters",
                              "example": 150,
                              "type": "integer"
                            }
                          },
                          "required": [
                            "limit",
                            "metrics",
                            "offset",
                            "total"
                          ],
                          "type": "object"
                        },
                        "event": {
                          "properties": {
                            "code": {
                              "enum": [
                                "metrics.listed"
                              ]
                            }
                          },
                          "type": "object"
                        }
                      },
                      "required": [
                        "data"
                      ],
                      "type": "object"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Validation Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "description": "Validation error response with detailed field-level errors",
                      "properties": {
                        "code": {
                          "description": "Fixed error code for validation errors",
                          "enum": [
                            "validation.error"
                          ]
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Validation-specific metadata containing detailed error information",
                          "properties": {
                            "validation_errors": {
                              "description": "Array of field-level validation errors",
                              "items": {
                                "additionalProperties": false,
                                "description": "Individual field validation error",
                                "properties": {
                                  "code": {
                                    "description": "Specific validation error code for this field",
                                    "example": "required",
                                    "type": "string"
                                  },
                                  "params": {
                                    "additionalProperties": true,
                                    "description": "Validation parameters providing context for the error",
                                    "example": {
                                      "expectedType": "string",
                                      "receivedType": "number"
                                    },
                                    "type": "object"
                                  },
                                  "path": {
                                    "description": "JSON path to the field that failed validation",
                                    "example": "/username",
                                    "pattern": "^/",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "code",
                                  "path",
                                  "params"
                                ],
                                "type": "object"
                              },
                              "minItems": 1,
                              "type": "array"
                            }
                          },
                          "required": [
                            "validation_errors"
                          ],
                          "type": "object"
                        },
                        "status": {
                          "description": "HTTP status code for validation errors",
                          "enum": [400]
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "description": "Validation error response extending the base error response",
                  "title": "Validation Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "code": {
                          "enum": [
                            "unauthorized"
                          ]
                        },
                        "status": {
                          "enum": [403]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "code": {
                          "enum": [
                            "metric.list.failed"
                          ]
                        },
                        "status": {
                          "enum": [500]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/metrics/{id}": {
      "get": {
        "tags": [
          "metrics"
        ],
        "parameters": [
          {
            "schema": {
              "example": "123e4567-e89b-12d3-a456-426614174000",
              "format": "uuid",
              "type": "string"
            },
            "in": "path",
            "name": "id",
            "required": true,
            "description": "Unique identifier of the metric"
          }
        ],
        "responses": {
          "200": {
            "description": "Metric retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard response envelope containing event information and data payload",
                      "properties": {
                        "data": {
                          "description": "Response data payload containing the actual response content",
                          "type": "object"
                        },
                        "event": {
                          "additionalProperties": false,
                          "description": "Event information describing the operation performed",
                          "properties": {
                            "code": {
                              "description": "Event code identifying the specific operation that occurred",
                              "pattern": "^[a-z]+\\.[a-z_]+$",
                              "type": "string"
                            },
                            "correlationId": {
                              "description": "Unique correlation ID linking this event to the original request for tracing",
                              "example": "123e4567-e89b-12d3-a456-426614174000",
                              "format": "uuid",
                              "type": "string"
                            },
                            "metadata": {
                              "additionalProperties": true,
                              "description": "Event-specific metadata providing additional context",
                              "example": {
                                "field": "value"
                              },
                              "type": "object"
                            },
                            "payload": {
                              "additionalProperties": true,
                              "description": "Event payload containing detailed information about the event",
                              "example": {
                                "field": "value"
                              },
                              "type": "object"
                            }
                          },
                          "required": [
                            "code"
                          ],
                          "type": "object"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the response was generated",
                          "example": 1690000000,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "event",
                        "timestamp"
                      ],
                      "title": "Reply Envelope",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "data": {
                          "additionalProperties": false,
                          "properties": {
                            "metric": {
                              "additionalProperties": false,
                              "description": "Metric object representing a single measurement or event",
                              "properties": {
                                "archived": {
                                  "description": "Whether the metric is archived",
                                  "type": "boolean"
                                },
                                "archivedAt": {
                                  "description": "UNIX timestamp (ms) when the metric was archived",
                                  "example": 1726282800000,
                                  "type": "number"
                                },
                                "archivedBy": {
                                  "description": "ID of the user or API key that archived the metric",
                                  "example": "123e4567-e89b-12d3-a456-426614174000",
                                  "type": "string"
                                },
                                "createdAt": {
                                  "description": "UNIX timestamp when the metric was created",
                                  "example": 1726282800,
                                  "type": "number"
                                },
                                "id": {
                                  "description": "Unique identifier for the metric",
                                  "example": "123e4567-e89b-12d3-a456-426614174000",
                                  "format": "uuid",
                                  "type": "string"
                                },
                                "metadata": {
                                  "description": "Additional metadata associated with the metric",
                                  "example": {
                                    "action": "file_uploaded",
                                    "size": 1024
                                  },
                                  "type": "object"
                                },
                                "object": {
                                  "description": "Object type identifier",
                                  "enum": [
                                    "metric"
                                  ],
                                  "type": "string"
                                },
                                "organization": {
                                  "description": "ID of the organization this metric belongs to",
                                  "example": "660f9500-f30c-52e5-b827-557766551111",
                                  "format": "uuid",
                                  "type": "string"
                                },
                                "resourceId": {
                                  "description": "ID of the resource this metric is associated with",
                                  "example": "789e0123-e45b-67c8-d901-234567890abc",
                                  "format": "uuid",
                                  "type": "string"
                                },
                                "resourceType": {
                                  "description": "Type of resource this metric is associated with",
                                  "enum": [
                                    "apiKey",
                                    "assistant",
                                    "file",
                                    "member",
                                    "message",
                                    "thread"
                                  ],
                                  "example": "assistant",
                                  "type": "string"
                                },
                                "timestamp": {
                                  "description": "UNIX timestamp (ms) when the metric was recorded",
                                  "example": 1726282800000,
                                  "type": "number"
                                }
                              },
                              "required": [
                                "createdAt",
                                "id",
                                "metadata",
                                "object",
                                "organization",
                                "resourceId",
                                "resourceType",
                                "timestamp"
                              ],
                              "title": "Metric",
                              "type": "object"
                            }
                          },
                          "required": [
                            "metric"
                          ],
                          "type": "object"
                        },
                        "event": {
                          "properties": {
                            "code": {
                              "enum": [
                                "metric.retrieved"
                              ]
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Validation Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "description": "Validation error response with detailed field-level errors",
                      "properties": {
                        "code": {
                          "description": "Fixed error code for validation errors",
                          "enum": [
                            "validation.error"
                          ]
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Validation-specific metadata containing detailed error information",
                          "properties": {
                            "validation_errors": {
                              "description": "Array of field-level validation errors",
                              "items": {
                                "additionalProperties": false,
                                "description": "Individual field validation error",
                                "properties": {
                                  "code": {
                                    "description": "Specific validation error code for this field",
                                    "example": "required",
                                    "type": "string"
                                  },
                                  "params": {
                                    "additionalProperties": true,
                                    "description": "Validation parameters providing context for the error",
                                    "example": {
                                      "expectedType": "string",
                                      "receivedType": "number"
                                    },
                                    "type": "object"
                                  },
                                  "path": {
                                    "description": "JSON path to the field that failed validation",
                                    "example": "/username",
                                    "pattern": "^/",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "code",
                                  "path",
                                  "params"
                                ],
                                "type": "object"
                              },
                              "minItems": 1,
                              "type": "array"
                            }
                          },
                          "required": [
                            "validation_errors"
                          ],
                          "type": "object"
                        },
                        "status": {
                          "description": "HTTP status code for validation errors",
                          "enum": [400]
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "description": "Validation error response extending the base error response",
                  "title": "Validation Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "code": {
                          "enum": [
                            "unauthorized"
                          ]
                        },
                        "status": {
                          "enum": [403]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Metric Not Found",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "code": {
                          "enum": [
                            "metric.not.found"
                          ]
                        },
                        "status": {
                          "enum": [404]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "description": "Standard error response structure for API errors",
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error type",
                          "pattern": "^[a-z]+\\.[a-z_]+$",
                          "type": "string"
                        },
                        "correlationId": {
                          "description": "Unique correlation ID linking this error to the original request for tracing",
                          "example": "123e4567-e89b-12d3-a456-426614174111",
                          "format": "uuid",
                          "type": "string"
                        },
                        "instance": {
                          "description": "Request path where the error occurred",
                          "example": "/api/v1/example/123",
                          "pattern": "^/api/v[0-9]+/",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human readable error message explaining what went wrong",
                          "example": "Something went wrong",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "metadata": {
                          "additionalProperties": true,
                          "description": "Error-specific metadata providing additional context about the error",
                          "example": {
                            "field": "username"
                          },
                          "type": "object"
                        },
                        "stack": {
                          "description": "Error stack trace (only included in development environments)",
                          "example": "Error: Example error\n    at example.js:10:5",
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code indicating the type of error",
                          "maximum": 599,
                          "minimum": 400,
                          "type": "integer"
                        },
                        "timestamp": {
                          "description": "UNIX timestamp when the error occurred",
                          "example": 1690000001,
                          "format": "int64",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "code",
                        "status",
                        "timestamp"
                      ],
                      "title": "Error Response",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "code": {
                          "enum": [
                            "metric.retrieve.failed"
                          ]
                        },
                        "status": {
                          "enum": [500]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    }
  },
  "servers": [
    {
      "description": "Development server",
      "url": "http://0.0.0.0:3200"
    }
  ],
  "security": [
    {
      "bearerAuth": []
    },
    {
      "apiKey": []
    }
  ],
  "tags": [
    {
      "description": "Authentication related endpoints",
      "name": "auth"
    },
    {
      "description": "User management endpoints",
      "name": "users"
    },
    {
      "description": "AI Assistant management endpoints",
      "name": "assistants"
    },
    {
      "description": "Conversation thread endpoints",
      "name": "threads"
    },
    {
      "description": "File management endpoints",
      "name": "files"
    },
    {
      "description": "Folder management endpoints",
      "name": "folders"
    },
    {
      "description": "Chat and messaging endpoints",
      "name": "chat"
    },
    {
      "description": "Organization management endpoints",
      "name": "organizations"
    },
    {
      "description": "Role and permission management endpoints",
      "name": "roles"
    },
    {
      "description": "Invitation management endpoints",
      "name": "invitations"
    },
    {
      "description": "System logging endpoints",
      "name": "logs"
    },
    {
      "description": "File upload endpoints",
      "name": "uploads"
    },
    {
      "description": "API Key management endpoints",
      "name": "apiKeys"
    },
    {
      "description": "System metrics endpoints",
      "name": "metrics"
    }
  ]
}